{"version":3,"sources":["../src/index.ts","../src/Carousel.tsx","../../components/UnstyledButton/src/UnstyledButton.tsx","css-module:./UnstyledButton.module.css#css-module","../../components/Accordion/src/AccordionChevron.tsx","../../components/_utils/create-safe-context/create-safe-context.tsx","../../components/_utils/create-optional-context/create-optional-context.tsx","../../components/_utils/use-hovered/use-hovered.ts","../../components/_utils/create-use-external-events/create-use-external-events.ts","../src/get-chevron-rotation.ts","../src/Carousel.context.ts","../src/CarouselSlide/CarouselSlide.tsx","../src/CarouselVariables/CarouselVariables.tsx","css-module:./Carousel.module.css#css-module","../src/use-animation-offset-effect.ts"],"sourcesContent":["import type { EmblaCarouselType } from 'embla-carousel-react';\n\nexport type Embla = EmblaCarouselType;\nexport { Carousel } from './Carousel';\nexport { useAnimationOffsetEffect } from './use-animation-offset-effect';\nexport { CarouselSlide } from './CarouselSlide/CarouselSlide';\nexport type {\n  CarouselProps,\n  CarouselCssVariables,\n  CarouselFactory,\n  CarouselStylesNames,\n} from './Carousel';\n","import React, { Children, useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  RaikouSpacing,\n  StyleProp,\n  useDirection,\n  useRandomClassName,\n  rem,\n  getSpacing,\n} from \"@raikou/core\";\nimport { UnstyledButton } from \"@raikou/unstyled-button\";\nimport { AccordionChevron } from \"@raikou/accordion\";\nimport { clamp } from \"@raikou/hooks\";\nimport useEmblaCarousel, {\n  EmblaPluginType,\n  EmblaCarouselType,\n} from \"embla-carousel-react\";\nimport { getChevronRotation } from \"./get-chevron-rotation\";\nimport { CarouselProvider } from \"./Carousel.context\";\nimport { CarouselSlide } from \"./CarouselSlide/CarouselSlide\";\nimport { CarouselVariables } from \"./CarouselVariables/CarouselVariables\";\nimport classes from \"./Carousel.module.css\";\n\nexport type CarouselStylesNames =\n  | \"slide\"\n  | \"root\"\n  | \"viewport\"\n  | \"container\"\n  | \"controls\"\n  | \"control\"\n  | \"indicators\"\n  | \"indicator\";\n\nexport type CarouselCssVariables = {\n  root:\n    | \"--carousel-height\"\n    | \"--carousel-control-size\"\n    | \"--carousel-controls-offset\";\n};\n\n// @ts-ignore\nexport interface CarouselProps\n  extends BoxProps,\n    StylesApiProps<CarouselFactory>,\n    ElementProps<\"div\"> {\n  /** <Carousel.Slide /> components */\n  children?: React.ReactNode;\n\n  /** Called when next slide is shown */\n  onNextSlide?: () => void;\n\n  /** Called when previous slider is shown */\n  onPreviousSlide?: () => void;\n\n  /** Called with slide index when slide changes */\n  onSlideChange?: (index: number) => void;\n\n  /** Get embla API as ref */\n  getEmblaApi?: (embla: EmblaCarouselType) => void;\n\n  /** Props passed down to next control */\n  nextControlProps?: React.ComponentPropsWithoutRef<\"button\">;\n\n  /** Props passed down to previous control */\n  previousControlProps?: React.ComponentPropsWithoutRef<\"button\">;\n\n  /** Controls size of the next and previous controls, `26` by default */\n  controlSize?: React.CSSProperties[\"width\"];\n\n  /** Controls position of the next and previous controls, key of `theme.spacing` or any valid CSS value, `'sm'` by default */\n  controlsOffset?: RaikouSpacing;\n\n  /** Controls slide width based on viewport width, `'100%'` by default */\n  slideSize?: StyleProp<string | number>;\n\n  /** Key of theme.spacing or number to set gap between slides */\n  slideGap?: StyleProp<RaikouSpacing>;\n\n  /** Carousel orientation, `'horizontal'` by default */\n  orientation?: \"horizontal\" | \"vertical\";\n\n  /** Slides container `height`, required for vertical orientation */\n  height?: React.CSSProperties[\"height\"];\n\n  /** Determines how slides will be aligned relative to the container. Use number between 0-1 to align slides based on percentage, where 0.5 is 50%, `'center'` by default */\n  align?: \"start\" | \"center\" | \"end\" | number;\n\n  /** Number of slides that will be scrolled with next/previous buttons, `1` by default */\n  slidesToScroll?: number | \"auto\";\n\n  /** Determines whether gap between slides should be treated as part of the slide size, `true` by default */\n  includeGapInSize?: boolean;\n\n  /** Determines whether the carousel can be scrolled with mouse and touch interactions, `true` by default */\n  draggable?: boolean;\n\n  /** Determines whether momentum scrolling should be enabled, `false` by default */\n  dragFree?: boolean;\n\n  /** Enables infinite looping. `true` by default, automatically falls back to `false` if slide content isn't enough to loop. */\n  loop?: boolean;\n\n  /** Adjusts scroll speed when triggered by any of the methods. Higher numbers enables faster scrolling. */\n  speed?: number;\n\n  /** Index of initial slide */\n  initialSlide?: number;\n\n  /** Choose a fraction representing the percentage portion of a slide that needs to be visible in order to be considered in view. For example, 0.5 equals 50%. */\n  inViewThreshold?: number;\n\n  /** Determines whether next/previous controls should be displayed, true by default */\n  withControls?: boolean;\n\n  /** Determines whether indicators should be displayed, `false` by default */\n  withIndicators?: boolean;\n\n  /** An array of embla plugins */\n  plugins?: EmblaPluginType[];\n\n  /** Icon of the next control */\n  nextControlIcon?: React.ReactNode;\n\n  /** Icon of the previous control */\n  previousControlIcon?: React.ReactNode;\n\n  /** Allow the carousel to skip scroll snaps if it is dragged vigorously. Note that this option will be ignored if the dragFree option is set to `true`, `false` by default */\n  skipSnaps?: boolean;\n\n  /** Clear leading and trailing empty space that causes excessive scrolling. Use `trimSnaps` to only use snap points that trigger scrolling or keepSnaps to keep them. */\n  containScroll?: \"trimSnaps\" | \"keepSnaps\" | \"\";\n\n  /** Determines whether arrow key should switch slides, `true` by default */\n  withKeyboardEvents?: boolean;\n}\n\nexport type CarouselFactory = Factory<{\n  props: CarouselProps;\n  ref: HTMLDivElement;\n  stylesNames: CarouselStylesNames;\n  vars: CarouselCssVariables;\n  staticComponents: {\n    Slide: typeof CarouselSlide;\n  };\n}>;\n\nconst defaultProps: Partial<CarouselProps> = {\n  controlSize: 26,\n  controlsOffset: \"sm\",\n  slideSize: \"100%\",\n  slideGap: 0,\n  orientation: \"horizontal\",\n  align: \"center\",\n  slidesToScroll: 1,\n  includeGapInSize: true,\n  draggable: true,\n  dragFree: false,\n  loop: false,\n  speed: 10,\n  initialSlide: 0,\n  inViewThreshold: 0,\n  withControls: true,\n  withIndicators: false,\n  skipSnaps: false,\n  containScroll: \"\",\n  withKeyboardEvents: true,\n};\n\nconst varsResolver = createVarsResolver<CarouselFactory>(\n  (_, { height, controlSize, controlsOffset }) => ({\n    root: {\n      \"--carousel-height\": rem(height),\n      \"--carousel-control-size\": rem(controlSize),\n      \"--carousel-controls-offset\": getSpacing(controlsOffset),\n    },\n  }),\n);\n\nexport const Carousel = factory<CarouselFactory>((_props, ref) => {\n  const props = useProps(\"Carousel\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    getEmblaApi,\n    onNextSlide,\n    onPreviousSlide,\n    onSlideChange,\n    nextControlProps,\n    previousControlProps,\n    controlSize,\n    controlsOffset,\n    slideSize,\n    slideGap,\n    orientation,\n    height,\n    align,\n    slidesToScroll,\n    includeGapInSize,\n    draggable,\n    dragFree,\n    loop,\n    speed,\n    initialSlide,\n    inViewThreshold,\n    withControls,\n    withIndicators,\n    plugins,\n    nextControlIcon,\n    previousControlIcon,\n    skipSnaps,\n    containScroll,\n    withKeyboardEvents,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CarouselFactory>({\n    name: \"Carousel\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const responsiveClassName = useRandomClassName();\n  const { dir } = useDirection();\n\n  const [emblaRefElement, embla] = useEmblaCarousel(\n    {\n      axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      direction: orientation === \"horizontal\" ? dir : undefined,\n      startIndex: initialSlide,\n      loop,\n      align,\n      slidesToScroll,\n      draggable,\n      dragFree,\n      speed,\n      inViewThreshold,\n      skipSnaps,\n      containScroll,\n    },\n    plugins,\n  );\n\n  const [selected, setSelected] = useState(0);\n  const [slidesCount, setSlidesCount] = useState(0);\n\n  const handleScroll = useCallback(\n    (index: number) => embla && embla.scrollTo(index),\n    [embla],\n  );\n\n  const handleSelect = useCallback(() => {\n    if (!embla) return;\n    const slide = embla.selectedScrollSnap();\n    setSelected(slide);\n    onSlideChange?.(slide);\n  }, [embla, setSelected]);\n\n  const handlePrevious = useCallback(() => {\n    embla?.scrollPrev();\n    onPreviousSlide?.();\n  }, [embla]);\n\n  const handleNext = useCallback(() => {\n    embla?.scrollNext();\n    onNextSlide?.();\n  }, [embla]);\n\n  const handleKeydown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (withKeyboardEvents) {\n        if (event.key === \"ArrowRight\") {\n          event.preventDefault();\n          handleNext();\n        }\n\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault();\n          handlePrevious();\n        }\n      }\n    },\n    [embla],\n  );\n\n  useEffect(() => {\n    if (embla) {\n      getEmblaApi?.(embla);\n      handleSelect();\n      setSlidesCount(embla.scrollSnapList().length);\n      embla.on(\"select\", handleSelect);\n\n      return () => {\n        embla.off(\"select\", handleSelect);\n      };\n    }\n\n    return undefined;\n  }, [embla, slidesToScroll]);\n\n  useEffect(() => {\n    if (embla) {\n      embla.reInit();\n      setSlidesCount(embla.scrollSnapList().length);\n      setSelected((currentSelected) =>\n        clamp(currentSelected, 0, Children.toArray(children).length - 1),\n      );\n    }\n  }, [Children.toArray(children).length, slidesToScroll]);\n\n  const canScrollPrev = embla?.canScrollPrev() || false;\n  const canScrollNext = embla?.canScrollNext() || false;\n\n  const indicators = Array(slidesCount)\n    .fill(0)\n    .map((_, index) => (\n      <UnstyledButton\n        {...getStyles(\"indicator\")}\n        key={index}\n        data-active={index === selected || undefined}\n        aria-hidden\n        tabIndex={-1}\n        onClick={() => handleScroll(index)}\n      />\n    ));\n\n  return (\n    <CarouselProvider value={{ getStyles, orientation }}>\n      <CarouselVariables {...props} selector={`.${responsiveClassName}`} />\n      <Box\n        ref={ref}\n        {...getStyles(\"root\", { className: responsiveClassName })}\n        {...others}\n        mod={{ orientation, \"include-gap-in-size\": includeGapInSize }}\n        onKeyDownCapture={handleKeydown}\n      >\n        <div {...getStyles(\"viewport\")} ref={emblaRefElement}>\n          <div {...getStyles(\"container\")} data-orientation={orientation}>\n            {children as any}\n          </div>\n        </div>\n\n        {withIndicators && <div {...getStyles(\"indicators\")}>{indicators}</div>}\n\n        {withControls && (\n          <div {...getStyles(\"controls\")}>\n            <UnstyledButton\n              {...previousControlProps}\n              {...getStyles(\"control\", {\n                className: previousControlProps?.className,\n                style: previousControlProps?.style,\n              })}\n              onClick={(event) => {\n                handlePrevious();\n                previousControlProps?.onClick?.(event);\n              }}\n              data-inactive={!canScrollPrev || undefined}\n              tabIndex={canScrollPrev ? 0 : -1}\n            >\n              {/* @ts-ignore */}\n              {typeof previousControlIcon !== \"undefined\" ? (\n                previousControlIcon\n              ) : (\n                <AccordionChevron\n                  style={{\n                    transform: `rotate(${getChevronRotation({\n                      dir,\n                      orientation,\n                      direction: \"previous\",\n                    })}deg)`,\n                  }}\n                />\n              )}\n            </UnstyledButton>\n\n            <UnstyledButton\n              {...getStyles(\"control\", {\n                className: nextControlProps?.className,\n                style: nextControlProps?.style,\n              })}\n              {...nextControlProps}\n              onClick={(event) => {\n                handleNext();\n                nextControlProps?.onClick?.(event);\n              }}\n              data-inactive={!canScrollNext || undefined}\n              tabIndex={canScrollNext ? 0 : -1}\n            >\n              {/* @ts-ignore */}\n              {typeof nextControlIcon !== \"undefined\" ? (\n                nextControlIcon\n              ) : (\n                <AccordionChevron\n                  style={{\n                    transform: `rotate(${getChevronRotation({\n                      dir,\n                      orientation,\n                      direction: \"next\",\n                    })}deg)`,\n                  }}\n                />\n              )}\n            </UnstyledButton>\n          </div>\n        )}\n      </Box>\n    </CarouselProvider>\n  );\n});\n\nCarousel.displayName = \"@raikou/core/Carousel\";\nCarousel.classes = classes;\nCarousel.Slide = CarouselSlide;\n","import React from \"react\";\nimport {\n  Box,\n  useProps,\n  StylesApiProps,\n  useStyles,\n  polymorphicFactory,\n  BoxComponentProps,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport classes from \"./UnstyledButton.module.css\";\n\nexport type UnstyledButtonStylesNames = \"root\";\n\nexport interface UnstyledButtonProps\n  extends Omit<BoxComponentProps, \"vars\" | \"variant\">,\n    StylesApiProps<UnstyledButtonFactory> {\n  __staticSelector?: string;\n}\n\nconst defaultProps: Partial<UnstyledButtonProps> = {\n  __staticSelector: \"UnstyledButton\",\n};\n\nexport type UnstyledButtonFactory = PolymorphicFactory<{\n  props: UnstyledButtonProps;\n  stylesNames: UnstyledButtonStylesNames;\n  defaultComponent: \"button\";\n  defaultRef: HTMLButtonElement;\n}>;\n\nexport const UnstyledButton = polymorphicFactory<UnstyledButtonFactory>(\n  (_props: UnstyledButtonProps & { component?: any }, ref) => {\n    const props = useProps(\"UnstyledButton\", defaultProps, _props);\n    const {\n      className,\n      component = \"button\",\n      __staticSelector,\n      unstyled,\n      classNames,\n      styles,\n      style,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<UnstyledButtonFactory>({\n      name: __staticSelector!,\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n    });\n\n    return (\n      <Box\n        {...getStyles(\"root\", { focusable: true })}\n        component={component}\n        ref={ref}\n        type={component === \"button\" ? \"button\" : undefined}\n        {...others}\n      />\n    );\n  },\n);\n\nUnstyledButton.displayName = \"@raikou/core/UnstyledButton\";\nUnstyledButton.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/UnstyledButton/src/UnstyledButton.module.css\"; export default {\"root\":\"m-87cf2631\"}","import React from \"react\";\nimport { rem } from \"@raikou/core\";\n\nexport interface AccordionChevronProps\n  extends React.ComponentPropsWithoutRef<\"svg\"> {\n  /** Controls `width` and `height` of the icon, `16` by default */\n  size?: number | string;\n}\n\nexport function AccordionChevron({\n  style,\n  size = 16,\n  ...others\n}: AccordionChevronProps) {\n  return (\n    <svg\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{\n        ...style,\n        width: rem(size),\n        height: rem(size),\n        display: \"block\",\n      }}\n      {...others}\n    >\n      <path\n        d=\"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nAccordionChevron.displayName = \"@raikou/core/AccordionChevron\";\n","import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nconst useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n","interface Options {\n  dir: 'rtl' | 'ltr';\n  orientation: 'horizontal' | 'vertical' | undefined;\n  direction: 'next' | 'previous';\n}\n\nexport function getChevronRotation({ dir, orientation, direction }: Options) {\n  if (direction === 'previous') {\n    return orientation === 'horizontal' ? 90 * (dir === 'ltr' ? 1 : -1) : -180;\n  }\n\n  return orientation === 'horizontal' ? 90 * (dir === 'ltr' ? -1 : 1) : 0;\n}\n","import { GetStylesApi } from \"@raikou/core\";\nimport { createSafeContext } from \"../../components/_utils\";\nimport type { CarouselFactory } from \"./Carousel\";\n\ninterface CarouselContextValue {\n  getStyles: GetStylesApi<CarouselFactory>;\n  orientation: \"horizontal\" | \"vertical\" | undefined;\n}\n\nexport const [CarouselProvider, useCarouselContext] =\n  createSafeContext<CarouselContextValue>(\n    \"Carousel component was not found in tree\",\n  );\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  Factory,\n} from \"@raikou/core\";\nimport { useCarouselContext } from \"../Carousel.context\";\n\nexport type CarouselSlideStylesNames = \"slide\";\n\nexport interface CarouselSlideProps\n  extends BoxProps,\n    CompoundStylesApiProps<CarouselSlideFactory>,\n    ElementProps<\"div\"> {}\n\nexport type CarouselSlideFactory = Factory<{\n  props: CarouselSlideProps;\n  ref: HTMLDivElement;\n  stylesNames: CarouselSlideStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<CarouselSlideProps> = {};\n\nexport const CarouselSlide = factory<CarouselSlideFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    \"CarouselSlide\",\n    defaultProps,\n    props,\n  );\n\n  const ctx = useCarouselContext();\n\n  return (\n    <Box\n      ref={ref}\n      mod={{ orientation: ctx.orientation }}\n      {...ctx.getStyles(\"slide\", { className, style, classNames, styles })}\n      {...others}\n    />\n  );\n});\n\nCarouselSlide.displayName = \"@raikou/core/CarouselSlide\";\n","import React from \"react\";\nimport {\n  getSortedBreakpoints,\n  useRaikouTheme,\n  keys,\n  getSpacing,\n  RaikouBreakpoint,\n  filterProps,\n  InlineStyles,\n  getBaseValue,\n} from \"@raikou/core\";\nimport type { CarouselProps } from \"../Carousel\";\n\ninterface CarouselVariablesProps extends CarouselProps {\n  selector: string;\n}\n\nexport function CarouselVariables({\n  slideGap,\n  slideSize,\n  selector,\n}: CarouselVariablesProps) {\n  const theme = useRaikouTheme();\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    \"--carousel-slide-gap\": getSpacing(getBaseValue(slideGap)),\n    \"--carousel-slide-size\": getBaseValue(slideSize)?.toString(),\n  });\n\n  const queries = keys(theme.breakpoints).reduce<\n    Record<string, Record<string, any>>\n  >((acc, breakpoint) => {\n    if (!acc[breakpoint]) {\n      acc[breakpoint] = {};\n    }\n\n    if (typeof slideGap === \"object\" && slideGap[breakpoint] !== undefined) {\n      acc[breakpoint][\"--carousel-slide-gap\"] = getSpacing(\n        slideGap[breakpoint],\n      );\n    }\n\n    if (typeof slideSize === \"object\" && slideSize[breakpoint] !== undefined) {\n      acc[breakpoint][\"--carousel-slide-size\"] = getSpacing(\n        slideSize[breakpoint],\n      );\n    }\n\n    return acc;\n  }, {});\n\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0,\n  );\n\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${\n      theme.breakpoints[breakpoint.value as RaikouBreakpoint]\n    })`,\n    styles: queries[breakpoint.value],\n  }));\n\n  return <InlineStyles styles={baseStyles} media={media} selector={selector} />;\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/carousel/src/Carousel.module.css\"; export default {\"root\":\"m-17884d0f\",\"viewport\":\"m-a2dae653\",\"container\":\"m-fcd81474\",\"controls\":\"m-39bc3463\",\"control\":\"m-64f58e10\",\"indicators\":\"m-71ea3ab1\",\"indicator\":\"m-eae68602\",\"slide\":\"m-d98df724\"}","import { useEffect } from 'react';\nimport type { EmblaCarouselType } from 'embla-carousel-react';\n\nexport function useAnimationOffsetEffect(\n  embla: EmblaCarouselType | null | undefined,\n  transitionDuration: number\n) {\n  useEffect(() => {\n    if (embla) {\n      window.setTimeout(() => {\n        embla.reInit();\n      }, transitionDuration);\n    }\n  }, [embla, transitionDuration]);\n}\n"],"mappings":"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","names":["import_react","import_core","React","import_react","import_core","React","import_react","React","import_react","import_react","import_react","import_react","import_core","defaultProps","React","import_react","import_core","React","defaultProps","useEmblaCarousel","React","_a","import_react"]}