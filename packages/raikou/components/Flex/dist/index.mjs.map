{"version":3,"sources":["../src/flex-props.ts","../src/Flex.tsx","css-module:./Flex.module.css#css-module"],"sourcesContent":["import { SystemPropData } from \"@raikou/core\";\n\nexport const FLEX_STYLE_PROPS_DATA: Record<string, SystemPropData> = {\n  gap: { type: \"spacing\", property: \"gap\" },\n  rowGap: { type: \"spacing\", property: \"rowGap\" },\n  columnGap: { type: \"spacing\", property: \"columnGap\" },\n\n  align: { type: \"identity\", property: \"alignItems\" },\n  justify: { type: \"identity\", property: \"justifyContent\" },\n  wrap: { type: \"identity\", property: \"flexWrap\" },\n  direction: { type: \"identity\", property: \"flexDirection\" },\n};\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  ElementProps,\n  useProps,\n  useStyles,\n  InlineStyles,\n  useRandomClassName,\n  parseStyleProps,\n  StyleProp,\n  RaikouSize,\n  useRaikouTheme,\n  filterProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport { FLEX_STYLE_PROPS_DATA } from \"./flex-props\";\nimport classes from \"./Flex.module.css\";\n\nexport type FlexStylesNames = \"root\";\n\nexport interface FlexProps\n  extends BoxProps,\n    StylesApiProps<FlexFactory>,\n    ElementProps<\"div\"> {\n  /** `gap` CSS property */\n  gap?: StyleProp<RaikouSize | (string & {}) | number>;\n\n  /** `row-gap` CSS property */\n  rowGap?: StyleProp<RaikouSize | (string & {}) | number>;\n\n  /** `column-gap` CSS property */\n  columnGap?: StyleProp<RaikouSize | (string & {}) | number>;\n\n  /** `align-items` CSS property */\n  align?: StyleProp<React.CSSProperties[\"alignItems\"]>;\n\n  /** `justify-content` CSS property */\n  justify?: StyleProp<React.CSSProperties[\"justifyContent\"]>;\n\n  /** `flex-wrap` CSS property */\n  wrap?: StyleProp<React.CSSProperties[\"flexWrap\"]>;\n\n  /** `flex-direction` CSS property */\n  direction?: StyleProp<React.CSSProperties[\"flexDirection\"]>;\n}\n\nexport type FlexFactory = PolymorphicFactory<{\n  props: FlexProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: \"div\";\n  stylesNames: FlexStylesNames;\n}>;\n\nconst defaultProps: Partial<FlexProps> = {};\n\nexport const Flex = polymorphicFactory<FlexFactory>((_props, ref) => {\n  const props = useProps(\"Flex\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    gap,\n    rowGap,\n    columnGap,\n    align,\n    justify,\n    wrap,\n    direction,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FlexFactory>({\n    name: \"Flex\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  const theme = useRaikouTheme();\n  const responsiveClassName = useRandomClassName();\n  const parsedStyleProps = parseStyleProps({\n    // @ts-ignore\n    styleProps: { gap, rowGap, columnGap, align, justify, wrap, direction },\n    theme,\n    data: FLEX_STYLE_PROPS_DATA,\n  });\n\n  return (\n    <>\n      {parsedStyleProps.hasResponsiveStyles && (\n        <InlineStyles\n          selector={`.${responsiveClassName}`}\n          styles={parsedStyleProps.styles}\n          media={parsedStyleProps.media}\n        />\n      )}\n      <Box\n        ref={ref}\n        {...getStyles(\"root\", {\n          className: responsiveClassName,\n          style: filterProps(parsedStyleProps.inlineStyles),\n        })}\n        {...others}\n      />\n    </>\n  );\n});\n\nFlex.displayName = \"@raikou/core/Flex\";\nFlex.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Flex/src/Flex.module.css\"; export default {\"root\":\"m-8bffd616\"}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAM,wBAAwD;AAAA,EACnE,KAAK,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,EACxC,QAAQ,EAAE,MAAM,WAAW,UAAU,SAAS;AAAA,EAC9C,WAAW,EAAE,MAAM,WAAW,UAAU,YAAY;AAAA,EAEpD,OAAO,EAAE,MAAM,YAAY,UAAU,aAAa;AAAA,EAClD,SAAS,EAAE,MAAM,YAAY,UAAU,iBAAiB;AAAA,EACxD,MAAM,EAAE,MAAM,YAAY,UAAU,WAAW;AAAA,EAC/C,WAAW,EAAE,MAAM,YAAY,UAAU,gBAAgB;AAC3D;;;ACXA,OAAO,WAAW;AAClB;AAAA,EACE;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,OAEK;;;ACjBiG,IAAO,sBAAQ,EAAC,QAAO,aAAY;;;ADwD3I,IAAM,eAAmC,CAAC;AAEnC,IAAM,OAAO,mBAAgC,CAAC,QAAQ,QAAQ;AACnE,QAAM,QAAQ,SAAS,QAAQ,cAAc,MAAM;AACnD,QAeI,YAdF;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAzEJ,IA2EM,IADC,mBACD,IADC;AAAA,IAbH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIF,QAAM,YAAY,UAAuB;AAAA,IACvC,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,QAAQ,eAAe;AAC7B,QAAM,sBAAsB,mBAAmB;AAC/C,QAAM,mBAAmB,gBAAgB;AAAA;AAAA,IAEvC,YAAY,EAAE,KAAK,QAAQ,WAAW,OAAO,SAAS,MAAM,UAAU;AAAA,IACtE;AAAA,IACA,MAAM;AAAA,EACR,CAAC;AAED,SACE,0DACG,iBAAiB,uBAChB;AAAA,IAAC;AAAA;AAAA,MACC,UAAU,IAAI,mBAAmB;AAAA,MACjC,QAAQ,iBAAiB;AAAA,MACzB,OAAO,iBAAiB;AAAA;AAAA,EAC1B,GAEF;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,OACI,UAAU,QAAQ;AAAA,MACpB,WAAW;AAAA,MACX,OAAO,YAAY,iBAAiB,YAAY;AAAA,IAClD,CAAC,IACG;AAAA,EACN,CACF;AAEJ,CAAC;AAED,KAAK,cAAc;AACnB,KAAK,UAAU;","names":[]}