/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/Affix/src/Affix.module.css/#css-module-data */
.m-7f854edf {
  position: fixed;
  z-index: var(--affix-z-index);
  top: var(--affix-top);
  left: var(--affix-left);
  right: var(--affix-right);
  bottom: var(--affix-bottom);
}

/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/Paper/src/Paper.module.css/#css-module-data */
:where([data-raikou-color-scheme=light]) .m-1b7284a3 {
  --raikou-paper-border-color: #dee2e6 ;
}
:where([data-raikou-color-scheme=dark]) .m-1b7284a3 {
  --raikou-paper-border-color: #373a40 ;
}
.m-1b7284a3 {
  --paper-radius: var(--raikou-radius-default);
  outline: 0;
  -webkit-tap-highlight-color: transparent;
  display: block;
  touch-action: manipulation;
  text-decoration: none;
  border-radius: var(--paper-radius);
  box-shadow: var(--paper-shadow);
  background-color: var(--raikou-color-body);
}
:where([data-raikou-color-scheme=light]) .m-1b7284a3:where([data-with-border]) {
  border: calc(0.0625rem * var(--raikou-scale)) solid var(--raikou-paper-border-color);
}
:where([data-raikou-color-scheme=dark]) .m-1b7284a3:where([data-with-border]) {
  border: calc(0.0625rem * var(--raikou-scale)) solid var(--raikou-paper-border-color);
}

/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/UnstyledButton/src/UnstyledButton.module.css/#css-module-data */
.m-87cf2631 {
  background-color: transparent;
  cursor: pointer;
  border: 0;
  padding: 0;
  appearance: none;
  font-size: var(--raikou-font-size-md);
  text-align: left;
  text-decoration: none;
  color: inherit;
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}
:where([dir=rtl]) .m-87cf2631 {
  text-align: right;
}

/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/CloseButton/src/CloseButton.module.css/#css-module-data */
:where([data-raikou-color-scheme=light]) .m-86a44da5 {
  --raikou-closebutton-color: #495057;
}
:where([data-raikou-color-scheme=dark]) .m-86a44da5 {
  --raikou-closebutton-color: #a6a7ab;
}
.m-86a44da5 {
  --cb-size-xs: 18px;
  --cb-size-sm: 22px;
  --cb-size-md: 28px;
  --cb-size-lg: 34px;
  --cb-size-xl: 44px;
  --cb-size: var(--cb-size-md);
  --cb-icon-size: 70%;
  --cb-radius: var(--raikou-radius-default);
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  user-select: none;
  width: var(--cb-size);
  height: var(--cb-size);
  min-width: var(--cb-size);
  min-height: var(--cb-size);
  border-radius: var(--cb-radius);
}
:where([data-raikou-color-scheme=light]) .m-86a44da5 {
  color: var(--raikou-closebutton-color);
}
:where([data-raikou-color-scheme=dark]) .m-86a44da5 {
  color: var(--raikou-closebutton-color);
}
.m-86a44da5[data-disabled],
.m-86a44da5:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}
@media (hover: hover) {
  :where([data-raikou-color-scheme=light]) .m-220c80f2:where(:not([data-disabled], :disabled)):hover {
    background-color: var(--raikou-color-gray-0);
  }
  :where([data-raikou-color-scheme=dark]) .m-220c80f2:where(:not([data-disabled], :disabled)):hover {
    background-color: var(--raikou-color-dark-6);
  }
}
@media (hover: none) {
  :where([data-raikou-color-scheme=light]) .m-220c80f2:where(:not([data-disabled], :disabled)):active {
    background-color: var(--raikou-color-gray-0);
  }
  :where([data-raikou-color-scheme=dark]) .m-220c80f2:where(:not([data-disabled], :disabled)):active {
    background-color: var(--raikou-color-dark-6);
  }
}

/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/Dialog/src/Dialog.module.css/#css-module-data */
.m-e2125a27 {
  --dialog-size-xs: 160px;
  --dialog-size-sm: 200px;
  --dialog-size-md: 340px;
  --dialog-size-lg: 400px;
  --dialog-size-xl: 500px;
  --dialog-size: var(--dialog-size-md);
  position: relative;
  width: var(--dialog-size);
  max-width: calc(100vw - var(--raikou-spacing-xl) * 2);
  min-height: 50px;
}
.m-5abab665 {
  position: absolute;
  top: calc(var(--raikou-spacing-md) / 2);
  inset-inline-end: calc(var(--raikou-spacing-md) / 2);
}
/*# sourceMappingURL=index.css.map */