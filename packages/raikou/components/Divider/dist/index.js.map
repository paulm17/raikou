{"version":3,"sources":["../src/index.ts","../src/Divider.tsx","css-module:./Divider.module.css#css-module"],"sourcesContent":["export { Divider } from './Divider';\nexport type {\n  DividerCssVariables,\n  DividerFactory,\n  DividerProps,\n  DividerStylesNames,\n  DividerVariant,\n} from './Divider';\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  RaikouColor,\n  getThemeColor,\n  getSize,\n  RaikouSize,\n} from \"@raikou/core\";\nimport classes from \"./Divider.module.css\";\n\nexport type DividerStylesNames = \"root\" | \"label\";\nexport type DividerVariant = \"solid\" | \"dashed\" | \"dotted\";\nexport type DividerCssVariables = {\n  root: \"--divider-color\" | \"--divider-border-style\" | \"--divider-size\";\n};\n\nexport interface DividerProps\n  extends BoxProps,\n    StylesApiProps<DividerFactory>,\n    ElementProps<\"div\"> {\n  /** Key of `theme.colors` or any valid CSS color value, by default value depends on color scheme */\n  color?: RaikouColor;\n\n  /** Controls width/height (depends on orientation), `'xs'` by default */\n  size?: RaikouSize | number | (string & {});\n\n  /** Divider label, visible only when `orientation` is `horizontal` */\n  label?: React.ReactNode;\n\n  /** Controls label position, `'left'` by default */\n  labelPosition?: \"left\" | \"center\" | \"right\";\n\n  /** Controls orientation, `'horizontal'` by default */\n  orientation?: \"horizontal\" | \"vertical\";\n}\n\nexport type DividerFactory = Factory<{\n  props: DividerProps;\n  ref: HTMLDivElement;\n  stylesNames: DividerStylesNames;\n  vars: DividerCssVariables;\n  variant: DividerVariant;\n}>;\n\nconst defaultProps: Partial<DividerProps> = {\n  orientation: \"horizontal\",\n};\n\nconst varsResolver = createVarsResolver<DividerFactory>(\n  (theme, { color, variant, size }) => ({\n    root: {\n      \"--divider-color\": color ? getThemeColor(color, theme) : undefined,\n      \"--divider-border-style\": variant,\n      \"--divider-size\": getSize(size, \"divider-size\"),\n    },\n  }),\n);\n\nexport const Divider = factory<DividerFactory>((_props, ref) => {\n  const props = useProps(\"Divider\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DividerFactory>({\n    name: \"Divider\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={{ orientation, \"with-label\": !!label }}\n      {...getStyles(\"root\")}\n      {...others}\n      role=\"separator\"\n    >\n      {label && (\n        <Box\n          component=\"span\"\n          mod={{ position: labelPosition }}\n          {...getStyles(\"label\")}\n        >\n          {label}\n        </Box>\n      )}\n    </Box>\n  );\n});\n\nDivider.displayName = \"@raikou/core/Divider\";\nDivider.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Divider/src/Divider.module.css\"; export default {\"root\":\"m-3eebeb36\",\"label\":\"m-9e365f20\"}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAAkB;AAClB,kBAcO;;;ACfuG,IAAO,yBAAQ,EAAC,QAAO,cAAa,SAAQ,aAAY;;;ADoDtK,IAAM,eAAsC;AAAA,EAC1C,aAAa;AACf;AAEA,IAAM,mBAAe;AAAA,EACnB,CAAC,OAAO,EAAE,OAAO,SAAS,KAAK,OAAO;AAAA,IACpC,MAAM;AAAA,MACJ,mBAAmB,YAAQ,2BAAc,OAAO,KAAK,IAAI;AAAA,MACzD,0BAA0B;AAAA,MAC1B,sBAAkB,qBAAQ,MAAM,cAAc;AAAA,IAChD;AAAA,EACF;AACF;AAEO,IAAM,cAAU,qBAAwB,CAAC,QAAQ,QAAQ;AAC9D,QAAM,YAAQ,sBAAS,WAAW,cAAc,MAAM;AACtD,QAYI,YAXF;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EA9EJ,IAgFM,IADC,mBACD,IADC;AAAA,IAVH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIF,QAAM,gBAAY,uBAA0B;AAAA,IAC1C,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SACE,6BAAAA,QAAA;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,KAAK,EAAE,aAAa,cAAc,CAAC,CAAC,MAAM;AAAA,OACtC,UAAU,MAAM,IAChB,SAJL;AAAA,MAKC,MAAK;AAAA;AAAA,IAEJ,SACC,6BAAAA,QAAA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,KAAK,EAAE,UAAU,cAAc;AAAA,SAC3B,UAAU,OAAO;AAAA,MAEpB;AAAA,IACH;AAAA,EAEJ;AAEJ,CAAC;AAED,QAAQ,cAAc;AACtB,QAAQ,UAAU;","names":["React"]}