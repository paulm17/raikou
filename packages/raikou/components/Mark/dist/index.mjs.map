{"version":3,"sources":["../src/Mark.tsx","../src/get-mark-color.ts","css-module:./Mark.module.css#css-module"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouColor,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { getMarkColor } from \"./get-mark-color\";\nimport classes from \"./Mark.module.css\";\n\nexport type MarkStylesNames = \"root\";\nexport type MarkCssVariables = {\n  root: \"--mark-bg-dark\" | \"--mark-bg-light\";\n};\n\nexport interface MarkProps\n  extends BoxProps,\n    StylesApiProps<MarkFactory>,\n    ElementProps<\"mark\"> {\n  /** Key of `theme.colors` or any valid CSS color, `yellow` by default */\n  color?: RaikouColor;\n}\n\nexport type MarkFactory = Factory<{\n  props: MarkProps;\n  ref: HTMLElement;\n  stylesNames: MarkStylesNames;\n  vars: MarkCssVariables;\n}>;\n\nconst defaultProps: Partial<MarkProps> = {\n  color: \"yellow\",\n};\n\nconst varsResolver = createVarsResolver<MarkFactory>((theme, { color }) => ({\n  root: {\n    \"--mark-bg-dark\": getMarkColor({ color, theme, defaultShade: 5 }),\n    \"--mark-bg-light\": getMarkColor({ color, theme, defaultShade: 2 }),\n  },\n}));\n\nexport const Mark = factory<MarkFactory>((_props, ref) => {\n  const props = useProps(\"Mark\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    variant,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<MarkFactory>({\n    name: \"Mark\",\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      component=\"mark\"\n      ref={ref}\n      variant={variant}\n      {...getStyles(\"root\")}\n      {...others}\n    />\n  );\n});\n\nMark.classes = classes;\nMark.displayName = \"@raikou/core/Mark\";\n","import { RaikouColor, RaikouTheme, parseThemeColor } from \"@raikou/core\";\n\ninterface GetMarkColorInput {\n  color: RaikouColor | string | undefined;\n  theme: RaikouTheme;\n  defaultShade: number;\n}\n\nexport function getMarkColor({\n  color,\n  theme,\n  defaultShade,\n}: GetMarkColorInput) {\n  const parsed = parseThemeColor({ color, theme });\n\n  if (!parsed.isThemeColor) {\n    return color;\n  }\n\n  if (parsed.shade === undefined) {\n    return `var(--raikou-color-${parsed.color}-${defaultShade})`;\n  }\n\n  return `var(${parsed.variable})`;\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Mark/src/Mark.module.css\"; export default {\"root\":\"m-bcb3f3c2\"}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,WAAW;AAClB;AAAA,EACE;AAAA,EAGA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,OAEK;;;ACZP,SAAmC,uBAAuB;AAQnD,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AACF,GAAsB;AACpB,QAAM,SAAS,gBAAgB,EAAE,OAAO,MAAM,CAAC;AAE/C,MAAI,CAAC,OAAO,cAAc;AACxB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,UAAU,QAAW;AAC9B,WAAO,sBAAsB,OAAO,KAAK,IAAI,YAAY;AAAA,EAC3D;AAEA,SAAO,OAAO,OAAO,QAAQ;AAC/B;;;ACxBwG,IAAO,sBAAQ,EAAC,QAAO,aAAY;;;AFoC3I,IAAM,eAAmC;AAAA,EACvC,OAAO;AACT;AAEA,IAAM,eAAe,mBAAgC,CAAC,OAAO,EAAE,MAAM,OAAO;AAAA,EAC1E,MAAM;AAAA,IACJ,kBAAkB,aAAa,EAAE,OAAO,OAAO,cAAc,EAAE,CAAC;AAAA,IAChE,mBAAmB,aAAa,EAAE,OAAO,OAAO,cAAc,EAAE,CAAC;AAAA,EACnE;AACF,EAAE;AAEK,IAAM,OAAO,QAAqB,CAAC,QAAQ,QAAQ;AACxD,QAAM,QAAQ,SAAS,QAAQ,cAAc,MAAM;AACnD,QAUI,YATF;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAzDJ,IA2DM,IADC,mBACD,IADC;AAAA,IARH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIF,QAAM,YAAY,UAAuB;AAAA,IACvC,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAU;AAAA,MACV;AAAA,MACA;AAAA,OACI,UAAU,MAAM,IAChB;AAAA,EACN;AAEJ,CAAC;AAED,KAAK,UAAU;AACf,KAAK,cAAc;","names":[]}