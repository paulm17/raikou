{"version":3,"sources":["../src/Badge.tsx","css-module:./Badge.module.css#css-module"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  PolymorphicFactory,\n  getSize,\n  getRadius,\n  RaikouSize,\n  RaikouRadius,\n  RaikouColor,\n  RaikouGradient,\n  getThemeColor,\n} from \"@raikou/core\";\nimport classes from \"./Badge.module.css\";\n\nexport type BadgeStylesNames = \"root\" | \"root--dot\" | \"section\" | \"label\";\nexport type BadgeVariant =\n  | \"filled\"\n  | \"light\"\n  | \"outline\"\n  | \"dot\"\n  | \"transparent\"\n  | \"white\"\n  | \"default\"\n  | \"gradient\";\n\nexport type BadgeCssVariables = {\n  root:\n    | \"--badge-height\"\n    | \"--badge-padding-x\"\n    | \"--badge-fz\"\n    | \"--badge-radius\"\n    | \"--badge-bg\"\n    | \"--badge-color\"\n    | \"--badge-bd\"\n    | \"--badge-dot-color\";\n};\n\nexport interface BadgeProps extends BoxProps, StylesApiProps<BadgeFactory> {\n  /** Controls `font-size`, `height` and horizontal `padding`, `'md'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `'xl'` by default */\n  radius?: RaikouRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: RaikouColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: RaikouGradient;\n\n  /** Content displayed on the left side of the badge label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the badge label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether Badge should take 100% of its parent width, `false` by default */\n  fullWidth?: boolean;\n\n  /** Main badge content */\n  children?: React.ReactNode;\n}\n\nexport type BadgeFactory = PolymorphicFactory<{\n  props: BadgeProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: \"div\";\n  stylesNames: BadgeStylesNames;\n  vars: BadgeCssVariables;\n  variant: BadgeVariant;\n}>;\n\nconst defaultProps: Partial<BadgeProps> = {};\n\nconst varsResolver = createVarsResolver<BadgeFactory>(\n  (theme, { radius, color, gradient, variant, size }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || \"filled\",\n    });\n\n    return {\n      root: {\n        \"--badge-height\": getSize(size, \"badge-height\"),\n        \"--badge-padding-x\": getSize(size, \"badge-padding-x\"),\n        \"--badge-fz\": getSize(size, \"badge-fz\"),\n        \"--badge-radius\": radius === undefined ? undefined : getRadius(radius),\n        \"--badge-bg\": color || variant ? colors.background : undefined,\n        \"--badge-color\": color || variant ? colors.color : undefined,\n        \"--badge-bd\": color || variant ? colors.border : undefined,\n        \"--badge-dot-color\":\n          variant === \"dot\" ? getThemeColor(color, theme) : undefined,\n      },\n    };\n  },\n);\n\nexport const Badge = polymorphicFactory<BadgeFactory>((_props, ref) => {\n  const props = useProps(\"Badge\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BadgeFactory>({\n    name: \"Badge\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      variant={variant}\n      mod={{ block: fullWidth }}\n      {...getStyles(\"root\", { variant })}\n      ref={ref}\n      {...others}\n    >\n      {leftSection && (\n        <span {...getStyles(\"section\")} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      <span {...getStyles(\"label\")}>{children}</span>\n      {rightSection && (\n        <span {...getStyles(\"section\")} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nBadge.displayName = \"@raikou/core/Badge\";\nBadge.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Badge/src/Badge.module.css\"; export default {\"root\":\"m-347db0ec\",\"root--dot\":\"m-fbd81e3d\",\"label\":\"m-5add502a\",\"section\":\"m-91fdda9b\"}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,WAAW;AAClB;AAAA,EACE;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EAKA;AAAA,OACK;;;ACjBmG,IAAO,uBAAQ,EAAC,QAAO,cAAa,aAAY,cAAa,SAAQ,cAAa,WAAU,aAAY;;;AD8ElN,IAAM,eAAoC,CAAC;AAE3C,IAAM,eAAe;AAAA,EACnB,CAAC,OAAO,EAAE,QAAQ,OAAO,UAAU,SAAS,KAAK,MAAM;AACrD,UAAM,SAAS,MAAM,qBAAqB;AAAA,MACxC,OAAO,SAAS,MAAM;AAAA,MACtB;AAAA,MACA;AAAA,MACA,SAAS,WAAW;AAAA,IACtB,CAAC;AAED,WAAO;AAAA,MACL,MAAM;AAAA,QACJ,kBAAkB,QAAQ,MAAM,cAAc;AAAA,QAC9C,qBAAqB,QAAQ,MAAM,iBAAiB;AAAA,QACpD,cAAc,QAAQ,MAAM,UAAU;AAAA,QACtC,kBAAkB,WAAW,SAAY,SAAY,UAAU,MAAM;AAAA,QACrE,cAAc,SAAS,UAAU,OAAO,aAAa;AAAA,QACrD,iBAAiB,SAAS,UAAU,OAAO,QAAQ;AAAA,QACnD,cAAc,SAAS,UAAU,OAAO,SAAS;AAAA,QACjD,qBACE,YAAY,QAAQ,cAAc,OAAO,KAAK,IAAI;AAAA,MACtD;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,QAAQ,mBAAiC,CAAC,QAAQ,QAAQ;AACrE,QAAM,QAAQ,SAAS,SAAS,cAAc,MAAM;AACpD,QAgBI,YAfF;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAzHJ,IA2HM,IADC,mBACD,IADC;AAAA,IAdH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIF,QAAM,YAAY,UAAwB;AAAA,IACxC,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,KAAK,EAAE,OAAO,UAAU;AAAA,OACpB,UAAU,QAAQ,EAAE,QAAQ,CAAC,IAHlC;AAAA,MAIC;AAAA,QACI;AAAA,IAEH,eACC,oCAAC,yCAAS,UAAU,SAAS,IAA5B,EAA+B,iBAAc,WAC3C,WACH;AAAA,IAEF,oCAAC,2BAAS,UAAU,OAAO,IAAI,QAAS;AAAA,IACvC,gBACC,oCAAC,yCAAS,UAAU,SAAS,IAA5B,EAA+B,iBAAc,YAC3C,YACH;AAAA,EAEJ;AAEJ,CAAC;AAED,MAAM,cAAc;AACpB,MAAM,UAAU;","names":[]}