{"version":3,"sources":["../src/index.ts","../src/Highlight.tsx","../../Text/src/Text.tsx","css-module:./Text.module.css#css-module","../../Mark/src/Mark.tsx","../../Mark/src/get-mark-color.ts","css-module:./Mark.module.css#css-module","../src/highlighter/highlighter.ts"],"sourcesContent":["export { Highlight } from './Highlight';\nexport type { HighlightFactory, HighlightProps } from './Highlight';\n","import React from \"react\";\nimport {\n  polymorphicFactory,\n  useProps,\n  RaikouColor,\n  RaikouTheme,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport { Text, TextStylesNames, TextProps, TextVariant } from \"../../Text/src\";\nimport { Mark } from \"../../Mark/src\";\nimport { highlighter } from \"./highlighter/highlighter\";\n\nexport interface HighlightProps extends TextProps {\n  /** Substring or an array of substrings to highlight in `children` */\n  highlight: string | string[];\n\n  /** Key of `theme.colors` or any valid CSS color, passed to `Mark` component `color` prop, `yellow` by default */\n  color?: RaikouColor | string;\n\n  /** Styles applied to `mark` elements */\n  highlightStyles?:\n    | React.CSSProperties\n    | ((theme: RaikouTheme) => React.CSSProperties);\n\n  /** String parts of which must be highlighted */\n  children: string;\n}\n\nexport type HighlightFactory = PolymorphicFactory<{\n  props: HighlightProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: \"div\";\n  stylesNames: TextStylesNames;\n  variant: TextVariant;\n}>;\n\nconst defaultProps: Partial<HighlightProps> = {};\n\nexport const Highlight = polymorphicFactory<HighlightFactory>((props, ref) => {\n  const { unstyled, children, highlight, highlightStyles, color, ...others } =\n    useProps(\"Highlight\", defaultProps, props);\n\n  const highlightChunks = highlighter(children, highlight);\n\n  return (\n    <Text\n      unstyled={unstyled}\n      ref={ref}\n      {...others}\n      __staticSelector=\"Highlight\"\n    >\n      {highlightChunks.map(({ chunk, highlighted }, i) =>\n        highlighted ? (\n          <Mark\n            unstyled={unstyled}\n            key={i}\n            color={color}\n            style={highlightStyles}\n            data-highlight={chunk}\n          >\n            {chunk}\n          </Mark>\n        ) : (\n          <span key={i}>{chunk}</span>\n        )\n      )}\n    </Text>\n  );\n});\n\nHighlight.displayName = \"@raikou/core/Highlight\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  RaikouGradient,\n  useStyles,\n  useProps,\n  getGradient,\n  BoxMod,\n  createVarsResolver,\n  PolymorphicFactory,\n  RaikouSize,\n  getFontSize,\n  getLineHeight,\n} from \"@raikou/core\";\nimport classes from \"./Text.module.css\";\n\ntype TextTruncate = \"end\" | \"start\" | boolean;\n\nfunction getTextTruncate(truncate: TextTruncate | undefined) {\n  if (truncate === \"start\") {\n    return \"start\";\n  }\n\n  if (truncate === \"end\" || truncate) {\n    return \"end\";\n  }\n\n  return undefined;\n}\n\nexport type TextStylesNames = \"root\";\nexport type TextVariant = \"text\" | \"gradient\";\nexport type TextCssVariables = {\n  root: \"--text-gradient\" | \"--text-line-clamp\" | \"--text-fz\" | \"--text-lh\";\n};\n\nexport interface TextProps extends BoxProps, StylesApiProps<TextFactory> {\n  __staticSelector?: string;\n  mod?: BoxMod;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Number of lines after which Text will be truncated */\n  lineClamp?: number;\n\n  /** Side on which Text must be truncated, if `true`, text in truncated from the start */\n  truncate?: TextTruncate;\n\n  /** Sets `line-height` to 1 for centering, `false` by default */\n  inline?: boolean;\n\n  /** Determines whether font properties should be inherited from the parent, `false` by default */\n  inherit?: boolean;\n\n  /** Gradient configuration, ignored when `variant` is not `gradient`, `theme.defaultGradient` by default */\n  gradient?: RaikouGradient;\n\n  /** Shorthand for `component=\"span\"`, `false` by default, default root element is `p` */\n  span?: boolean;\n}\n\nexport type TextFactory = PolymorphicFactory<{\n  props: TextProps;\n  defaultComponent: \"p\";\n  defaultRef: HTMLParagraphElement;\n  stylesNames: TextStylesNames;\n  vars: TextCssVariables;\n  variant: TextVariant;\n}>;\n\nconst defaultProps: Partial<TextProps> = {\n  inherit: false,\n};\n\nconst varsResolver = createVarsResolver<TextFactory>(\n  (theme, { variant, lineClamp, gradient, size }) => ({\n    root: {\n      \"--text-fz\": getFontSize(size),\n      \"--text-lh\": getLineHeight(size),\n      \"--text-gradient\":\n        variant === \"gradient\" ? getGradient(gradient, theme) : undefined,\n      \"--text-line-clamp\":\n        typeof lineClamp === \"number\" ? lineClamp.toString() : undefined,\n    },\n  }),\n);\n\nexport const Text = polymorphicFactory<TextFactory>((_props, ref) => {\n  const props = useProps(\"Text\", defaultProps, _props);\n  const {\n    lineClamp,\n    truncate,\n    inline,\n    inherit,\n    gradient,\n    span,\n    __staticSelector,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    mod,\n    size,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TextFactory>({\n    name: [\"Text\", __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles(\"root\", { focusable: true })}\n      ref={ref}\n      component={span ? \"span\" : \"p\"}\n      variant={variant}\n      mod={[\n        {\n          \"data-truncate\": getTextTruncate(truncate),\n          \"data-line-clamp\": typeof lineClamp === \"number\",\n          \"data-inline\": inline,\n          \"data-inherit\": inherit,\n        },\n        mod,\n      ]}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nText.classes = classes;\nText.displayName = \"@raikou/core/Text\";\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Text/src/Text.module.css\"; export default {\"root\":\"m-b6d8b162\"}","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouColor,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { getMarkColor } from \"./get-mark-color\";\nimport classes from \"./Mark.module.css\";\n\nexport type MarkStylesNames = \"root\";\nexport type MarkCssVariables = {\n  root: \"--mark-bg-dark\" | \"--mark-bg-light\";\n};\n\nexport interface MarkProps\n  extends BoxProps,\n    StylesApiProps<MarkFactory>,\n    ElementProps<\"mark\"> {\n  /** Key of `theme.colors` or any valid CSS color, `yellow` by default */\n  color?: RaikouColor;\n}\n\nexport type MarkFactory = Factory<{\n  props: MarkProps;\n  ref: HTMLElement;\n  stylesNames: MarkStylesNames;\n  vars: MarkCssVariables;\n}>;\n\nconst defaultProps: Partial<MarkProps> = {\n  color: \"yellow\",\n};\n\nconst varsResolver = createVarsResolver<MarkFactory>((theme, { color }) => ({\n  root: {\n    \"--mark-bg-dark\": getMarkColor({ color, theme, defaultShade: 5 }),\n    \"--mark-bg-light\": getMarkColor({ color, theme, defaultShade: 2 }),\n  },\n}));\n\nexport const Mark = factory<MarkFactory>((_props, ref) => {\n  const props = useProps(\"Mark\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    variant,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<MarkFactory>({\n    name: \"Mark\",\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      component=\"mark\"\n      ref={ref}\n      variant={variant}\n      {...getStyles(\"root\")}\n      {...others}\n    />\n  );\n});\n\nMark.classes = classes;\nMark.displayName = \"@raikou/core/Mark\";\n","import { RaikouColor, RaikouTheme, parseThemeColor } from \"@raikou/core\";\n\ninterface GetMarkColorInput {\n  color: RaikouColor | string | undefined;\n  theme: RaikouTheme;\n  defaultShade: number;\n}\n\nexport function getMarkColor({\n  color,\n  theme,\n  defaultShade,\n}: GetMarkColorInput) {\n  const parsed = parseThemeColor({ color, theme });\n\n  if (!parsed.isThemeColor) {\n    return color;\n  }\n\n  if (parsed.shade === undefined) {\n    return `var(--raikou-color-${parsed.color}-${defaultShade})`;\n  }\n\n  return `var(${parsed.variable})`;\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Mark/src/Mark.module.css\"; export default {\"root\":\"m-bcb3f3c2\"}","function escapeRegex(value: string) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n}\n\nexport function highlighter(value: string, _highlight: string | string[]) {\n  if (_highlight == null) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const highlight = Array.isArray(_highlight)\n    ? _highlight.map(escapeRegex)\n    : escapeRegex(_highlight);\n\n  const shouldHighlight = Array.isArray(highlight)\n    ? highlight.filter((part) => part.trim().length > 0).length > 0\n    : highlight.trim() !== \"\";\n\n  if (!shouldHighlight) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const matcher =\n    typeof highlight === \"string\"\n      ? highlight.trim()\n      : highlight\n          .filter((part) => part.trim().length !== 0)\n          .map((part) => part.trim())\n          .sort((a, b) => b.length - a.length)\n          .join(\"|\");\n\n  const re = new RegExp(`(${matcher})`, \"gi\");\n  const chunks = value\n    .split(re)\n    .map((part) => ({ chunk: part, highlighted: re.test(part) }))\n    .filter(({ chunk }) => chunk);\n\n  return chunks;\n}\n"],"mappings":"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","names":["import_react","import_core","React","import_react","import_core","import_core","defaultProps","varsResolver","React","defaultProps","React"]}