{"version":3,"sources":["../src/Card.tsx","../../Paper/src/Paper.tsx","css-module:./Paper.module.css#css-module","../src/CardSection/CardSection.tsx","../src/store.ts","css-module:./Card.module.css#css-module"],"sourcesContent":["import React, { Children, cloneElement } from \"react\";\nimport {\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  PolymorphicFactory,\n  RaikouShadow,\n  RaikouRadius,\n  RaikouSpacing,\n  getSpacing,\n} from \"@raikou/core\";\nimport { Paper } from \"../../Paper/src\";\nimport { CardSection } from \"./CardSection/CardSection\";\nimport { useStore } from \"./store\";\nimport classes from \"./Card.module.css\";\n\nexport type CardStylesNames = \"root\" | \"section\";\nexport type CardCssVariables = {\n  root: \"--card-padding\";\n};\n\nexport interface CardProps extends BoxProps, StylesApiProps<CardFactory> {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: RaikouShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Determines whether the card should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n\n  /** Controls `padding`, key of `theme.spacing` or any valid CSS value, `'md'` by default */\n  padding?: RaikouSpacing;\n\n  /** Card content */\n  children?: React.ReactNode;\n}\n\nexport type CardFactory = PolymorphicFactory<{\n  props: CardProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: \"div\";\n  stylesNames: CardStylesNames;\n  vars: CardCssVariables;\n  staticComponents: {\n    Section: typeof CardSection;\n  };\n}>;\n\nconst defaultProps: Partial<CardProps> = {};\n\nconst varsResolver = createVarsResolver<CardFactory>((_, { padding }) => ({\n  root: {\n    \"--card-padding\": getSpacing(padding),\n  },\n}));\n\nexport const Card = polymorphicFactory<CardFactory>((_props, ref) => {\n  const props = useProps(\"Card\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    padding,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CardFactory>({\n    name: \"Card\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  useStore.update((state) => {\n    state.getStyles = getStyles;\n  });\n\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (\n      typeof child === \"object\" &&\n      child &&\n      \"type\" in child &&\n      child.type === CardSection\n    ) {\n      return cloneElement(child, {\n        \"data-first-section\": index === 0 || undefined,\n        \"data-last-section\": index === _children.length - 1 || undefined,\n      });\n    }\n\n    return child;\n  });\n\n  return (\n    <Paper ref={ref} {...getStyles(\"root\")} {...others}>\n      {content}\n    </Paper>\n  );\n});\n\nCard.displayName = \"@raikou/core/Card\";\nCard.Section = CardSection;\nCard.classes = classes;\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  useProps,\n  useStyles,\n  RaikouShadow,\n  RaikouRadius,\n  getRadius,\n  getShadow,\n  createVarsResolver,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport classes from \"./Paper.module.css\";\n\nexport type PaperStylesNames = \"root\";\nexport type PaperCssVariables = {\n  root: \"--paper-radius\" | \"--paper-shadow\";\n};\n\nexport interface PaperBaseProps {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: RaikouShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Determines whether the paper should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n}\n\nexport interface PaperProps\n  extends BoxProps,\n    PaperBaseProps,\n    StylesApiProps<PaperFactory> {}\n\nexport type PaperFactory = PolymorphicFactory<{\n  props: PaperProps;\n  defaultComponent: \"div\";\n  defaultRef: HTMLDivElement;\n  stylesNames: PaperStylesNames;\n  vars: PaperCssVariables;\n}>;\n\nconst defaultProps: Partial<PaperProps> = {};\n\nconst varsResolver = createVarsResolver<PaperFactory>(\n  (_, { radius, shadow }) => ({\n    root: {\n      \"--paper-radius\": radius === undefined ? undefined : getRadius(radius),\n      \"--paper-shadow\": getShadow(shadow),\n    },\n  }),\n);\n\nexport const Paper = polymorphicFactory<PaperFactory>((_props, ref) => {\n  const props = useProps(\"Paper\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    withBorder,\n    vars,\n    radius,\n    shadow,\n    variant,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<PaperFactory>({\n    name: \"Paper\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={{ \"data-with-border\": withBorder }}\n      {...getStyles(\"root\")}\n      variant={variant}\n      {...others}\n    />\n  );\n});\n\nPaper.displayName = \"@raikou/core/Paper\";\nPaper.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Paper/src/Paper.module.css\"; export default {\"root\":\"m-1b7284a3\"}","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  polymorphicFactory,\n  useProps,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport { useStore } from \"../store\";\n\nexport type CardSectionStylesNames = \"section\";\n\nexport interface CardSectionProps\n  extends BoxProps,\n    CompoundStylesApiProps<CardSectionFactory> {\n  /** Determines whether the section should have a border, `false` by default */\n  withBorder?: boolean;\n\n  /** Determines whether the section should inherit padding from the parent `Card`, `false` by default */\n  inheritPadding?: boolean;\n}\n\nexport type CardSectionFactory = PolymorphicFactory<{\n  props: CardSectionProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: \"div\";\n  stylesNames: CardSectionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<CardSectionProps> = {};\n\nexport const CardSection = polymorphicFactory<CardSectionFactory>(\n  (_props, ref) => {\n    const props = useProps(\"CardSection\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      vars,\n      withBorder,\n      inheritPadding,\n      ...others\n    } = props;\n    const ctx = useStore.getState();\n\n    return (\n      <Box\n        ref={ref}\n        mod={{ \"with-border\": withBorder, \"inherit-padding\": inheritPadding }}\n        {...ctx.getStyles(\"section\", { className, style, styles, classNames })}\n        {...others}\n      />\n    );\n  },\n);\n\nCardSection.displayName = \"@raikou/core/CardSection\";\n","import createStore from \"pure-store\";\n\nexport const useStore = createStore<{\n  getStyles: any;\n}>({\n  getStyles: undefined,\n});\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Card/src/Card.module.css\"; export default {\"root\":\"m-e615b15f\",\"section\":\"m-599a2148\"}"],"mappings":"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","names":["React","polymorphicFactory","useProps","useStyles","createVarsResolver","React","Box","polymorphicFactory","useProps","defaultProps","polymorphicFactory","useProps","React","Box","defaultProps","varsResolver","createVarsResolver","polymorphicFactory","useProps","useStyles","React"]}