{"version":3,"sources":["../src/index.ts","../src/ColorPicker.tsx","../src/AlphaSlider/AlphaSlider.tsx","../src/ColorSlider/ColorSlider.tsx","css-module:../ColorPicker.module.css#css-module","../../_utils/create-safe-context/create-safe-context.tsx","../../_utils/create-optional-context/create-optional-context.tsx","../../_utils/use-hovered/use-hovered.ts","../../_utils/create-use-external-events/create-use-external-events.ts","../src/ColorPicker.context.ts","../src/Thumb/Thumb.tsx","../src/converters/parsers.ts","../src/HueSlider/HueSlider.tsx","../src/Saturation/Saturation.tsx","../src/converters/converters.ts","../src/Swatches/Swatches.tsx","../../ColorSwatch/src/ColorSwatch.tsx","css-module:./ColorSwatch.module.css#css-module","css-module:./ColorPicker.module.css#css-module"],"sourcesContent":["export { ColorPicker } from \"./ColorPicker\";\nexport { AlphaSlider } from \"./AlphaSlider/AlphaSlider\";\nexport { HueSlider } from \"./HueSlider/HueSlider\";\nexport * from \"./converters\";\n\nexport type {\n  ColorPickerCssVariables,\n  ColorPickerFactory,\n  ColorPickerProps,\n  ColorPickerStylesNames,\n  __ColorPickerProps,\n} from \"./ColorPicker\";\n","import React, { useRef, useState } from \"react\";\nimport { useDidUpdate, useUncontrolled } from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getSize,\n  getSpacing,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { AlphaSlider } from \"./AlphaSlider/AlphaSlider\";\nimport { HueSlider } from \"./HueSlider/HueSlider\";\nimport { Saturation } from \"./Saturation/Saturation\";\nimport { Swatches } from \"./Swatches/Swatches\";\nimport { ColorFormat, HsvaColor } from \"./ColorPicker.types\";\nimport { convertHsvaTo, isColorValid, parseColor } from \"./converters\";\nimport { ColorSwatch } from \"../../ColorSwatch/src\";\nimport { ColorPickerProvider } from \"./ColorPicker.context\";\nimport classes from \"./ColorPicker.module.css\";\n\nexport type ColorPickerStylesNames =\n  | \"wrapper\"\n  | \"preview\"\n  | \"body\"\n  | \"sliders\"\n  | \"slider\"\n  | \"sliderOverlay\"\n  | \"thumb\"\n  | \"saturation\"\n  | \"thumb\"\n  | \"saturationOverlay\"\n  | \"thumb\"\n  | \"swatches\"\n  | \"swatch\";\n\nexport type ColorPickerVariant = string;\nexport type ColorPickerCssVariables = {\n  wrapper:\n    | \"--cp-preview-size\"\n    | \"--cp-width\"\n    | \"--cp-body-spacing\"\n    | \"--cp-swatch-size\"\n    | \"--cp-thumb-size\"\n    | \"--cp-saturation-height\";\n};\n\nexport interface __ColorPickerProps {\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when color changes */\n  onChange?: (value: string) => void;\n\n  /** Called when user stops dragging or changes value with arrow keys */\n  onChangeEnd?: (value: string) => void;\n\n  /** Color format, `'hex'` by default */\n  format?: ColorFormat;\n\n  /** Determines whether color picker should be displayed, `true` by default */\n  withPicker?: boolean;\n\n  /** Color swatches */\n  swatches?: string[];\n\n  /** Number of swatches displayed in one row, `7` by default */\n  swatchesPerRow?: number;\n\n  /** Controls size of hue, alpha and saturation sliders, `'md'` by default */\n  size?: RaikouSize | (string & {});\n}\n\nexport interface ColorPickerProps\n  extends BoxProps,\n    __ColorPickerProps,\n    StylesApiProps<ColorPickerFactory>,\n    ElementProps<\"div\", \"onChange\" | \"value\" | \"defaultValue\"> {\n  __staticSelector?: string;\n\n  /** Determines whether component should take 100% width of its container, `false` by default */\n  fullWidth?: boolean;\n\n  /** Determines whether interactive elements should be focusable, `true` by default */\n  focusable?: boolean;\n\n  /** Saturation slider `aria-label` */\n  saturationLabel?: string;\n\n  /** Hue slider `aria-label` */\n  hueLabel?: string;\n\n  /** Alpha slider `aria-label` */\n  alphaLabel?: string;\n\n  /** Called when one of the color swatches is clicked */\n  onColorSwatchClick?: (color: string) => void;\n}\n\nexport type ColorPickerFactory = Factory<{\n  props: ColorPickerProps;\n  ref: HTMLDivElement;\n  stylesNames: ColorPickerStylesNames;\n  vars: ColorPickerCssVariables;\n}>;\n\nconst defaultProps: Partial<ColorPickerProps> = {\n  swatchesPerRow: 7,\n  withPicker: true,\n  focusable: true,\n  __staticSelector: \"ColorPicker\",\n};\n\nconst varsResolver = createVarsResolver<ColorPickerFactory>(\n  (_, { size, swatchesPerRow }) => ({\n    wrapper: {\n      \"--cp-preview-size\": getSize(size, \"cp-preview-size\"),\n      \"--cp-width\": getSize(size, \"cp-width\"),\n      \"--cp-body-spacing\": getSpacing(size),\n      \"--cp-swatch-size\": `${100 / swatchesPerRow!}%`,\n      \"--cp-thumb-size\": getSize(size, \"cp-thumb-size\"),\n      \"--cp-saturation-height\": getSize(size, \"cp-saturation-height\"),\n    },\n  }),\n);\n\nexport const ColorPicker = factory<ColorPickerFactory>((_props, ref) => {\n  const props = useProps(\"ColorPicker\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    format,\n    value,\n    defaultValue,\n    onChange,\n    onChangeEnd,\n    withPicker,\n    size,\n    saturationLabel,\n    hueLabel,\n    alphaLabel,\n    focusable,\n    swatches,\n    swatchesPerRow,\n    fullWidth,\n    onColorSwatchClick,\n    __staticSelector,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ColorPickerFactory>({\n    name: __staticSelector!,\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"wrapper\",\n    vars,\n    varsResolver,\n  });\n\n  const formatRef = useRef(format);\n  const valueRef = useRef<string>();\n  const scrubTimeoutRef = useRef<number>(-1);\n  const isScrubbingRef = useRef(false);\n  const withAlpha = format === \"hexa\" || format === \"rgba\" || format === \"hsla\";\n\n  const [_value, setValue, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"#FFFFFF\",\n    onChange,\n  });\n\n  const [parsed, setParsed] = useState<HsvaColor>(parseColor(_value));\n\n  const startScrubbing = () => {\n    window.clearTimeout(scrubTimeoutRef.current);\n    isScrubbingRef.current = true;\n  };\n\n  const stopScrubbing = () => {\n    window.clearTimeout(scrubTimeoutRef.current);\n    scrubTimeoutRef.current = window.setTimeout(() => {\n      isScrubbingRef.current = false;\n    }, 200);\n  };\n\n  const handleChange = (color: Partial<HsvaColor>) => {\n    setParsed((current) => {\n      const next = { ...current, ...color };\n      valueRef.current = convertHsvaTo(formatRef.current!, next);\n      return next;\n    });\n\n    setValue(valueRef.current!);\n  };\n\n  useDidUpdate(() => {\n    if (isColorValid(value!) && !isScrubbingRef.current) {\n      setParsed(parseColor(value!));\n    }\n  }, [value]);\n\n  useDidUpdate(() => {\n    formatRef.current = format;\n    setValue(convertHsvaTo(format!, parsed));\n  }, [format]);\n\n  return (\n    <ColorPickerProvider value={{ getStyles }}>\n      <Box\n        ref={ref}\n        {...getStyles(\"wrapper\")}\n        size={size}\n        mod={{ \"full-width\": fullWidth }}\n        {...others}\n      >\n        {withPicker && (\n          <>\n            <Saturation\n              value={parsed}\n              onChange={handleChange}\n              onChangeEnd={({ s, v }) =>\n                onChangeEnd?.(\n                  convertHsvaTo(formatRef.current!, {\n                    ...parsed,\n                    s: s!,\n                    v: v!,\n                  }),\n                )\n              }\n              color={_value}\n              size={size!}\n              focusable={focusable}\n              saturationLabel={saturationLabel}\n              onScrubStart={startScrubbing}\n              onScrubEnd={stopScrubbing}\n            />\n\n            <div {...getStyles(\"body\")}>\n              <div {...getStyles(\"sliders\")}>\n                <HueSlider\n                  value={parsed.h}\n                  onChange={(h) => handleChange({ h })}\n                  onChangeEnd={(h) =>\n                    onChangeEnd?.(\n                      convertHsvaTo(formatRef.current!, { ...parsed, h }),\n                    )\n                  }\n                  size={size}\n                  focusable={focusable}\n                  aria-label={hueLabel}\n                  onScrubStart={startScrubbing}\n                  onScrubEnd={stopScrubbing}\n                />\n\n                {withAlpha && (\n                  <AlphaSlider\n                    value={parsed.a}\n                    onChange={(a) => handleChange({ a })}\n                    onChangeEnd={(a) => {\n                      onChangeEnd?.(\n                        convertHsvaTo(formatRef.current!, { ...parsed, a }),\n                      );\n                    }}\n                    size={size}\n                    color={convertHsvaTo(\"hex\", parsed)}\n                    focusable={focusable}\n                    aria-label={alphaLabel}\n                    onScrubStart={startScrubbing}\n                    onScrubEnd={stopScrubbing}\n                  />\n                )}\n              </div>\n\n              {withAlpha && (\n                <ColorSwatch\n                  color={_value}\n                  radius=\"sm\"\n                  size=\"var(--cp-preview-size)\"\n                  {...getStyles(\"preview\")}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n        {Array.isArray(swatches) && (\n          <Swatches\n            data={swatches}\n            swatchesPerRow={swatchesPerRow}\n            focusable={focusable}\n            setValue={setValue}\n            onChangeEnd={(color) => {\n              const convertedColor = convertHsvaTo(format!, parseColor(color));\n              onColorSwatchClick?.(convertedColor);\n              onChangeEnd?.(convertedColor);\n              if (!controlled) {\n                setParsed(parseColor(color));\n              }\n            }}\n          />\n        )}\n      </Box>\n    </ColorPickerProvider>\n  );\n});\n\nColorPicker.displayName = \"@raikou/core/ColorPicker\";\nColorPicker.classes = classes;\n","import React, { forwardRef } from \"react\";\nimport { useProps, rem } from \"@raikou/core\";\nimport { ColorSlider, ColorSliderProps } from \"../ColorSlider/ColorSlider\";\nimport { round } from \"../converters/parsers\";\n\nexport interface AlphaSliderProps\n  extends Omit<ColorSliderProps, \"maxValue\" | \"overlays\" | \"round\"> {\n  color: string;\n}\n\nconst defaultProps: Partial<AlphaSliderProps> = {};\n\nexport const AlphaSlider = forwardRef<HTMLDivElement, AlphaSliderProps>(\n  (props, ref) => {\n    const { value, onChange, onChangeEnd, color, ...others } = useProps(\n      \"AlphaSlider\",\n      defaultProps,\n      props,\n    );\n\n    return (\n      <ColorSlider\n        {...others}\n        ref={ref}\n        value={value}\n        onChange={(val) => onChange?.(round(val, 2))}\n        onChangeEnd={(val) => onChangeEnd?.(round(val, 2))}\n        maxValue={1}\n        round={false}\n        data-alpha\n        overlays={[\n          {\n            backgroundImage:\n              \"linear-gradient(45deg, var(--_slider-checkers) 25%, transparent 25%), linear-gradient(-45deg, var(--_slider-checkers) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--_slider-checkers) 75%), linear-gradient(-45deg, var(--raikou-color-body) 75%, var(--_slider-checkers) 75%)\",\n            backgroundSize: `${rem(8)} ${rem(8)}`,\n            backgroundPosition: `0 0, 0 ${rem(4)}, ${rem(4)} -${rem(4)}, -${rem(\n              4,\n            )} 0`,\n          },\n          {\n            backgroundImage: `linear-gradient(90deg, transparent, ${color})`,\n          },\n          {\n            boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(\n              1,\n            )} inset, rgb(0, 0, 0, .15) 0 0 ${rem(4)} inset`,\n          },\n        ]}\n      />\n    );\n  },\n);\n\nAlphaSlider.displayName = \"@raikou/core/AlphaSlider\";\n","import React, { useRef, useState } from \"react\";\nimport {\n  UseMovePosition,\n  clampUseMovePosition,\n  useDidUpdate,\n  useMergedRef,\n  useMove,\n} from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  RaikouSize,\n  useRaikouTheme,\n  rem,\n} from \"@raikou/core\";\nimport classes from \"../ColorPicker.module.css\";\nimport { useColorPickerContext } from \"../ColorPicker.context\";\nimport { Thumb } from \"../Thumb/Thumb\";\n\nexport type ColorSliderStylesNames = \"slider\" | \"sliderOverlay\" | \"thumb\";\nexport type ColorSliderVariant = string;\nexport type ColorSliderCssVariables = {\n  root: \"--test\";\n};\n\nexport interface __ColorSliderProps extends ElementProps<\"div\", \"onChange\"> {\n  value: number;\n  onChange?: (value: number) => void;\n  onChangeEnd?: (value: number) => void;\n  onScrubStart?: () => void;\n  onScrubEnd?: () => void;\n  size?: RaikouSize | (string & {});\n  focusable?: boolean;\n}\n\nexport interface ColorSliderProps\n  extends BoxProps,\n    StylesApiProps<ColorSliderFactory>,\n    __ColorSliderProps,\n    ElementProps<\"div\", \"onChange\"> {\n  __staticSelector?: string;\n  maxValue: number;\n  overlays: React.CSSProperties[];\n  round: boolean;\n  thumbColor?: string;\n}\n\nexport type ColorSliderFactory = Factory<{\n  props: ColorSliderProps;\n  ref: HTMLDivElement;\n  stylesNames: ColorSliderStylesNames;\n  vars: ColorSliderCssVariables;\n  variant: ColorSliderVariant;\n}>;\n\nconst defaultProps: Partial<ColorSliderProps> = {};\n\nconst varsResolver = createVarsResolver<ColorSliderFactory>(() => ({\n  root: {\n    \"--test\": \"test\",\n  },\n}));\n\nexport const ColorSlider = factory<ColorSliderFactory>((_props, ref) => {\n  const props = useProps(\"ColorSlider\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onChange,\n    onChangeEnd,\n    maxValue,\n    round,\n    size = \"md\",\n    focusable = true,\n    value,\n    overlays,\n    thumbColor = \"transparent\",\n    onScrubStart,\n    onScrubEnd,\n    __staticSelector = \"ColorPicker\",\n    ...others\n  } = props;\n\n  const _getStyles = useStyles<ColorSliderFactory>({\n    name: __staticSelector,\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const ctxGetStyles = useColorPickerContext()?.getStyles;\n  const getStyles = ctxGetStyles || _getStyles;\n\n  const theme = useRaikouTheme();\n  const [position, setPosition] = useState({ y: 0, x: value / maxValue });\n  const positionRef = useRef(position);\n  const getChangeValue = (val: number) =>\n    round ? Math.round(val * maxValue) : val * maxValue;\n  const { ref: sliderRef } = useMove(\n    ({ x, y }) => {\n      positionRef.current = { x, y };\n      onChange?.(getChangeValue(x));\n    },\n    {\n      onScrubEnd: () => {\n        const { x } = positionRef.current;\n        onChangeEnd?.(getChangeValue(x));\n        onScrubEnd?.();\n      },\n      onScrubStart,\n    },\n  );\n\n  useDidUpdate(() => {\n    setPosition({ y: 0, x: value / maxValue });\n  }, [value]);\n\n  const handleArrow = (\n    event: React.KeyboardEvent<HTMLDivElement>,\n    pos: UseMovePosition,\n  ) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange?.(getChangeValue(_position.x));\n    onChangeEnd?.(getChangeValue(_position.x));\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.key) {\n      case \"ArrowRight\": {\n        handleArrow(event, { x: position.x + 0.05, y: position.y });\n        break;\n      }\n\n      case \"ArrowLeft\": {\n        handleArrow(event, { x: position.x - 0.05, y: position.y });\n        break;\n      }\n    }\n  };\n\n  const layers = overlays.map((overlay, index) => (\n    <div {...getStyles(\"sliderOverlay\")} style={overlay} key={index} />\n  ));\n\n  return (\n    <Box\n      {...others}\n      ref={useMergedRef(sliderRef, ref)}\n      {...getStyles(\"slider\")}\n      role=\"slider\"\n      aria-valuenow={value}\n      aria-valuemax={maxValue}\n      aria-valuemin={0}\n      tabIndex={focusable ? 0 : -1}\n      onKeyDown={handleKeyDown}\n      data-focus-ring={theme.focusRing}\n      __vars={{\n        \"--_cp-thumb-size\": `var(--cp-thumb-size-${size})`,\n      }}\n    >\n      {layers}\n\n      <Thumb\n        position={position}\n        {...getStyles(\"thumb\", {\n          style: { top: rem(1), background: thumbColor },\n        })}\n      />\n    </Box>\n  );\n});\n\nColorSlider.displayName = \"@raikou/core/ColorSlider\";\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/ColorPicker/src/ColorPicker.module.css\"; export default {\"wrapper\":\"m-fee9c77\",\"preview\":\"m-9dddfbac\",\"body\":\"m-bffecc3e\",\"sliders\":\"m-3283bb96\",\"thumb\":\"m-40d572ba\",\"swatch\":\"m-d8ee6fd8\",\"swatches\":\"m-5711e686\",\"saturation\":\"m-202a296e\",\"saturationOverlay\":\"m-11b3db02\",\"slider\":\"m-d856d47d\",\"sliderOverlay\":\"m-8f327113\"}","import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nconst useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n","import { GetStylesApi } from \"@raikou/core\";\nimport { createOptionalContext } from \"../../_utils\";\nimport type { ColorPickerFactory } from \"./ColorPicker\";\n\ninterface ColorPickerContextValue {\n  getStyles: GetStylesApi<ColorPickerFactory>;\n}\n\nexport const [ColorPickerProvider, useColorPickerContext] =\n  createOptionalContext<ColorPickerContextValue>(null);\n","import React, { forwardRef } from \"react\";\nimport { Box } from \"@raikou/core\";\n\nexport interface ThumbProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  variant?: string;\n  position: { x: number; y: number };\n}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  ({ className, style, position, ...others }, ref) => {\n    return (\n      <Box\n        ref={ref}\n        __vars={{\n          \"--_thumb-y-offset\": `${position.y * 100}%`,\n          \"--_thumb-x-offset\": `${position.x * 100}%`,\n        }}\n        {...others}\n      />\n    );\n  },\n);\n\nThumb.displayName = \"@raikou/core/ColorPickerThumb\";\n","import { HsvaColor, RgbaColor, ColorFormat, HslaColor } from '../ColorPicker.types';\n\nexport function round(number: number, digits = 0, base = 10 ** digits) {\n  return Math.round(base * number) / base;\n}\n\nfunction hslaToHsva({ h, s, l, a }: HslaColor): HsvaColor {\n  const ss = s * ((l < 50 ? l : 100 - l) / 100);\n\n  return {\n    h,\n    s: ss > 0 ? ((2 * ss) / (l + ss)) * 100 : 0,\n    v: l + ss,\n    a,\n  };\n}\n\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport function parseHue(value: string, unit = 'deg') {\n  return Number(value) * (angleUnits[unit] || 1);\n}\n\nconst HSL_REGEXP =\n  /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n\nexport function parseHsla(color: string): HsvaColor {\n  const match = HSL_REGEXP.exec(color);\n\n  if (!match) {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n}\n\nfunction rgbaToHsva({ r, g, b, a }: RgbaColor): HsvaColor {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n      ? 2 + (b - r) / delta\n      : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh), 3),\n    s: round(max ? (delta / max) * 100 : 0, 3),\n    v: round((max / 255) * 100, 3),\n    a,\n  };\n}\n\nexport function parseHex(color: string): HsvaColor {\n  const hex = color[0] === '#' ? color.slice(1) : color;\n\n  if (hex.length === 3) {\n    return rgbaToHsva({\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1,\n    });\n  }\n\n  return rgbaToHsva({\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n    a: 1,\n  });\n}\n\nexport function parseHexa(color: string): HsvaColor {\n  const hex = color[0] === '#' ? color.slice(1) : color;\n\n  const roundA = (a: string) => round(parseInt(a, 16) / 255, 3);\n  if (hex.length === 4) {\n    const withoutOpacity = hex.slice(0, 3);\n    const a = roundA(hex[3] + hex[3]);\n\n    const hsvaColor: HsvaColor = { ...parseHex(withoutOpacity), a };\n    return hsvaColor;\n  }\n\n  const withoutOpacity = hex.slice(0, 6);\n  const a = roundA(hex.slice(6, 8));\n  const hsvaColor: HsvaColor = { ...parseHex(withoutOpacity), a };\n  return hsvaColor;\n}\n\nconst RGB_REGEXP =\n  /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n\nexport function parseRgba(color: string): HsvaColor {\n  const match = RGB_REGEXP.exec(color);\n\n  if (!match) {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n}\n\nconst VALIDATION_REGEXP: Record<ColorFormat, RegExp> = {\n  hex: /^#?([0-9A-F]{3}){1,2}$/i,\n  hexa: /^#?([0-9A-F]{4}){1,2}$/i,\n  rgb: /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  rgba: /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  hsl: /hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\)/i,\n  hsla: /^hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/i,\n};\n\nconst CONVERTERS: Record<ColorFormat, (color: string) => HsvaColor> = {\n  hex: parseHex,\n  hexa: parseHexa,\n  rgb: parseRgba,\n  rgba: parseRgba,\n  hsl: parseHsla,\n  hsla: parseHsla,\n};\n\nexport function isColorValid(color: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [, regexp] of Object.entries(VALIDATION_REGEXP)) {\n    if (regexp.test(color)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function parseColor(color: string): HsvaColor {\n  if (typeof color !== 'string') {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  if (color === 'transparent') {\n    return { h: 0, s: 0, v: 0, a: 0 };\n  }\n\n  const trimmed = color.trim();\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [rule, regexp] of Object.entries(VALIDATION_REGEXP)) {\n    if (regexp.test(trimmed)) {\n      return CONVERTERS[rule as keyof typeof CONVERTERS](trimmed);\n    }\n  }\n\n  return { h: 0, s: 0, v: 0, a: 1 };\n}\n","import React, { forwardRef } from \"react\";\nimport { useProps, rem } from \"@raikou/core\";\nimport { ColorSlider, ColorSliderProps } from \"../ColorSlider/ColorSlider\";\n\nexport interface HueSliderProps\n  extends Omit<ColorSliderProps, \"maxValue\" | \"overlays\" | \"round\"> {}\n\nexport const HueSlider = forwardRef<HTMLDivElement, HueSliderProps>(\n  (props, ref) => {\n    const { value, onChange, onChangeEnd, color, ...others } = useProps(\n      \"HueSlider\",\n      {},\n      props,\n    );\n\n    return (\n      <ColorSlider\n        {...others}\n        ref={ref}\n        value={value}\n        onChange={onChange}\n        onChangeEnd={onChangeEnd}\n        maxValue={360}\n        thumbColor={`hsl(${value}, 100%, 50%)`}\n        round\n        data-hue\n        overlays={[\n          {\n            backgroundImage:\n              \"linear-gradient(to right,hsl(0,100%,50%),hsl(60,100%,50%),hsl(120,100%,50%),hsl(170,100%,50%),hsl(240,100%,50%),hsl(300,100%,50%),hsl(360,100%,50%))\",\n          },\n          {\n            boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(\n              1,\n            )} inset, rgb(0, 0, 0, .15) 0 0 ${rem(4)} inset`,\n          },\n        ]}\n      />\n    );\n  },\n);\n\nHueSlider.displayName = \"@raikou/core/HueSlider\";\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { UseMovePosition, clampUseMovePosition, useMove } from \"@raikou/hooks\";\nimport { Box, ElementProps, RaikouSize } from \"@raikou/core\";\nimport { HsvaColor } from \"../ColorPicker.types\";\nimport { convertHsvaTo } from \"../converters\";\nimport { Thumb } from \"../Thumb/Thumb\";\nimport { useColorPickerContext } from \"../ColorPicker.context\";\n\nexport interface SaturationProps extends ElementProps<\"div\", \"onChange\"> {\n  value: HsvaColor;\n  onChange: (color: Partial<HsvaColor>) => void;\n  onChangeEnd: (color: Partial<HsvaColor>) => void;\n  onScrubStart?: () => void;\n  onScrubEnd?: () => void;\n  saturationLabel?: string;\n  size: RaikouSize | (string & {});\n  color: string;\n  focusable?: boolean;\n}\n\nexport function Saturation({\n  className,\n  onChange,\n  onChangeEnd,\n  value,\n  saturationLabel,\n  focusable = true,\n  size,\n  color,\n  onScrubStart,\n  onScrubEnd,\n  ...others\n}: SaturationProps) {\n  const { getStyles } = useColorPickerContext()!;\n\n  const [position, setPosition] = useState({\n    x: value.s / 100,\n    y: 1 - value.v / 100,\n  });\n  const positionRef = useRef(position);\n\n  const { ref } = useMove(\n    ({ x, y }) => {\n      positionRef.current = { x, y };\n      onChange({ s: Math.round(x * 100), v: Math.round((1 - y) * 100) });\n    },\n    {\n      onScrubEnd: () => {\n        const { x, y } = positionRef.current;\n        onChangeEnd({ s: Math.round(x * 100), v: Math.round((1 - y) * 100) });\n        onScrubEnd?.();\n      },\n      onScrubStart,\n    },\n  );\n\n  useEffect(() => {\n    setPosition({ x: value.s / 100, y: 1 - value.v / 100 });\n  }, [value.s, value.v]);\n\n  const handleArrow = (\n    event: React.KeyboardEvent<HTMLDivElement>,\n    pos: UseMovePosition,\n  ) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100),\n    });\n    onChangeEnd({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100),\n    });\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.key) {\n      case \"ArrowUp\": {\n        handleArrow(event, { y: position.y - 0.05, x: position.x });\n        break;\n      }\n\n      case \"ArrowDown\": {\n        handleArrow(event, { y: position.y + 0.05, x: position.x });\n        break;\n      }\n\n      case \"ArrowRight\": {\n        handleArrow(event, { x: position.x + 0.05, y: position.y });\n        break;\n      }\n\n      case \"ArrowLeft\": {\n        handleArrow(event, { x: position.x - 0.05, y: position.y });\n        break;\n      }\n    }\n  };\n\n  return (\n    <Box\n      {...getStyles(\"saturation\")}\n      ref={ref as any}\n      {...others}\n      role=\"slider\"\n      aria-label={saturationLabel}\n      aria-valuenow={position.x}\n      aria-valuetext={convertHsvaTo(\"rgba\", value)}\n      tabIndex={focusable ? 0 : -1}\n      onKeyDown={handleKeyDown}\n    >\n      <div\n        {...getStyles(\"saturationOverlay\", {\n          style: { backgroundColor: `hsl(${value.h}, 100%, 50%)` },\n        })}\n      />\n\n      <div\n        {...getStyles(\"saturationOverlay\", {\n          style: {\n            backgroundImage: \"linear-gradient(90deg, #fff, transparent)\",\n          },\n        })}\n      />\n\n      <div\n        {...getStyles(\"saturationOverlay\", {\n          style: {\n            backgroundImage: \"linear-gradient(0deg, #000, transparent)\",\n          },\n        })}\n      />\n\n      <Thumb\n        position={position}\n        {...getStyles(\"thumb\", { style: { backgroundColor: color } })}\n      />\n    </Box>\n  );\n}\n\nSaturation.displayName = \"@raikou/core/Saturation\";\n","import { HsvaColor, RgbaColor, ColorFormat } from '../ColorPicker.types';\nimport { round } from './parsers';\n\nexport function hsvaToRgbaObject({ h, s, v, a }: HsvaColor): RgbaColor {\n  const _h = (h / 360) * 6;\n  const _s = s / 100;\n  const _v = v / 100;\n\n  const hh = Math.floor(_h);\n  const l = _v * (1 - _s);\n  const c = _v * (1 - (_h - hh) * _s);\n  const d = _v * (1 - (1 - _h + hh) * _s);\n  const module = hh % 6;\n\n  return {\n    r: round([_v, c, l, l, d, _v][module] * 255),\n    g: round([d, _v, _v, c, l, l][module] * 255),\n    b: round([l, l, d, _v, _v, c][module] * 255),\n    a: round(a, 2),\n  };\n}\n\nexport function hsvaToRgba(color: HsvaColor, includeAlpha: boolean) {\n  const { r, g, b, a } = hsvaToRgbaObject(color);\n\n  if (!includeAlpha) {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  return `rgba(${r}, ${g}, ${b}, ${round(a, 2)})`;\n}\n\nexport function hsvaToHsl({ h, s, v, a }: HsvaColor, includeAlpha: boolean) {\n  const hh = ((200 - s) * v) / 100;\n\n  const result = {\n    h: Math.round(h),\n    s: Math.round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: Math.round(hh / 2),\n  };\n\n  if (!includeAlpha) {\n    return `hsl(${result.h}, ${result.s}%, ${result.l}%)`;\n  }\n\n  return `hsla(${result.h}, ${result.s}%, ${result.l}%, ${round(a, 2)})`;\n}\n\nfunction formatHexPart(number: number) {\n  const hex = number.toString(16);\n  return hex.length < 2 ? `0${hex}` : hex;\n}\n\nexport function hsvaToHex(color: HsvaColor) {\n  const { r, g, b } = hsvaToRgbaObject(color);\n  return `#${formatHexPart(r)}${formatHexPart(g)}${formatHexPart(b)}`;\n}\n\nexport function hsvaToHexa(color: HsvaColor) {\n  const a = Math.round(color.a * 255);\n\n  return `${hsvaToHex(color)}${formatHexPart(a)}`;\n}\n\nconst CONVERTERS: Record<ColorFormat, (color: HsvaColor) => string> = {\n  hex: hsvaToHex,\n  hexa: (color) => hsvaToHexa(color),\n  rgb: (color) => hsvaToRgba(color, false),\n  rgba: (color) => hsvaToRgba(color, true),\n  hsl: (color) => hsvaToHsl(color, false),\n  hsla: (color) => hsvaToHsl(color, true),\n};\n\nexport function convertHsvaTo(format: ColorFormat, color: HsvaColor) {\n  if (!color) {\n    return '#000000';\n  }\n\n  if (!(format in CONVERTERS)) {\n    return CONVERTERS.hex(color);\n  }\n\n  return CONVERTERS[format](color);\n}\n","import React, { forwardRef } from \"react\";\nimport { Box, ElementProps } from \"@raikou/core\";\nimport { ColorSwatch } from \"../../../ColorSwatch/src\";\nimport { useColorPickerContext } from \"../ColorPicker.context\";\n\nexport interface SwatchesProps extends ElementProps<\"div\"> {\n  size?: string | number;\n  data: string[];\n  swatchesPerRow?: number;\n  focusable?: boolean;\n  onChangeEnd?: (color: string) => void;\n  setValue: (value: string) => void;\n}\n\nexport const Swatches = forwardRef<HTMLDivElement, SwatchesProps>(\n  (\n    {\n      className,\n      datatype,\n      setValue,\n      onChangeEnd,\n      size,\n      focusable,\n      data,\n      swatchesPerRow,\n      ...others\n    },\n    ref,\n  ) => {\n    const { getStyles } = useColorPickerContext()!;\n\n    const colors = data.map((color, index) => (\n      <ColorSwatch\n        {...getStyles(\"swatch\")}\n        component=\"button\"\n        type=\"button\"\n        color={color}\n        key={index}\n        radius=\"sm\"\n        onClick={() => {\n          setValue(color);\n          onChangeEnd?.(color);\n        }}\n        aria-label={color}\n        tabIndex={focusable ? 0 : -1}\n        data-swatch\n      />\n    ));\n\n    return (\n      <Box {...getStyles(\"swatches\")} ref={ref} {...others}>\n        {colors}\n      </Box>\n    );\n  },\n);\n\nSwatches.displayName = \"@raikou/core/Swatches\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  RaikouRadius,\n  StylesApiProps,\n  getRadius,\n  polymorphicFactory,\n  rem,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport classes from \"./ColorSwatch.module.css\";\n\nexport type ColorSwatchStylesNames =\n  | \"root\"\n  | \"alphaOverlay\"\n  | \"shadowOverlay\"\n  | \"colorOverlay\"\n  | \"childrenOverlay\";\n\nexport type ColorSwatchCssVariables = {\n  root: \"--cs-radius\" | \"--cs-size\";\n};\n\nexport interface ColorSwatchProps\n  extends BoxProps,\n    StylesApiProps<ColorSwatchFactory> {\n  /** Color to display, not related to `theme.colors` – supports only CSS color values */\n  color: string;\n\n  /** Controls `width` and `height` of the swatch, any valid CSS value, numbers are converted to rem */\n  size?: React.CSSProperties[\"width\"];\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem */\n  radius?: RaikouRadius;\n\n  /** Determines whether the swatch should have inner `box-shadow`, `true` by default */\n  withShadow?: boolean;\n\n  /** Content rendered inside the swatch */\n  children?: React.ReactNode;\n}\n\nexport type ColorSwatchFactory = PolymorphicFactory<{\n  props: ColorSwatchProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: \"div\";\n  stylesNames: ColorSwatchStylesNames;\n  vars: ColorSwatchCssVariables;\n}>;\n\nconst defaultProps: Partial<ColorSwatchProps> = {\n  withShadow: true,\n};\n\nconst varsResolver = createVarsResolver<ColorSwatchFactory>(\n  (_, { radius, size }) => ({\n    root: {\n      \"--cs-radius\": radius === undefined ? undefined : getRadius(radius),\n      \"--cs-size\": rem(size),\n    },\n  }),\n);\n\nexport const ColorSwatch = polymorphicFactory<ColorSwatchFactory>(\n  (_props, ref) => {\n    const props = useProps(\"ColorSwatch\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      color,\n      size,\n      radius,\n      withShadow,\n      children,\n      variant,\n      ...others\n    } = useProps(\"ColorSwatch\", defaultProps, props);\n\n    const getStyles = useStyles<ColorSwatchFactory>({\n      name: \"ColorSwatch\",\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      vars,\n      varsResolver,\n    });\n\n    return (\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        {...getStyles(\"root\", { focusable: true })}\n        {...others}\n      >\n        <span {...getStyles(\"alphaOverlay\")} />\n        {withShadow && <span {...getStyles(\"shadowOverlay\")} />}\n        <span\n          {...getStyles(\"colorOverlay\", { style: { backgroundColor: color } })}\n        />\n        <span {...getStyles(\"childrenOverlay\")}>{children}</span>\n      </Box>\n    );\n  },\n);\n\nColorSwatch.displayName = \"@raikou/core/ColorSwatch\";\nColorSwatch.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/ColorSwatch/src/ColorSwatch.module.css\"; export default {\"root\":\"m-de3d2490\",\"colorOverlay\":\"m-862f3d1b\",\"shadowOverlay\":\"m-98ae7f22\",\"alphaOverlay\":\"m-95709ac0\",\"childrenOverlay\":\"m-93e74e3\"}","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/ColorPicker/src/ColorPicker.module.css\"; export default {\"wrapper\":\"m-fee9c77\",\"preview\":\"m-9dddfbac\",\"body\":\"m-bffecc3e\",\"sliders\":\"m-3283bb96\",\"thumb\":\"m-40d572ba\",\"swatch\":\"m-d8ee6fd8\",\"swatches\":\"m-5711e686\",\"saturation\":\"m-202a296e\",\"saturationOverlay\":\"m-11b3db02\",\"slider\":\"m-d856d47d\",\"sliderOverlay\":\"m-8f327113\"}"],"mappings":"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","names":["import_react","import_hooks","import_core","import_react","import_core","import_react","import_core","import_react","React","import_react","import_react","import_react","React","round","React","a","withoutOpacity","hsvaColor","defaultProps","React","import_react","import_core","React","import_react","import_hooks","import_core","module","CONVERTERS","React","import_react","import_core","import_react","import_core","defaultProps","varsResolver","React","React","ColorPicker_module_default","defaultProps","varsResolver","ColorPicker_module_default","React"]}