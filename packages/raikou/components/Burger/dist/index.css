/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/UnstyledButton/src/UnstyledButton.module.css/#css-module-data */
.m-87cf2631 {
  background-color: transparent;
  cursor: pointer;
  border: 0;
  padding: 0;
  appearance: none;
  font-size: var(--raikou-font-size-md);
  text-align: left;
  text-decoration: none;
  color: inherit;
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}
:where([dir=rtl]) .m-87cf2631 {
  text-align: right;
}

/* css-module:/Users/paul/development/src/github/raikou/packages/raikou/components/Burger/src/Burger.module.css/#css-module-data */
:where([data-raikou-color-scheme=light]) .m-fea6bf1a {
  --raikou-burger-color: #000;
}
:where([data-raikou-color-scheme=dark]) .m-fea6bf1a {
  --raikou-burger-color: #fff;
}
.m-fea6bf1a {
  --burger-size-xs: 12px;
  --burger-size-sm: 18px;
  --burger-size-md: 24px;
  --burger-size-lg: 34px;
  --burger-size-xl: 42px;
  --burger-size: var(--burger-size-md);
  width: calc(var(--burger-size) + var(--raikou-spacing-xs));
  height: calc(var(--burger-size) + var(--raikou-spacing-xs));
  padding: calc(var(--raikou-spacing-xs) / 2);
  cursor: pointer;
}
:where([data-raikou-color-scheme=light]) .m-fea6bf1a {
  --burger-color: var(--raikou-burger-color);
}
:where([data-raikou-color-scheme=dark]) .m-fea6bf1a {
  --burger-color: var(--raikou-burger-color);
}
.m-d4fb9cad {
  position: relative;
  user-select: none;
}
.m-d4fb9cad,
.m-d4fb9cad::before,
.m-d4fb9cad::after {
  display: block;
  width: var(--burger-size);
  height: calc(var(--burger-size) / 12);
  background-color: var(--burger-color);
  outline: 1px solid transparent;
  transition-property: background-color, transform;
  transition-duration: var(--burger-transition-duration, 300ms);
  transition-timing-function: var(--burger-transition-timing-function, ease);
}
.m-d4fb9cad::before,
.m-d4fb9cad::after {
  position: absolute;
  content: "";
  inset-inline-start: 0;
}
.m-d4fb9cad::before {
  top: calc(var(--burger-size) / -3);
}
.m-d4fb9cad::after {
  top: calc(var(--burger-size) / 3);
}
.m-d4fb9cad[data-opened] {
  background-color: transparent;
}
.m-d4fb9cad[data-opened]::before {
  transform: translateY(calc(var(--burger-size) / 3)) rotate(45deg);
}
.m-d4fb9cad[data-opened]::after {
  transform: translateY(calc(var(--burger-size) / -3)) rotate(-45deg);
}
/*# sourceMappingURL=index.css.map */