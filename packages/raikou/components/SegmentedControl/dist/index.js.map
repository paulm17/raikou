{"version":3,"sources":["../src/index.ts","../src/SegmentedControl.tsx","../../FloatingIndicator/src/FloatingIndicator.tsx","../../FloatingIndicator/src/use-floating-indicator.ts","css-module:./FloatingIndicator.module.css#css-module","css-module:./SegmentedControl.module.css#css-module"],"sourcesContent":["export { SegmentedControl } from \"./SegmentedControl\";\nexport type {\n  SegmentedControlCssVariables,\n  SegmentedControlFactory,\n  SegmentedControlItem,\n  SegmentedControlProps,\n  SegmentedControlStylesNames,\n} from \"./SegmentedControl\";\n","import React, { useState } from \"react\";\nimport {\n  useId,\n  useMergedRef,\n  useMounted,\n  useUncontrolled,\n} from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getThemeColor,\n  RaikouColor,\n  RaikouRadius,\n  RaikouSize,\n  StylesApiProps,\n  useRaikouTheme,\n  useProps,\n  useStyles,\n} from \"@raikou/core\";\nimport { FloatingIndicator } from \"../../FloatingIndicator/src\";\nimport classes from \"./SegmentedControl.module.css\";\n\nexport type SegmentedControlStylesNames =\n  | \"root\"\n  | \"input\"\n  | \"label\"\n  | \"control\"\n  | \"indicator\"\n  | \"innerLabel\";\nexport type SegmentedControlCssVariables = {\n  root:\n    | \"--sc-radius\"\n    | \"--sc-color\"\n    | \"--sc-font-size\"\n    | \"--sc-padding\"\n    | \"--sc-shadow\"\n    | \"--sc-transition-duration\"\n    | \"--sc-transition-timing-function\";\n};\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport interface SegmentedControlProps\n  extends BoxProps,\n    StylesApiProps<SegmentedControlFactory>,\n    ElementProps<\"div\", \"onChange\"> {\n  /** Data based on which controls are rendered */\n  data: (string | SegmentedControlItem)[];\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the component is disabled */\n  disabled?: boolean;\n\n  /** Name of the radio group, by default random name is generated */\n  name?: string;\n\n  /** Determines whether the component should take 100% width of its parent, `false` by default */\n  fullWidth?: boolean;\n\n  /** Key of `theme.colors` or any valid CSS color, changes color of indicator, by default color is based on current color scheme */\n  color?: RaikouColor;\n\n  /** Controls `font-size`, `padding` and `height` properties, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Indicator `transition-duration` in ms, set `0` to turn off transitions, `200` by default */\n  transitionDuration?: number;\n\n  /** Indicator `transition-timing-function` property, `ease` by default */\n  transitionTimingFunction?: string;\n\n  /** Determines in which orientation component id displayed, `'horizontal'` by default */\n  orientation?: \"vertical\" | \"horizontal\";\n\n  /** Determines whether the value can be changed */\n  readOnly?: boolean;\n\n  /** Determines whether text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n\n  /** Determines whether there should be borders between items, `true` by default */\n  withItemsBorders?: boolean;\n}\n\nexport type SegmentedControlFactory = Factory<{\n  props: SegmentedControlProps;\n  ref: HTMLDivElement;\n  stylesNames: SegmentedControlStylesNames;\n  vars: SegmentedControlCssVariables;\n}>;\n\nconst defaultProps: Partial<SegmentedControlProps> = {\n  withItemsBorders: true,\n};\n\nconst varsResolver = createVarsResolver<SegmentedControlFactory>(\n  (\n    theme,\n    { radius, color, transitionDuration, size, transitionTimingFunction },\n  ) => ({\n    root: {\n      \"--sc-radius\": radius === undefined ? undefined : getRadius(radius),\n      \"--sc-color\": color ? getThemeColor(color, theme) : undefined,\n      \"--sc-shadow\": color ? undefined : \"var(--raikou-shadow-xs)\",\n      \"--sc-transition-duration\":\n        transitionDuration === undefined\n          ? undefined\n          : `${transitionDuration}ms`,\n      \"--sc-transition-timing-function\": transitionTimingFunction,\n      \"--sc-padding\": getSize(size, \"sc-padding\"),\n      \"--sc-font-size\": getFontSize(size),\n    },\n  }),\n);\n\nexport const SegmentedControl = factory<SegmentedControlFactory>(\n  (_props, ref) => {\n    const props = useProps(\"SegmentedControl\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      data,\n      value,\n      defaultValue,\n      onChange,\n      size,\n      name,\n      disabled,\n      readOnly,\n      fullWidth,\n      orientation,\n      radius,\n      color,\n      transitionDuration,\n      transitionTimingFunction,\n      variant,\n      autoContrast,\n      withItemsBorders,\n      mod,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<SegmentedControlFactory>({\n      name: \"SegmentedControl\",\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      vars,\n      varsResolver,\n    });\n\n    const theme = useRaikouTheme();\n\n    const _data = data.map((item) =>\n      typeof item === \"string\" ? { label: item, value: item } : item,\n    );\n\n    const initialized = useMounted();\n    const [parent, setParent] = useState<HTMLElement | null>(null);\n    const [refs, setRefs] = useState<Record<string, HTMLElement | null>>({});\n    const setElementRef = (element: HTMLElement | null, val: string) => {\n      refs[val] = element;\n      setRefs(refs);\n    };\n\n    const [_value, handleValueChange] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: Array.isArray(data)\n        ? _data.find((item) => !item.disabled)?.value ??\n          (data[0] as any)?.value ??\n          null\n        : null,\n      onChange,\n    });\n\n    const uuid = useId(name);\n\n    const controls = _data.map((item) => (\n      <Box\n        {...getStyles(\"control\")}\n        mod={{ active: _value === item.value, orientation }}\n        key={item.value}\n      >\n        <input\n          {...getStyles(\"input\")}\n          disabled={disabled || item.disabled}\n          type=\"radio\"\n          name={uuid}\n          value={item.value}\n          id={`${uuid}-${item.value}`}\n          checked={_value === item.value}\n          onChange={() => !readOnly && handleValueChange(item.value)}\n          data-focus-ring={theme.focusRing}\n          key={`${item.value}-input`}\n        />\n\n        <Box\n          component=\"label\"\n          {...getStyles(\"label\")}\n          mod={{\n            active: _value === item.value && !(disabled || item.disabled),\n            disabled: disabled || item.disabled,\n            \"read-only\": readOnly,\n          }}\n          htmlFor={`${uuid}-${item.value}`}\n          ref={(node) => setElementRef(node, item.value)}\n          __vars={{\n            \"--sc-label-color\":\n              color !== undefined\n                ? getContrastColor({ color, theme, autoContrast })\n                : undefined,\n          }}\n          key={`${item.value}-label`}\n        >\n          <span {...getStyles(\"innerLabel\")}>{item.label}</span>\n        </Box>\n      </Box>\n    ));\n\n    const mergedRef = useMergedRef(ref, (node) => setParent(node));\n\n    if (data.length === 0) {\n      return null;\n    }\n\n    return (\n      <Box\n        {...getStyles(\"root\")}\n        variant={variant}\n        size={size}\n        ref={mergedRef}\n        mod={[\n          {\n            \"full-width\": fullWidth,\n            orientation,\n            initialized,\n            \"with-items-borders\": withItemsBorders,\n          },\n          mod,\n        ]}\n        {...others}\n        role=\"radiogroup\"\n      >\n        {typeof _value === \"string\" && (\n          <FloatingIndicator\n            target={refs[_value]}\n            parent={parent}\n            component=\"span\"\n            transitionDuration=\"var(--sc-transition-duration)\"\n            {...getStyles(\"indicator\")}\n          />\n        )}\n\n        {controls}\n      </Box>\n    );\n  },\n);\n\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = \"@raikou/core/SegmentedControl\";\n","import React, { useRef } from \"react\";\nimport { useMergedRef } from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from \"@raikou/core\";\nimport { useFloatingIndicator } from \"./use-floating-indicator\";\nimport classes from \"./FloatingIndicator.module.css\";\n\nexport type FloatingIndicatorStylesNames = \"root\";\nexport type FloatingIndicatorCssVariables = {\n  root: \"--transition-duration\";\n};\n\nexport interface FloatingIndicatorProps\n  extends BoxProps,\n    StylesApiProps<FloatingIndicatorFactory>,\n    ElementProps<\"div\"> {\n  /** Target element over which indicator should be displayed */\n  target: HTMLElement | null | undefined;\n\n  /** Parent element with relative position based on which indicator position should be calculated */\n  parent: HTMLElement | null | undefined;\n\n  /** Transition duration in ms, `150` by default */\n  transitionDuration?: number | string;\n\n  /** Determines whether indicator should be displayed after transition ends, should be set if used inside a container that has `transform: scale(n)` styles */\n  displayAfterTransitionEnd?: boolean;\n}\n\nexport type FloatingIndicatorFactory = Factory<{\n  props: FloatingIndicatorProps;\n  ref: HTMLDivElement;\n  stylesNames: FloatingIndicatorStylesNames;\n  vars: FloatingIndicatorCssVariables;\n}>;\n\nconst defaultProps: Partial<FloatingIndicatorProps> = {};\n\nconst varsResolver = createVarsResolver<FloatingIndicatorFactory>(\n  (_theme, { transitionDuration }) => ({\n    root: {\n      \"--transition-duration\":\n        typeof transitionDuration === \"number\"\n          ? `${transitionDuration}ms`\n          : transitionDuration,\n    },\n  }),\n);\n\nexport const FloatingIndicator = factory<FloatingIndicatorFactory>(\n  (_props, ref) => {\n    const props = useProps(\"FloatingIndicator\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      target,\n      parent,\n      transitionDuration,\n      mod,\n      displayAfterTransitionEnd,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<FloatingIndicatorFactory>({\n      name: \"FloatingIndicator\",\n      classes,\n      props,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      vars,\n      varsResolver,\n    });\n\n    const innerRef = useRef<HTMLDivElement>(null);\n    const { initialized, hidden } = useFloatingIndicator({\n      target,\n      parent,\n      ref: innerRef,\n      displayAfterTransitionEnd,\n    });\n    const mergedRef = useMergedRef(ref, innerRef);\n\n    if (!target || !parent) {\n      return null;\n    }\n\n    return (\n      <Box\n        ref={mergedRef}\n        mod={[{ initialized, hidden }, mod]}\n        {...getStyles(\"root\")}\n        {...others}\n      />\n    );\n  },\n);\n\nFloatingIndicator.displayName = \"@raikou/core/FloatingIndicator\";\nFloatingIndicator.classes = classes;\n","import { RefObject, useEffect, useRef, useState } from \"react\";\nimport { useMutationObserver, useTimeout } from \"@raikou/hooks\";\nimport { getEnv } from \"@raikou/core\";\n\nfunction isParent(\n  parentElement: HTMLElement | EventTarget | null,\n  childElement: HTMLElement | null,\n) {\n  if (!childElement || !parentElement) {\n    return false;\n  }\n\n  let parent = childElement.parentNode;\n  while (parent != null) {\n    if (parent === parentElement) {\n      return true;\n    }\n    parent = parent.parentNode;\n  }\n  return false;\n}\n\ninterface UseFloatingIndicatorInput {\n  target: HTMLElement | null | undefined;\n  parent: HTMLElement | null | undefined;\n  ref: RefObject<HTMLDivElement>;\n  displayAfterTransitionEnd?: boolean;\n}\n\nexport function useFloatingIndicator({\n  target,\n  parent,\n  ref,\n  displayAfterTransitionEnd,\n}: UseFloatingIndicatorInput) {\n  const transitionTimeout = useRef<number>();\n  const [initialized, setInitialized] = useState(false);\n\n  const [hidden, setHidden] = useState(\n    typeof displayAfterTransitionEnd === \"boolean\"\n      ? displayAfterTransitionEnd\n      : false,\n  );\n\n  const updatePosition = () => {\n    if (!target || !parent) {\n      return;\n    }\n\n    const targetRect = target.getBoundingClientRect();\n    const parentRect = parent.getBoundingClientRect();\n\n    const position = {\n      top: targetRect.top - parentRect.top,\n      left: targetRect.left - parentRect.left,\n      width: targetRect.width,\n      height: targetRect.height,\n    };\n\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${position.top}px) translateX(${position.left}px)`;\n      ref.current.style.width = `${position.width}px`;\n      ref.current.style.height = `${position.height}px`;\n    }\n  };\n\n  const updatePositionWithoutAnimation = () => {\n    window.clearTimeout(transitionTimeout.current);\n    if (ref.current) {\n      ref.current.style.transitionDuration = \"0ms\";\n    }\n    updatePosition();\n    transitionTimeout.current = window.setTimeout(() => {\n      if (ref.current) {\n        ref.current.style.transitionDuration = \"\";\n      }\n    }, 30);\n  };\n\n  const targetResizeObserver = useRef<ResizeObserver>();\n  const parentResizeObserver = useRef<ResizeObserver>();\n\n  useEffect(() => {\n    updatePosition();\n\n    if (target) {\n      targetResizeObserver.current = new ResizeObserver(\n        updatePositionWithoutAnimation,\n      );\n      targetResizeObserver.current.observe(target);\n\n      if (parent) {\n        parentResizeObserver.current = new ResizeObserver(\n          updatePositionWithoutAnimation,\n        );\n        parentResizeObserver.current.observe(parent);\n      }\n\n      return () => {\n        targetResizeObserver.current?.disconnect();\n        parentResizeObserver.current?.disconnect();\n      };\n    }\n\n    return undefined;\n  }, [parent, target]);\n\n  useEffect(() => {\n    if (parent) {\n      const handleTransitionEnd = (event: TransitionEvent) => {\n        if (isParent(event.target, parent)) {\n          updatePositionWithoutAnimation();\n          setHidden(false);\n        }\n      };\n\n      document.addEventListener(\"transitionend\", handleTransitionEnd);\n      return () => {\n        document.removeEventListener(\"transitionend\", handleTransitionEnd);\n      };\n    }\n\n    return undefined;\n  }, [parent]);\n\n  useTimeout(\n    () => {\n      // Prevents warning about state update without act\n      if (getEnv() !== \"test\") {\n        setInitialized(true);\n      }\n    },\n    20,\n    { autoInvoke: true },\n  );\n\n  useMutationObserver(\n    (mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === \"attributes\" &&\n          mutation.attributeName === \"dir\"\n        ) {\n          updatePositionWithoutAnimation();\n        }\n      });\n    },\n    { attributes: true, attributeFilter: [\"dir\"] },\n    () => document.documentElement,\n  );\n\n  return { initialized, hidden };\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/FloatingIndicator/src/FloatingIndicator.module.css\"; export default {\"root\":\"m-96b553a6\"}","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/SegmentedControl/src/SegmentedControl.module.css\"; export default {\"root\":\"m-cf365364\",\"indicator\":\"m-9e182ccd\",\"label\":\"m-1738fcb2\",\"input\":\"m-1714d588\",\"control\":\"m-69686b9b\",\"innerLabel\":\"m-78882f40\"}"],"mappings":"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","names":["import_react","import_hooks","import_core","import_react","import_hooks","import_core","React","defaultProps","varsResolver","React"]}