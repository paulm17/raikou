{"version":3,"sources":["../src/SegmentedControl.tsx","../src/get-root-padding.ts","css-module:./SegmentedControl.module.css#css-module"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  useId,\n  useMergedRef,\n  useResizeObserver,\n  useUncontrolled,\n  useTimeout,\n} from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouColor,\n  RaikouSize,\n  RaikouRadius,\n  getRadius,\n  getThemeColor,\n  getSize,\n  getFontSize,\n  useDirection,\n  createVarsResolver,\n  Factory,\n  useRaikouTheme,\n} from \"@raikou/core\";\nimport { getRootPadding } from \"./get-root-padding\";\nimport classes from \"./SegmentedControl.module.css\";\n\nconst WRAPPER_PADDING = 4;\n\nexport type SegmentedControlStylesNames =\n  | \"root\"\n  | \"input\"\n  | \"label\"\n  | \"control\"\n  | \"indicator\";\nexport type SegmentedControlCssVariables = {\n  root:\n    | \"--sc-radius\"\n    | \"--sc-color\"\n    | \"--sc-font-size\"\n    | \"--sc-padding\"\n    | \"--sc-shadow\"\n    | \"--sc-transition-duration\"\n    | \"--sc-transition-timing-function\";\n};\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport interface SegmentedControlProps\n  extends BoxProps,\n    StylesApiProps<SegmentedControlFactory>,\n    ElementProps<\"div\", \"onChange\"> {\n  /** Data based on which controls are rendered */\n  data: (string | SegmentedControlItem)[];\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the component is disabled */\n  disabled?: boolean;\n\n  /** Name of the radio group, by default random name is generated */\n  name?: string;\n\n  /** Determines whether the component should take 100% width of its parent, `false` by default */\n  fullWidth?: boolean;\n\n  /** Key of `theme.colors` or any valid CSS color, changes color of indicator, by default color is based on current color scheme */\n  color?: RaikouColor;\n\n  /** Controls `font-size`, `padding` and `height` properties, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Indicator `transition-duration` in ms, set `0` to turn off transitions, `200` by default */\n  transitionDuration?: number;\n\n  /** Indicator `transition-timing-function` property, `ease` by default */\n  transitionTimingFunction?: string;\n\n  /** Determines in which orientation component id displayed, `'horizontal'` by default */\n  orientation?: \"vertical\" | \"horizontal\";\n\n  /** Determines whether the value can be changed */\n  readOnly?: boolean;\n}\n\nexport type SegmentedControlFactory = Factory<{\n  props: SegmentedControlProps;\n  ref: HTMLDivElement;\n  stylesNames: SegmentedControlStylesNames;\n  vars: SegmentedControlCssVariables;\n}>;\n\nconst defaultProps: Partial<SegmentedControlProps> = {};\n\nconst varsResolver = createVarsResolver<SegmentedControlFactory>(\n  (\n    theme,\n    { radius, color, transitionDuration, size, transitionTimingFunction },\n  ) => ({\n    root: {\n      \"--sc-radius\": radius === undefined ? undefined : getRadius(radius),\n      \"--sc-color\": color ? getThemeColor(color, theme) : undefined,\n      \"--sc-shadow\": color ? undefined : \"var(--raikou-shadow-xs)\",\n      \"--sc-transition-duration\":\n        transitionDuration === undefined\n          ? undefined\n          : `${transitionDuration}ms`,\n      \"--sc-transition-timing-function\": transitionTimingFunction,\n      \"--sc-padding\": getSize(size, \"sc-padding\"),\n      \"--sc-font-size\": getFontSize(size),\n    },\n  }),\n);\n\nexport const SegmentedControl = factory<SegmentedControlFactory>(\n  (_props, ref) => {\n    const props = useProps(\"SegmentedControl\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      data,\n      value,\n      defaultValue,\n      onChange,\n      size,\n      name,\n      disabled,\n      readOnly,\n      fullWidth,\n      orientation,\n      radius,\n      color,\n      transitionDuration,\n      transitionTimingFunction,\n      variant,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<SegmentedControlFactory>({\n      name: \"SegmentedControl\",\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      vars,\n      varsResolver,\n    });\n\n    const { dir } = useDirection();\n    const theme = useRaikouTheme();\n\n    const _data = data.map((item) =>\n      typeof item === \"string\" ? { label: item, value: item } : item,\n    );\n\n    const [_value, handleValueChange] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: Array.isArray(data)\n        ? _data.find((item) => !item.disabled)?.value ??\n          (data[0] as any)?.value ??\n          null\n        : null,\n      onChange,\n    });\n\n    const [activePosition, setActivePosition] = useState({\n      width: 0,\n      height: 0,\n      translate: [0, 0],\n    });\n    const uuid = useId(name);\n    const refs = useRef<Record<string, HTMLLabelElement>>({});\n    const rootRef = useRef<HTMLDivElement>(null);\n    const [initialized, setInitialized] = useState(false);\n    const [observerRef, containerRect] = useResizeObserver();\n\n    useEffect(() => {\n      if (_value in refs.current && observerRef.current) {\n        const element = refs.current[_value];\n        if (element) {\n          const rootPadding = getRootPadding(rootRef.current!, WRAPPER_PADDING);\n          const elementRect = element.getBoundingClientRect();\n          const scaledValue = element.offsetWidth / elementRect.width;\n          const width = element.clientWidth * scaledValue || 0;\n          const height = element.clientHeight * scaledValue || 0;\n\n          const offsetRight =\n            containerRect.width -\n            element.parentElement!.offsetLeft +\n            (dir === \"rtl\" ? rootPadding.left : rootPadding.right) -\n            width;\n          const offsetLeft =\n            element.parentElement!.offsetLeft -\n            (dir === \"rtl\" ? rootPadding.right : rootPadding.left);\n\n          setActivePosition({\n            width,\n            height,\n            translate: [\n              dir === \"rtl\" ? offsetRight * -1 : offsetLeft,\n              element.parentElement!.offsetTop - rootPadding.top,\n            ],\n          });\n        } else {\n          setActivePosition({ width: 0, height: 0, translate: [0, 0] });\n        }\n      }\n    }, [_value, containerRect, dir, observerRef]);\n\n    useTimeout(() => setInitialized(true), 20, { autoInvoke: true });\n\n    const controls = _data.map((item) => (\n      <Box\n        {...getStyles(\"control\")}\n        mod={{ active: _value === item.value, orientation }}\n        key={item.value}\n      >\n        <input\n          {...getStyles(\"input\")}\n          disabled={disabled || item.disabled}\n          type=\"radio\"\n          name={uuid}\n          value={item.value}\n          id={`${uuid}-${item.value}`}\n          checked={_value === item.value}\n          onChange={() => !readOnly && handleValueChange(item.value)}\n          data-focus-ring={theme.focusRing}\n        />\n\n        <Box\n          component=\"label\"\n          {...getStyles(\"label\")}\n          mod={{\n            active: _value === item.value && !(disabled || item.disabled),\n            disabled: disabled || item.disabled,\n          }}\n          htmlFor={`${uuid}-${item.value}`}\n          ref={(node) => {\n            refs.current[item.value] = node!;\n          }}\n          __vars={{\n            \"--sc-label-color\":\n              color !== undefined ? \"var(--raikou-color-white)\" : undefined,\n          }}\n        >\n          {item.label}\n        </Box>\n      </Box>\n    ));\n\n    const mergedRef = useMergedRef(observerRef, rootRef, ref);\n\n    if (data.length === 0) {\n      return null;\n    }\n\n    return (\n      <Box\n        {...getStyles(\"root\")}\n        variant={variant}\n        size={size}\n        ref={mergedRef}\n        mod={{\n          \"full-width\": fullWidth,\n          orientation,\n          initialization: !initialized,\n        }}\n        {...others}\n        role=\"radiogroup\"\n      >\n        {typeof _value === \"string\" && (\n          <Box\n            component=\"span\"\n            {...getStyles(\"indicator\")}\n            __vars={{\n              \"--sc-indicator-width\": `${activePosition.width}px`,\n              \"--sc-indicator-height\": `${activePosition.height}px`,\n              \"--sc-indicator-transform\": `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px)`,\n            }}\n          />\n        )}\n\n        {controls}\n      </Box>\n    );\n  },\n);\n\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = \"@raikou/core/SegmentedControl\";\n","function getPaddingValue(value: string, defaultPaddingValue: number) {\n  const val = parseFloat(value.replace(\"px\", \"\"));\n  return Number.isNaN(val) ? defaultPaddingValue : val;\n}\n\nexport function getRootPadding(\n  root: HTMLDivElement,\n  defaultPaddingValue: number,\n) {\n  const computedStyle = window.getComputedStyle(root);\n  return {\n    top: getPaddingValue(\n      computedStyle.getPropertyValue(\"padding-top\"),\n      defaultPaddingValue,\n    ),\n    right: getPaddingValue(\n      computedStyle.getPropertyValue(\"padding-right\"),\n      defaultPaddingValue,\n    ),\n    bottom: getPaddingValue(\n      computedStyle.getPropertyValue(\"padding-bottom\"),\n      defaultPaddingValue,\n    ),\n    left: getPaddingValue(\n      computedStyle.getPropertyValue(\"padding-left\"),\n      defaultPaddingValue,\n    ),\n  };\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/SegmentedControl/src/SegmentedControl.module.css\"; export default {\"root\":\"m-cf365364\",\"indicator\":\"m-9e182ccd\",\"label\":\"m-1738fcb2\",\"input\":\"m-1714d588\",\"control\":\"m-69686b9b\"}"],"mappings":"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","names":[]}