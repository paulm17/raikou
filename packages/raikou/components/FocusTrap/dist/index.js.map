{"version":3,"sources":["../src/index.ts","../src/FocusTrap.tsx","../../VisuallyHidden/src/VisuallyHidden.tsx","css-module:./VisuallyHidden.module.css#css-module"],"sourcesContent":["export { FocusTrap } from './FocusTrap';\nexport type { FocusTrapProps } from './FocusTrap';\n","import React, { cloneElement } from \"react\";\nimport { useFocusTrap, useMergedRef } from \"@raikou/hooks\";\nimport { isElement } from \"@raikou/core\";\nimport { VisuallyHidden } from \"../../VisuallyHidden/src\";\n\nexport interface FocusTrapProps {\n  /** Element at which focus should be trapped, should support ref prop */\n  children: any;\n\n  /** Determines whether focus should be trapped within child element */\n  active?: boolean;\n\n  /** Prop that should be used to access component ref */\n  refProp?: string;\n}\n\nexport function FocusTrap({\n  children,\n  active = true,\n  refProp = \"ref\",\n}: FocusTrapProps): React.ReactElement {\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, children?.ref);\n\n  if (!isElement(children)) {\n    return children;\n  }\n\n  return cloneElement(children, { [refProp]: ref });\n}\n\nexport function FocusTrapInitialFocus(\n  props: React.ComponentPropsWithoutRef<\"span\">,\n) {\n  return <VisuallyHidden tabIndex={-1} data-autofocus {...props} />;\n}\n\nFocusTrap.displayName = \"@raikou/core/FocusTrap\";\nFocusTrapInitialFocus.displayName = \"@raikou/core/FocusTrapInitialFocus\";\nFocusTrap.InitialFocus = FocusTrapInitialFocus;\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from \"@raikou/core\";\nimport classes from \"./VisuallyHidden.module.css\";\n\nexport type VisuallyHiddenStylesNames = \"root\";\n\nexport interface VisuallyHiddenProps\n  extends BoxProps,\n    StylesApiProps<VisuallyHiddenFactory>,\n    ElementProps<\"div\"> {}\n\nexport type VisuallyHiddenFactory = Factory<{\n  props: VisuallyHiddenProps;\n  ref: HTMLDivElement;\n  stylesNames: VisuallyHiddenStylesNames;\n}>;\n\nconst defaultProps: Partial<VisuallyHiddenProps> = {};\n\nexport const VisuallyHidden = factory<VisuallyHiddenFactory>((_props, ref) => {\n  const props = useProps(\"VisuallyHidden\", defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, ...others } =\n    props;\n\n  const getStyles = useStyles<VisuallyHiddenFactory>({\n    name: \"VisuallyHidden\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  return <Box component=\"span\" ref={ref} {...getStyles(\"root\")} {...others} />;\n});\n\nVisuallyHidden.displayName = \"@raikou/core/VisuallyHidden\";\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/VisuallyHidden/src/VisuallyHidden.module.css\"; export default {\"root\":\"m-515a97f8\"}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA,gBAAoC;AACpC,mBAA2C;AAC3C,IAAAC,eAA0B;;;ACF1B,mBAAkB;AAClB,kBASO;;;ACVqH,IAAO,gCAAQ,EAAC,QAAO,aAAY;;;AD0B/J,IAAM,eAA6C,CAAC;AAE7C,IAAM,qBAAiB,qBAA+B,CAAC,QAAQ,QAAQ;AAC5E,QAAM,YAAQ,sBAAS,kBAAkB,cAAc,MAAM;AAC7D,QACE,YADM,cAAY,WAAW,OAAO,QAAQ,UAAU,KA9B1D,IA+BI,IAD+D,mBAC/D,IAD+D,CAAzD,cAAY,aAAW,SAAO,UAAQ,YAAU;AAGxD,QAAM,gBAAY,uBAAiC;AAAA,IACjD,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO,6BAAAC,QAAA,cAAC,iDAAI,WAAU,QAAO,OAAc,UAAU,MAAM,IAAO,OAAQ;AAC5E,CAAC;AAED,eAAe,cAAc;;;AD/BtB,SAAS,UAAU;AAAA,EACxB;AAAA,EACA,SAAS;AAAA,EACT,UAAU;AACZ,GAAuC;AACrC,QAAM,mBAAe,2BAAa,MAAM;AACxC,QAAM,UAAM,2BAAa,cAAc,qCAAU,GAAG;AAEpD,MAAI,KAAC,wBAAU,QAAQ,GAAG;AACxB,WAAO;AAAA,EACT;AAEA,aAAO,4BAAa,UAAU,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;AAClD;AAEO,SAAS,sBACd,OACA;AACA,SAAO,8BAAAC,QAAA,cAAC,iCAAe,UAAU,IAAI,kBAAc,QAAK,MAAO;AACjE;AAEA,UAAU,cAAc;AACxB,sBAAsB,cAAc;AACpC,UAAU,eAAe;","names":["import_react","import_core","React","React"]}