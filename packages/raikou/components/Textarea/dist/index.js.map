{"version":3,"sources":["../src/index.ts","../src/Textarea.tsx","../../InputBase/src/InputBase.tsx","../../Input/src/Input.tsx","../../_utils/create-safe-context/create-safe-context.tsx","../../_utils/create-optional-context/create-optional-context.tsx","../../_utils/use-hovered/use-hovered.ts","../../_utils/create-use-external-events/create-use-external-events.ts","../../Input/src/InputWrapper.context.ts","../../Input/src/InputLabel/InputLabel.tsx","css-module:../Input.module.css#css-module","../../Input/src/InputError/InputError.tsx","../../Input/src/InputDescription/InputDescription.tsx","../../Input/src/InputPlaceholder/InputPlaceholder.tsx","../../Input/src/InputWrapper/InputWrapper.tsx","../../../hooks/dist/index.mjs","../../Input/src/InputWrapper/get-input-offsets/get-input-offsets.ts","css-module:./Input.module.css#css-module","../../Input/src/use-input-props.ts"],"sourcesContent":["export { Textarea } from './Textarea';\nexport type { TextareaFactory, TextareaProps } from './Textarea';\n","import React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { factory, ElementProps, useProps, Factory } from \"@raikou/core\";\nimport { InputBase, InputBaseProps } from \"../../InputBase/src\";\nimport { __InputStylesNames } from \"../../Input/src\";\n\nexport interface TextareaProps\n  extends InputBaseProps,\n    ElementProps<\"textarea\", \"size\"> {\n  /** Determines whether the textarea height should grow with its content, `false` by default */\n  autosize?: boolean;\n\n  /** Maximum rows for autosize textarea to grow, ignored if `autosize` prop is not set */\n  maxRows?: number;\n\n  /** Minimum rows of autosize textarea, ignored if `autosize` prop is not set */\n  minRows?: number;\n}\n\nexport type TextareaFactory = Factory<{\n  props: TextareaProps;\n  ref: HTMLTextAreaElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<TextareaProps> = {};\n\nexport const Textarea = factory<TextareaFactory>((props, ref) => {\n  const { autosize, maxRows, minRows, __staticSelector, ...others } = useProps(\n    \"Textarea\",\n    defaultProps,\n    props,\n  );\n\n  const autosizeProps = autosize ? { maxRows, minRows } : {};\n\n  return (\n    <InputBase<any>\n      component={autosize ? TextareaAutosize : \"textarea\"}\n      ref={ref}\n      {...others}\n      __staticSelector={__staticSelector || \"Textarea\"}\n      multiline\n      data-no-overflow={(autosize && maxRows === undefined) || undefined}\n      {...autosizeProps}\n    />\n  );\n});\n\nTextarea.displayName = \"@raikou/core/Textarea\";\n","import React from \"react\";\nimport {\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport {\n  __InputStylesNames,\n  __BaseInputProps,\n  InputVariant,\n  useInputProps,\n  Input,\n} from \"../../Input/src\";\n\nexport interface InputBaseProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<InputBaseFactory> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n\n  /** Props passed down to the root element (`Input.Wrapper` component) */\n  wrapperProps?: Record<string, any>;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputBaseFactory = PolymorphicFactory<{\n  props: InputBaseProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: \"input\";\n  stylesNames: __InputStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<InputBaseProps> = {\n  __staticSelector: \"InputBase\",\n  withAria: true,\n};\n\nexport const InputBase = polymorphicFactory<InputBaseFactory>((props, ref) => {\n  const { inputProps, wrapperProps, ...others } = useInputProps(\n    \"InputBase\",\n    defaultProps,\n    props,\n  );\n  return (\n    <Input.Wrapper {...wrapperProps}>\n      <Input {...inputProps} {...others} ref={ref} />\n    </Input.Wrapper>\n  );\n});\n\nInputBase.displayName = \"@raikou/core/InputBase\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  useProps,\n  useStyles,\n  RaikouRadius,\n  RaikouSize,\n  extractStyleProps,\n  getSize,\n  getFontSize,\n  getRadius,\n  rem,\n  createVarsResolver,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"./InputWrapper.context\";\nimport { InputLabel } from \"./InputLabel/InputLabel\";\nimport { InputError } from \"./InputError/InputError\";\nimport { InputDescription } from \"./InputDescription/InputDescription\";\nimport { InputPlaceholder } from \"./InputPlaceholder/InputPlaceholder\";\nimport {\n  InputWrapper,\n  __InputWrapperProps,\n  InputWrapperStylesNames,\n} from \"./InputWrapper/InputWrapper\";\nimport classes from \"./Input.module.css\";\n\nexport interface __BaseInputProps extends __InputWrapperProps, __InputProps {}\nexport type __InputStylesNames = InputStylesNames | InputWrapperStylesNames;\n\nexport type InputStylesNames = \"input\" | \"wrapper\" | \"section\";\nexport type InputVariant = \"default\" | \"filled\" | \"unstyled\";\nexport type InputCssVariables = {\n  wrapper:\n    | \"--input-height\"\n    | \"--input-fz\"\n    | \"--input-radius\"\n    | \"--input-left-section-width\"\n    | \"--input-right-section-width\"\n    | \"--input-left-section-pointer-events\"\n    | \"--input-right-section-pointer-events\"\n    | \"--input-padding-y\"\n    | \"--input-margin-top\"\n    | \"--input-margin-bottom\";\n};\n\nexport interface InputStylesCtx {\n  offsetTop: boolean | undefined;\n  offsetBottom: boolean | undefined;\n}\n\nexport interface __InputProps {\n  /** Content section rendered on the left side of the input */\n  leftSection?: React.ReactNode;\n\n  /** Left section width, used to set `width` of the section and input `padding-left`, by default equals to the input height */\n  leftSectionWidth?: React.CSSProperties[\"width\"];\n\n  /** Props added to the `leftSection` element */\n  leftSectionProps?: React.ComponentPropsWithoutRef<\"div\">;\n\n  /** Sets `pointer-events` styles on the `leftSection` element, `'none'` by default */\n  leftSectionPointerEvents?: React.CSSProperties[\"pointerEvents\"];\n\n  /** Content section rendered on the right side of the input */\n  rightSection?: React.ReactNode;\n\n  /** Right section width, used to set `width` of the section and input `padding-right`, by default equals to the input height */\n  rightSectionWidth?: React.CSSProperties[\"width\"];\n\n  /** Props added to the `rightSection` element */\n  rightSectionProps?: React.ComponentPropsWithoutRef<\"div\">;\n\n  /** Sets `pointer-events` styles on the `rightSection` element, `'none'` by default */\n  rightSectionPointerEvents?: React.CSSProperties[\"pointerEvents\"];\n\n  /** Props added to the root element of the `Input` component */\n  wrapperProps?: Record<string, any>;\n\n  /** Sets `required` attribute on the `input` element */\n  required?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Sets `disabled` attribute on the `input` element */\n  disabled?: boolean;\n\n  /** Controls input `height` and horizontal `padding`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Determines whether the input should have `cursor: pointer` style, `false` by default */\n  pointer?: boolean;\n\n  /** Determines whether the input should have red border and text color when `error` prop is set, `true` by default */\n  withErrorStyles?: boolean;\n}\n\nexport interface InputProps\n  extends BoxProps,\n    __InputProps,\n    StylesApiProps<InputFactory> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces `Input.Wrapper` props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Determines whether the input should have error styles and `aria-invalid` attribute */\n  error?: React.ReactNode;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Input element id */\n  id?: string;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputFactory = PolymorphicFactory<{\n  props: InputProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: \"input\";\n  stylesNames: InputStylesNames;\n  variant: InputVariant;\n  vars: InputCssVariables;\n  ctx: InputStylesCtx;\n  staticComponents: {\n    Label: typeof InputLabel;\n    Error: typeof InputError;\n    Description: typeof InputDescription;\n    Placeholder: typeof InputPlaceholder;\n    Wrapper: typeof InputWrapper;\n  };\n}>;\n\nconst defaultProps: Partial<InputProps> = {\n  variant: \"default\",\n  leftSectionPointerEvents: \"none\",\n  rightSectionPointerEvents: \"none\",\n  withAria: true,\n  withErrorStyles: true,\n};\n\nconst varsResolver = createVarsResolver<InputFactory>((_, props, ctx) => ({\n  wrapper: {\n    \"--input-margin-top\": ctx.offsetTop\n      ? \"calc(var(--raikou-spacing-xs) / 2)\"\n      : undefined,\n    \"--input-margin-bottom\": ctx.offsetBottom\n      ? \"calc(var(--raikou-spacing-xs) / 2)\"\n      : undefined,\n    \"--input-height\": getSize(props.size, \"input-height\"),\n    \"--input-fz\": getFontSize(props.size),\n    \"--input-radius\":\n      props.radius === undefined ? undefined : getRadius(props.radius),\n    \"--input-left-section-width\":\n      props.leftSectionWidth !== undefined\n        ? rem(props.leftSectionWidth)\n        : undefined,\n    \"--input-right-section-width\":\n      props.rightSectionWidth !== undefined\n        ? rem(props.rightSectionWidth)\n        : undefined,\n    \"--input-padding-y\": props.multiline\n      ? getSize(props.size, \"input-padding-y\")\n      : undefined,\n    \"--input-left-section-pointer-events\": props.leftSectionPointerEvents,\n    \"--input-right-section-pointer-events\": props.rightSectionPointerEvents,\n  },\n}));\n\nexport const Input = polymorphicFactory<InputFactory>((_props, ref) => {\n  const props = useProps(\"Input\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    required,\n    __staticSelector,\n    __stylesApiProps,\n    size,\n    wrapperProps,\n    error,\n    disabled,\n    leftSection,\n    leftSectionProps,\n    leftSectionWidth,\n    rightSection,\n    rightSectionProps,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    leftSectionPointerEvents,\n    variant,\n    vars,\n    pointer,\n    multiline,\n    radius,\n    id,\n    withAria,\n    withErrorStyles,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const ctx = useInputWrapperContext();\n  const stylesCtx: InputStylesCtx = {\n    offsetBottom: ctx?.offsetBottom,\n    offsetTop: ctx?.offsetTop,\n  };\n\n  const getStyles = useStyles<InputFactory>({\n    name: [\"Input\", __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    // classes: {\n    //   wrapper: \"input-wrapper\",\n    //   input: \"input-input\",\n    //   section: \"input-section\",\n    // },\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    stylesCtx,\n    rootSelector: \"wrapper\",\n    vars,\n    varsResolver,\n  });\n\n  const ariaAttributes = withAria\n    ? {\n        required,\n        disabled,\n        \"aria-invalid\": !!error,\n        \"aria-describedby\": ctx?.describedBy,\n        id: ctx?.inputId || id,\n      }\n    : {};\n\n  return (\n    <Box\n      {...getStyles(\"wrapper\")}\n      {...styleProps}\n      {...wrapperProps}\n      mod={{\n        error: !!error && withErrorStyles,\n        pointer,\n        disabled,\n        multiline,\n        \"data-with-right-section\": !!rightSection,\n        \"data-with-left-section\": !!leftSection,\n      }}\n      variant={variant}\n      size={size}\n    >\n      {leftSection && (\n        <div\n          {...leftSectionProps}\n          data-position=\"left\"\n          {...getStyles(\"section\", {\n            className: leftSectionProps?.className,\n            style: leftSectionProps?.style,\n          })}\n        >\n          {leftSection}\n        </div>\n      )}\n\n      <Box\n        component=\"input\"\n        {...rest}\n        {...ariaAttributes}\n        ref={ref}\n        required={required}\n        mod={{ disabled, error: !!error && withErrorStyles }}\n        variant={variant}\n        {...getStyles(\"input\")}\n      />\n\n      {rightSection && (\n        <div\n          {...rightSectionProps}\n          data-position=\"right\"\n          {...getStyles(\"section\", {\n            className: rightSectionProps?.className,\n            style: rightSectionProps?.style,\n          })}\n        >\n          {rightSection}\n        </div>\n      )}\n    </Box>\n  );\n});\n\nInput.Wrapper = InputWrapper;\nInput.Label = InputLabel;\nInput.Error = InputError;\nInput.Description = InputDescription;\nInput.Placeholder = InputPlaceholder;\nInput.displayName = \"@raikou/core/Input\";\n","import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nconst useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n","import { GetStylesApi } from \"@raikou/core\";\nimport { createOptionalContext } from \"../../_utils\";\nimport type { InputWrapperFactory } from \"./InputWrapper/InputWrapper\";\n\ninterface InputWrapperContextValue {\n  offsetTop: boolean;\n  offsetBottom: boolean;\n  describedBy: string | undefined;\n  inputId: string | undefined;\n  labelId: string | undefined;\n  getStyles: GetStylesApi<InputWrapperFactory> | null;\n}\n\nexport const [InputWrapperProvider, useInputWrapperContext] =\n  createOptionalContext<InputWrapperContextValue>({\n    offsetBottom: false,\n    offsetTop: false,\n    describedBy: undefined,\n    getStyles: null,\n    inputId: undefined,\n    labelId: undefined,\n  });\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getFontSize,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"../InputWrapper.context\";\nimport classes from \"../Input.module.css\";\n\nexport type InputLabelStylesNames = \"label\" | \"required\";\nexport type InputLabelCssVariables = {\n  label: \"--input-asterisk-color\" | \"--input-label-size\";\n};\n\nexport interface InputLabelProps\n  extends BoxProps,\n    StylesApiProps<InputLabelFactory>,\n    ElementProps<\"label\"> {\n  __staticSelector?: string;\n\n  /** Determines whether required asterisk should be displayed  */\n  required?: boolean;\n\n  /** Controls label `font-size`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Root element of the label, `'label'` by default */\n  labelElement?: \"label\" | \"div\";\n}\n\nexport type InputLabelFactory = Factory<{\n  props: InputLabelProps;\n  ref: HTMLLabelElement;\n  stylesNames: InputLabelStylesNames;\n  vars: InputLabelCssVariables;\n}>;\n\nconst defaultProps: Partial<InputLabelProps> = {\n  labelElement: \"label\",\n};\n\nconst varsResolver = createVarsResolver<InputLabelFactory>((_, { size }) => ({\n  label: {\n    \"--input-label-size\": getFontSize(size),\n    \"--input-asterisk-color\": undefined,\n  },\n}));\n\nexport const InputLabel = factory<InputLabelFactory>((_props, ref) => {\n  const props = useProps(\"InputLabel\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    labelElement,\n    size,\n    required,\n    htmlFor,\n    onMouseDown,\n    children,\n    __staticSelector,\n    variant,\n    ...others\n  } = useProps(\"InputLabel\", defaultProps, props);\n\n  const _getStyles = useStyles<InputLabelFactory>({\n    name: [\"InputWrapper\", __staticSelector],\n    props,\n    classes,\n    // classes: {\n    //   label: \"inputWrapper-label\",\n    //   required: \"inputWrapper-required\",\n    // },\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"label\",\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = ctx?.getStyles || _getStyles;\n\n  return (\n    <Box\n      {...getStyles(\"label\")}\n      component={labelElement as \"label\"}\n      variant={variant}\n      size={size}\n      ref={ref}\n      htmlFor={labelElement === \"label\" ? htmlFor : undefined}\n      mod={{ required }}\n      onMouseDown={(event) => {\n        onMouseDown?.(event as any);\n        if (!event.defaultPrevented && event.detail > 1) {\n          event.preventDefault();\n        }\n      }}\n      {...others}\n    >\n      {children}\n      {required && (\n        <span {...getStyles(\"required\")} aria-hidden>\n          {\" *\"}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nInputLabel.displayName = \"@raikou/core/InputLabel\";\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Input/src/Input.module.css\"; export default {\"wrapper\":\"m-6c018570\",\"input\":\"m-8fb7ebe7\",\"section\":\"m-82577fc2\",\"placeholder\":\"m-88bacfd0\",\"root\":\"m-46b77525\",\"label\":\"m-8fdc1311\",\"required\":\"m-78a94662\",\"error\":\"m-8f816625\",\"description\":\"m-fe47ce59\"}","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getFontSize,\n  rem,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"../InputWrapper.context\";\nimport classes from \"../Input.module.css\";\n\nexport type InputErrorStylesNames = \"error\";\nexport type InputErrorCssVariables = {\n  error: \"--input-error-size\";\n};\n\nexport interface InputErrorProps\n  extends BoxProps,\n    StylesApiProps<InputErrorFactory>,\n    ElementProps<\"div\"> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls error `font-size`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n}\n\nexport type InputErrorFactory = Factory<{\n  props: InputErrorProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputErrorStylesNames;\n  vars: InputErrorCssVariables;\n}>;\n\nconst defaultProps: Partial<InputErrorProps> = {};\n\nconst varsResolver = createVarsResolver<InputErrorFactory>((_, { size }) => ({\n  error: {\n    \"--input-error-size\":\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputError = factory<InputErrorFactory>((_props, ref) => {\n  const props = useProps(\"InputError\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    __staticSelector,\n    __inheritStyles = true,\n    variant,\n    ...others\n  } = props;\n\n  const _getStyles = useStyles<InputErrorFactory>({\n    name: [\"InputWrapper\", __staticSelector],\n    props,\n    classes,\n    // classes: {\n    //   error: \"inputWrapper-error\",\n    // },\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"error\",\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n  return (\n    <Box\n      component=\"p\"\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles(\"error\")}\n      {...others}\n    />\n  );\n});\n\nInputError.displayName = \"@raikou/core/InputError\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getFontSize,\n  rem,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"../InputWrapper.context\";\nimport classes from \"../Input.module.css\";\n\nexport type InputDescriptionStylesNames = \"description\";\nexport type InputDescriptionCssVariables = {\n  description: \"--input-description-size\";\n};\n\nexport interface InputDescriptionProps\n  extends BoxProps,\n    StylesApiProps<InputDescriptionFactory>,\n    ElementProps<\"div\"> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls description `font-size`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n}\n\nexport type InputDescriptionFactory = Factory<{\n  props: InputDescriptionProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputDescriptionStylesNames;\n  vars: InputDescriptionCssVariables;\n}>;\n\nconst defaultProps: Partial<InputDescriptionProps> = {};\n\nconst varsResolver = createVarsResolver<InputDescriptionFactory>(\n  (_, { size }) => ({\n    description: {\n      \"--input-description-size\":\n        size === undefined\n          ? undefined\n          : `calc(${getFontSize(size)} - ${rem(2)})`,\n    },\n  }),\n);\n\nexport const InputDescription = factory<InputDescriptionFactory>(\n  (_props, ref) => {\n    const props = useProps(\"InputDescription\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      size,\n      __staticSelector,\n      __inheritStyles = true,\n      variant,\n      ...others\n    } = useProps(\"InputDescription\", defaultProps, props);\n    const ctx = useInputWrapperContext();\n\n    const _getStyles = useStyles<InputDescriptionFactory>({\n      name: [\"InputWrapper\", __staticSelector],\n      props,\n      classes,\n      // classes: {\n      //   description: \"inputWrapper-description\",\n      // },\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      rootSelector: \"description\",\n      vars,\n      varsResolver,\n    });\n\n    const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n    return (\n      <Box\n        component=\"p\"\n        ref={ref}\n        variant={variant}\n        size={size}\n        {...getStyles(\"description\")}\n        {...others}\n      />\n    );\n  },\n);\n\nInputDescription.displayName = \"@raikou/core/InputDescription\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  Factory,\n} from \"@raikou/core\";\nimport classes from \"../Input.module.css\";\n\nexport type InputPlaceholderStylesNames = \"placeholder\";\nexport type InputPlaceholderVariant = string;\n\nexport interface InputPlaceholderProps\n  extends BoxProps,\n    StylesApiProps<InputPlaceholderFactory>,\n    ElementProps<\"span\"> {\n  __staticSelector?: string;\n}\n\nexport type InputPlaceholderFactory = Factory<{\n  props: InputPlaceholderProps;\n  ref: HTMLSpanElement;\n  stylesNames: InputPlaceholderStylesNames;\n  variant: InputPlaceholderVariant;\n}>;\n\nconst defaultProps: Partial<InputPlaceholderProps> = {};\n\nexport const InputPlaceholder = factory<InputPlaceholderFactory>(\n  (_props, ref) => {\n    const props = useProps(\"InputPlaceholder\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      __staticSelector,\n      variant,\n      ...others\n    } = useProps(\"InputPlaceholder\", defaultProps, props);\n\n    const getStyles = useStyles<InputPlaceholderFactory>({\n      name: [\"InputPlaceholder\", __staticSelector],\n      props,\n      classes,\n      // classes: {\n      //   placeholder: \"input-placeholder\",\n      // },\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      rootSelector: \"placeholder\",\n    });\n\n    return (\n      <Box\n        {...getStyles(\"placeholder\")}\n        component=\"span\"\n        variant={variant}\n        ref={ref}\n        {...others}\n      />\n    );\n  },\n);\n\nInputPlaceholder.displayName = \"@raikou/core/InputPlaceholder\";\n","import React from \"react\";\nimport { useId } from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  Factory,\n  createVarsResolver,\n  getFontSize,\n  rem,\n} from \"@raikou/core\";\nimport {\n  InputLabel,\n  InputLabelStylesNames,\n  InputLabelCssVariables,\n} from \"../InputLabel/InputLabel\";\nimport {\n  InputDescription,\n  InputDescriptionStylesNames,\n  InputDescriptionCssVariables,\n} from \"../InputDescription/InputDescription\";\nimport {\n  InputError,\n  InputErrorStylesNames,\n  InputErrorCssVariables,\n} from \"../InputError/InputError\";\nimport { InputWrapperProvider } from \"../InputWrapper.context\";\nimport { getInputOffsets } from \"./get-input-offsets/get-input-offsets\";\nimport classes from \"../Input.module.css\";\n\nexport type InputWrapperCssVariables = InputLabelCssVariables &\n  InputErrorCssVariables &\n  InputDescriptionCssVariables;\n\nexport type InputWrapperStylesNames =\n  | \"root\"\n  | InputLabelStylesNames\n  | InputDescriptionStylesNames\n  | InputErrorStylesNames;\n\nexport interface __InputWrapperProps {\n  /** Contents of `Input.Label` component, if not set, label is not rendered. */\n  label?: React.ReactNode;\n\n  /** Contents of `Input.Description` component, if not set, description is not rendered. */\n  description?: React.ReactNode;\n\n  /** Contents of `Input.Error` component, if not set, error is not rendered. */\n  error?: React.ReactNode;\n\n  /** Adds required attribute to the input and a red asterisk on the right side of label, `false` by default */\n  required?: boolean;\n\n  /** Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input, `false` by default */\n  withAsterisk?: boolean;\n\n  /** Props passed down to the `Input.Label` component */\n  labelProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Description` component */\n  descriptionProps?: Record<string, any>;\n\n  /** Props passed down to the `InputError` component */\n  errorProps?: Record<string, any>;\n\n  /** Input container component, defaults to `React.Fragment` */\n  inputContainer?: (children: React.ReactNode) => React.ReactNode;\n\n  /** Controls order of the elements, `['label', 'description', 'input', 'error']` by default */\n  inputWrapperOrder?: (\"label\" | \"input\" | \"description\" | \"error\")[];\n}\n\nexport interface InputWrapperProps\n  extends __InputWrapperProps,\n    BoxProps,\n    StylesApiProps<InputWrapperFactory>,\n    ElementProps<\"div\"> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces Input.Wrapper props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Static id used as base to generate `aria-` attributes, by default generates random id */\n  id?: string;\n\n  /** Controls size of `Input.Label`, `Input.Description` and `Input.Error` components */\n  size?: RaikouSize | (string & {});\n\n  /** `Input.Label` root element, `'label'` by default */\n  labelElement?: \"label\" | \"div\";\n}\n\nexport type InputWrapperFactory = Factory<{\n  props: InputWrapperProps;\n  ref: HTMLDivElement;\n  stylesNames: InputWrapperStylesNames;\n  vars: InputWrapperCssVariables;\n}>;\n\nconst defaultProps: Partial<InputWrapperProps> = {\n  labelElement: \"label\",\n  inputContainer: (children) => children,\n  inputWrapperOrder: [\"label\", \"description\", \"input\", \"error\"],\n};\n\nconst varsResolver = createVarsResolver<InputWrapperFactory>((_, { size }) => ({\n  label: {\n    \"--input-label-size\": getFontSize(size),\n    \"--input-asterisk-color\": undefined,\n  },\n\n  error: {\n    \"--input-error-size\":\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n\n  description: {\n    \"--input-description-size\":\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputWrapper = factory<InputWrapperFactory>((_props, ref) => {\n  const props = useProps(\"InputWrapper\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<InputWrapperFactory>({\n    name: [\"InputWrapper\", __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    // classes: {\n    //   root: \"inputWrapper-root\",\n    //   label: \"inputWrapper-label\",\n    //   required: \"inputWrapper-required\",\n    //   error: \"inputWrapper-error\",\n    //   description: \"inputWrapper-description\",\n    // },\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector,\n  };\n\n  const idBase = useId(id);\n  const isRequired =\n    typeof withAsterisk === \"boolean\" ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== \"boolean\";\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : \"\"} ${\n    hasDescription ? descriptionId : \"\"\n  }`;\n  const describedBy =\n    _describedBy.trim().length > 0 ? _describedBy.trim() : undefined;\n  const labelId = labelProps?.id || `${idBase}-label`;\n\n  const _label = label && (\n    <InputLabel\n      key=\"label\"\n      labelElement={labelElement}\n      id={labelId}\n      htmlFor={inputId}\n      required={isRequired}\n      {...sharedProps}\n      {...labelProps}\n    >\n      {label}\n    </InputLabel>\n  );\n\n  const _description = hasDescription && (\n    <InputDescription\n      key=\"description\"\n      {...descriptionProps}\n      {...sharedProps}\n      size={descriptionProps?.size || sharedProps.size}\n      id={descriptionProps?.id || descriptionId}\n    >\n      {description}\n    </InputDescription>\n  );\n\n  const _input = (\n    <React.Fragment key=\"input\">\n      {inputContainer!(children as any)}\n    </React.Fragment>\n  );\n\n  const _error = hasError && (\n    <InputError\n      {...errorProps}\n      {...sharedProps}\n      size={errorProps?.size || sharedProps.size}\n      key=\"error\"\n      id={errorProps?.id || errorId}\n    >\n      {error}\n    </InputError>\n  );\n\n  const content = inputWrapperOrder!.map((part) => {\n    switch (part) {\n      case \"label\":\n        return _label;\n      case \"input\":\n        return _input;\n      case \"description\":\n        return _description;\n      case \"error\":\n        return _error;\n      default:\n        return null;\n    }\n  });\n\n  return (\n    <InputWrapperProvider\n      value={{\n        getStyles,\n        describedBy,\n        inputId,\n        labelId,\n        ...getInputOffsets(inputWrapperOrder!, { hasDescription, hasError }),\n      }}\n    >\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        {...getStyles(\"root\")}\n        {...others}\n      >\n        {content}\n      </Box>\n    </InputWrapperProvider>\n  );\n});\n\nInputWrapper.displayName = \"@raikou/core/InputWrapper\";\n","// src/utils/clamp/clamp.ts\nfunction clamp(value, min, max) {\n  if (min === void 0 && max === void 0) {\n    return value;\n  }\n  if (min !== void 0 && max === void 0) {\n    return Math.max(value, min);\n  }\n  if (min === void 0 && max !== void 0) {\n    return Math.min(value, max);\n  }\n  return Math.min(Math.max(value, min), max);\n}\n\n// src/utils/lower-first/lower-first.ts\nfunction lowerFirst(value) {\n  return typeof value !== \"string\" ? \"\" : value.charAt(0).toLowerCase() + value.slice(1);\n}\n\n// src/utils/random-id/random-id.ts\nfunction randomId() {\n  return `raikou-${Math.random().toString(36).slice(2, 11)}`;\n}\n\n// src/utils/range/range.ts\nfunction range(start, end) {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, index) => index + start);\n}\n\n// src/utils/shallow-equal/shallow-equal.ts\nfunction shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  const keys = Object.keys(a);\n  const { length } = keys;\n  if (length !== Object.keys(b).length) {\n    return false;\n  }\n  for (let i = 0; i < length; i += 1) {\n    const key = keys[i];\n    if (!(key in b)) {\n      return false;\n    }\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// src/utils/upper-first/upper-first.ts\nfunction upperFirst(value) {\n  return typeof value !== \"string\" ? \"\" : value.charAt(0).toUpperCase() + value.slice(1);\n}\n\n// src/use-callback-ref/use-callback-ref.ts\nimport { useRef, useEffect, useMemo } from \"react\";\nfunction useCallbackRef(callback) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useMemo(() => (...args) => {\n    var _a;\n    return (_a = callbackRef.current) == null ? void 0 : _a.call(callbackRef, ...args);\n  }, []);\n}\n\n// src/use-debounced-callback/use-debounced-callback.ts\nimport { useRef as useRef2, useEffect as useEffect2, useCallback } from \"react\";\nfunction useDebounceCallback(callback, delay) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = useRef2(0);\n  useEffect2(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\n\n// src/use-click-outside/use-click-outside.ts\nimport { useEffect as useEffect3, useRef as useRef3 } from \"react\";\nvar DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\nfunction useClickOutside(handler, events, nodes) {\n  const ref = useRef3();\n  useEffect3(() => {\n    const listener = (event) => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = (target == null ? void 0 : target.hasAttribute(\"data-ignore-outside-clicks\")) || !document.body.contains(target) && target.tagName !== \"HTML\";\n        const shouldTrigger = nodes.every((node) => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(target)) {\n        handler();\n      }\n    };\n    (events || DEFAULT_EVENTS).forEach((fn) => document.addEventListener(fn, listener));\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n  return ref;\n}\n\n// src/use-clipboard/use-clipboard.ts\nimport { useState } from \"react\";\nfunction useClipboard({ timeout = 2e3 } = {}) {\n  const [error, setError] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const [copyTimeout, setCopyTimeout] = useState(null);\n  const handleCopyResult = (value) => {\n    window.clearTimeout(copyTimeout);\n    setCopyTimeout(window.setTimeout(() => setCopied(false), timeout));\n    setCopied(value);\n  };\n  const copy = (valueToCopy) => {\n    if (\"clipboard\" in navigator) {\n      navigator.clipboard.writeText(valueToCopy).then(() => handleCopyResult(true)).catch((err) => setError(err));\n    } else {\n      setError(new Error(\"useClipboard: navigator.clipboard is not supported\"));\n    }\n  };\n  const reset = () => {\n    setCopied(false);\n    setError(null);\n    window.clearTimeout(copyTimeout);\n  };\n  return { copy, reset, error, copied };\n}\n\n// src/use-media-query/use-media-query.ts\nimport { useState as useState2, useEffect as useEffect4, useRef as useRef4 } from \"react\";\nfunction attachMediaListener(query, callback) {\n  try {\n    query.addEventListener(\"change\", callback);\n    return () => query.removeEventListener(\"change\", callback);\n  } catch (e) {\n    query.addListener(callback);\n    return () => query.removeListener(callback);\n  }\n}\nfunction getInitialValue(query, initialValue) {\n  if (typeof initialValue === \"boolean\") {\n    return initialValue;\n  }\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    return window.matchMedia(query).matches;\n  }\n  return false;\n}\nfunction useMediaQuery(query, initialValue, { getInitialValueInEffect } = {\n  getInitialValueInEffect: true\n}) {\n  const [matches, setMatches] = useState2(\n    getInitialValueInEffect ? initialValue : getInitialValue(query, initialValue)\n  );\n  const queryRef = useRef4();\n  useEffect4(() => {\n    if (\"matchMedia\" in window) {\n      queryRef.current = window.matchMedia(query);\n      setMatches(queryRef.current.matches);\n      return attachMediaListener(queryRef.current, (event) => setMatches(event.matches));\n    }\n    return void 0;\n  }, [query]);\n  return matches;\n}\n\n// src/use-color-scheme/use-color-scheme.ts\nfunction useColorScheme(initialValue, options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", initialValue === \"dark\", options) ? \"dark\" : \"light\";\n}\n\n// src/use-counter/use-counter.ts\nimport { useState as useState3 } from \"react\";\nvar DEFAULT_OPTIONS = {\n  min: -Infinity,\n  max: Infinity\n};\nfunction useCounter(initialValue = 0, options) {\n  const { min, max } = { ...DEFAULT_OPTIONS, ...options };\n  const [count, setCount] = useState3(clamp(initialValue, min, max));\n  const increment = () => setCount((current) => clamp(current + 1, min, max));\n  const decrement = () => setCount((current) => clamp(current - 1, min, max));\n  const set = (value) => setCount(clamp(value, min, max));\n  const reset = () => setCount(clamp(initialValue, min, max));\n  return [count, { increment, decrement, set, reset }];\n}\n\n// src/use-debounced-state/use-debounced-state.ts\nimport { useEffect as useEffect5, useRef as useRef5, useState as useState4, useCallback as useCallback2 } from \"react\";\nfunction useDebouncedState(defaultValue, wait, options = { leading: false }) {\n  const [value, setValue] = useState4(defaultValue);\n  const timeoutRef = useRef5(null);\n  const leadingRef = useRef5(true);\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  useEffect5(() => clearTimeout, []);\n  const debouncedSetValue = useCallback2(\n    (newValue) => {\n      clearTimeout();\n      if (leadingRef.current && options.leading) {\n        setValue(newValue);\n      } else {\n        timeoutRef.current = window.setTimeout(() => {\n          leadingRef.current = true;\n          setValue(newValue);\n        }, wait);\n      }\n      leadingRef.current = false;\n    },\n    [options.leading]\n  );\n  return [value, debouncedSetValue];\n}\n\n// src/use-debounced-value/use-debounced-value.ts\nimport { useEffect as useEffect6, useState as useState5, useRef as useRef6 } from \"react\";\nfunction useDebouncedValue(value, wait, options = { leading: false }) {\n  const [_value, setValue] = useState5(value);\n  const mountedRef = useRef6(false);\n  const timeoutRef = useRef6(null);\n  const cooldownRef = useRef6(false);\n  const cancel = () => window.clearTimeout(timeoutRef.current);\n  useEffect6(() => {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = window.setTimeout(() => {\n          cooldownRef.current = false;\n          setValue(value);\n        }, wait);\n      }\n    }\n  }, [value, options.leading, wait]);\n  useEffect6(() => {\n    mountedRef.current = true;\n    return cancel;\n  }, []);\n  return [_value, cancel];\n}\n\n// src/use-isomorphic-effect/use-isomorphic-effect.ts\nimport { useEffect as useEffect7, useLayoutEffect } from \"react\";\nvar useIsomorphicEffect = typeof document !== \"undefined\" ? useLayoutEffect : useEffect7;\n\n// src/use-document-title/use-document-title.ts\nfunction useDocumentTitle(title) {\n  useIsomorphicEffect(() => {\n    if (typeof title === \"string\" && title.trim().length > 0) {\n      document.title = title.trim();\n    }\n  }, [title]);\n}\n\n// src/use-document-visibility/use-document-visibility.ts\nimport { useEffect as useEffect8, useState as useState6 } from \"react\";\nfunction useDocumentVisibility() {\n  const [documentVisibility, setDocumentVisibility] = useState6(\"visible\");\n  useEffect8(() => {\n    const listener = () => setDocumentVisibility(document.visibilityState);\n    document.addEventListener(\"visibilitychange\", listener);\n    return () => document.removeEventListener(\"visibilitychange\", listener);\n  }, []);\n  return documentVisibility;\n}\n\n// src/use-focus-return/use-focus-return.ts\nimport { useRef as useRef8 } from \"react\";\n\n// src/use-did-update/use-did-update.ts\nimport { useEffect as useEffect9, useRef as useRef7 } from \"react\";\nfunction useDidUpdate(fn, dependencies) {\n  const mounted = useRef7(false);\n  useEffect9(\n    () => () => {\n      mounted.current = false;\n    },\n    []\n  );\n  useEffect9(() => {\n    if (mounted.current) {\n      return fn();\n    }\n    mounted.current = true;\n    return void 0;\n  }, dependencies);\n}\n\n// src/use-focus-return/use-focus-return.ts\nfunction useFocusReturn({ opened, shouldReturnFocus = true }) {\n  const lastActiveElement = useRef8();\n  const returnFocus = () => {\n    var _a;\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      (_a = lastActiveElement.current) == null ? void 0 : _a.focus({ preventScroll: true });\n    }\n  };\n  useDidUpdate(() => {\n    let timeout = -1;\n    const clearFocusTimeout = (event) => {\n      if (event.key === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n  return returnFocus;\n}\n\n// src/use-focus-trap/use-focus-trap.ts\nimport { useCallback as useCallback3, useEffect as useEffect10, useRef as useRef9 } from \"react\";\n\n// src/use-focus-trap/tabbable.ts\nvar TABBABLE_NODES = /input|select|textarea|button|object/;\nvar FOCUS_SELECTOR = \"a, input, select, textarea, button, object, [tabindex]\";\nfunction hidden(element) {\n  if (process.env.NODE_ENV === \"test\") {\n    return false;\n  }\n  return element.style.display === \"none\";\n}\nfunction visible(element) {\n  const isHidden = element.getAttribute(\"aria-hidden\") || element.getAttribute(\"hidden\") || element.getAttribute(\"type\") === \"hidden\";\n  if (isHidden) {\n    return false;\n  }\n  let parentElement = element;\n  while (parentElement) {\n    if (parentElement === document.body || parentElement.nodeType === 11) {\n      break;\n    }\n    if (hidden(parentElement)) {\n      return false;\n    }\n    parentElement = parentElement.parentNode;\n  }\n  return true;\n}\nfunction getElementTabIndex(element) {\n  let tabIndex = element.getAttribute(\"tabindex\");\n  if (tabIndex === null) {\n    tabIndex = void 0;\n  }\n  return parseInt(tabIndex, 10);\n}\nfunction focusable(element) {\n  const nodeName = element.nodeName.toLowerCase();\n  const isTabIndexNotNaN = !Number.isNaN(getElementTabIndex(element));\n  const res = (\n    // @ts-ignore\n    TABBABLE_NODES.test(nodeName) && !element.disabled || (element instanceof HTMLAnchorElement ? element.href || isTabIndexNotNaN : isTabIndexNotNaN)\n  );\n  return res && visible(element);\n}\nfunction tabbable(element) {\n  const tabIndex = getElementTabIndex(element);\n  const isTabIndexNaN = Number.isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && focusable(element);\n}\nfunction findTabbableDescendants(element) {\n  return Array.from(element.querySelectorAll(FOCUS_SELECTOR)).filter(tabbable);\n}\n\n// src/use-focus-trap/scope-tab.ts\nfunction scopeTab(node, event) {\n  const tabbable2 = findTabbableDescendants(node);\n  if (!tabbable2.length) {\n    event.preventDefault();\n    return;\n  }\n  const finalTabbable = tabbable2[event.shiftKey ? 0 : tabbable2.length - 1];\n  const root = node.getRootNode();\n  let leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n  const activeElement = root.activeElement;\n  const activeElementIsRadio = activeElement.tagName === \"INPUT\" && activeElement.getAttribute(\"type\") === \"radio\";\n  if (activeElementIsRadio) {\n    const activeRadioGroup = tabbable2.filter(\n      (element) => element.getAttribute(\"type\") === \"radio\" && element.getAttribute(\"name\") === activeElement.getAttribute(\"name\")\n    );\n    leavingFinalTabbable = activeRadioGroup.includes(finalTabbable);\n  }\n  if (!leavingFinalTabbable) {\n    return;\n  }\n  event.preventDefault();\n  const target = tabbable2[event.shiftKey ? tabbable2.length - 1 : 0];\n  if (target) {\n    target.focus();\n  }\n}\n\n// src/use-focus-trap/create-aria-hider.ts\nfunction createAriaHider(containerNode, selector = \"body > :not(script)\") {\n  const id = randomId();\n  const rootNodes = Array.from(\n    document.querySelectorAll(selector)\n  ).map((node) => {\n    var _a;\n    if (((_a = node == null ? void 0 : node.shadowRoot) == null ? void 0 : _a.contains(containerNode)) || node.contains(containerNode)) {\n      return void 0;\n    }\n    const ariaHidden = node.getAttribute(\"aria-hidden\");\n    const prevAriaHidden = node.getAttribute(\"data-hidden\");\n    const prevFocusId = node.getAttribute(\"data-focus-id\");\n    node.setAttribute(\"data-focus-id\", id);\n    if (ariaHidden === null || ariaHidden === \"false\") {\n      node.setAttribute(\"aria-hidden\", \"true\");\n    } else if (!prevAriaHidden && !prevFocusId) {\n      node.setAttribute(\"data-hidden\", ariaHidden);\n    }\n    return {\n      node,\n      ariaHidden: prevAriaHidden || null\n    };\n  });\n  return () => {\n    rootNodes.forEach((item) => {\n      if (!item || id !== item.node.getAttribute(\"data-focus-id\")) {\n        return;\n      }\n      if (item.ariaHidden === null) {\n        item.node.removeAttribute(\"aria-hidden\");\n      } else {\n        item.node.setAttribute(\"aria-hidden\", item.ariaHidden);\n      }\n      item.node.removeAttribute(\"data-focus-id\");\n      item.node.removeAttribute(\"data-hidden\");\n    });\n  };\n}\n\n// src/use-focus-trap/use-focus-trap.ts\nfunction useFocusTrap(active = true) {\n  const ref = useRef9();\n  const restoreAria = useRef9(null);\n  const focusNode = (node) => {\n    let focusElement = node.querySelector(\"[data-autofocus]\");\n    if (!focusElement) {\n      const children = Array.from(\n        node.querySelectorAll(FOCUS_SELECTOR)\n      );\n      focusElement = children.find(tabbable) || children.find(focusable) || null;\n      if (!focusElement && focusable(node))\n        focusElement = node;\n    }\n    if (focusElement) {\n      focusElement.focus({ preventScroll: true });\n    } else if (process.env.NODE_ENV === \"development\") {\n      console.warn(\n        \"[@raikou/hooks/use-focus-trap] Failed to find focusable element within provided node\",\n        node\n      );\n    }\n  };\n  const setRef = useCallback3(\n    (node) => {\n      if (!active) {\n        return;\n      }\n      if (node === null) {\n        if (restoreAria.current) {\n          restoreAria.current();\n          restoreAria.current = null;\n        }\n        return;\n      }\n      restoreAria.current = createAriaHider(node);\n      if (ref.current === node) {\n        return;\n      }\n      if (node) {\n        setTimeout(() => {\n          if (node.getRootNode()) {\n            focusNode(node);\n          } else if (process.env.NODE_ENV === \"development\") {\n            console.warn(\n              \"[@raikou/hooks/use-focus-trap] Ref node is not part of the dom\",\n              node\n            );\n          }\n        });\n        ref.current = node;\n      } else {\n        ref.current = null;\n      }\n    },\n    [active]\n  );\n  useEffect10(() => {\n    if (!active) {\n      return void 0;\n    }\n    ref.current && setTimeout(() => focusNode(ref.current));\n    const handleKeyDown = (event) => {\n      if (event.key === \"Tab\" && ref.current) {\n        scopeTab(ref.current, event);\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      if (restoreAria.current) {\n        restoreAria.current();\n      }\n    };\n  }, [active]);\n  return setRef;\n}\n\n// src/use-force-update/use-force-update.ts\nimport { useReducer } from \"react\";\nvar reducer = (value) => (value + 1) % 1e6;\nfunction useForceUpdate() {\n  const [, update] = useReducer(reducer, 0);\n  return update;\n}\n\n// src/use-id/use-id.ts\nimport { useState as useState7 } from \"react\";\n\n// src/use-id/use-react-id.ts\nimport React from \"react\";\nvar __useId = React[\"useId\".toString()] || (() => void 0);\nfunction useReactId() {\n  const id = __useId();\n  return id ? `raikou-${id.replace(/:/g, \"\")}` : \"\";\n}\n\n// src/use-id/use-id.ts\nfunction useId(staticId) {\n  const reactId = useReactId();\n  const [uuid, setUuid] = useState7(reactId);\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n  if (typeof staticId === \"string\") {\n    return staticId;\n  }\n  if (typeof window === \"undefined\") {\n    return reactId;\n  }\n  return uuid;\n}\n\n// src/use-idle/use-idle.ts\nimport { useState as useState8, useEffect as useEffect11, useRef as useRef10 } from \"react\";\nvar DEFAULT_EVENTS2 = [\n  \"keypress\",\n  \"mousemove\",\n  \"touchmove\",\n  \"click\",\n  \"scroll\"\n];\nvar DEFAULT_OPTIONS2 = {\n  events: DEFAULT_EVENTS2,\n  initialState: true\n};\nfunction useIdle(timeout, options) {\n  const { events, initialState } = { ...DEFAULT_OPTIONS2, ...options };\n  const [idle, setIdle] = useState8(initialState);\n  const timer = useRef10();\n  useEffect11(() => {\n    const handleEvents = () => {\n      setIdle(false);\n      if (timer.current) {\n        window.clearTimeout(timer.current);\n      }\n      timer.current = window.setTimeout(() => {\n        setIdle(true);\n      }, timeout);\n    };\n    events.forEach((event) => document.addEventListener(event, handleEvents));\n    return () => {\n      events.forEach((event) => document.removeEventListener(event, handleEvents));\n    };\n  }, [timeout]);\n  return idle;\n}\n\n// src/use-interval/use-interval.ts\nimport { useEffect as useEffect12, useRef as useRef11, useState as useState9 } from \"react\";\nfunction useInterval(fn, interval) {\n  const [active, setActive] = useState9(false);\n  const intervalRef = useRef11();\n  const fnRef = useRef11();\n  useEffect12(() => {\n    fnRef.current = fn;\n  }, [fn]);\n  const start = () => {\n    setActive((old) => {\n      if (!old && !intervalRef.current) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  };\n  const stop = () => {\n    setActive(false);\n    window.clearInterval(intervalRef.current);\n    intervalRef.current = void 0;\n  };\n  const toggle = () => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n  return { start, stop, toggle, active };\n}\n\n// src/use-list-state/use-list-state.ts\nimport { useState as useState10 } from \"react\";\nfunction useListState(initialValue = []) {\n  const [state, setState] = useState10(initialValue);\n  const append = (...items) => setState((current) => [...current, ...items]);\n  const prepend = (...items) => setState((current) => [...items, ...current]);\n  const insert = (index, ...items) => setState((current) => [...current.slice(0, index), ...items, ...current.slice(index)]);\n  const apply = (fn) => setState((current) => current.map((item, index) => fn(item, index)));\n  const remove = (...indices) => setState((current) => current.filter((_, index) => !indices.includes(index)));\n  const pop = () => setState((current) => {\n    const cloned = [...current];\n    cloned.pop();\n    return cloned;\n  });\n  const shift = () => setState((current) => {\n    const cloned = [...current];\n    cloned.shift();\n    return cloned;\n  });\n  const reorder = ({ from, to }) => setState((current) => {\n    const cloned = [...current];\n    const item = current[from];\n    cloned.splice(from, 1);\n    cloned.splice(to, 0, item);\n    return cloned;\n  });\n  const setItem = (index, item) => setState((current) => {\n    const cloned = [...current];\n    cloned[index] = item;\n    return cloned;\n  });\n  const setItemProp = (index, prop, value) => setState((current) => {\n    const cloned = [...current];\n    cloned[index] = { ...cloned[index], [prop]: value };\n    return cloned;\n  });\n  const applyWhere = (condition, fn) => setState(\n    (current) => current.map((item, index) => condition(item, index) ? fn(item, index) : item)\n  );\n  const filter = (fn) => {\n    setState((current) => current.filter(fn));\n  };\n  return [\n    state,\n    {\n      setState,\n      append,\n      prepend,\n      insert,\n      pop,\n      shift,\n      apply,\n      applyWhere,\n      remove,\n      reorder,\n      setItem,\n      setItemProp,\n      filter\n    }\n  ];\n}\n\n// src/use-local-storage/create-storage.ts\nimport { useState as useState11, useCallback as useCallback4, useEffect as useEffect14 } from \"react\";\n\n// src/use-window-event/use-window-event.ts\nimport { useEffect as useEffect13 } from \"react\";\nfunction useWindowEvent(type, listener, options) {\n  useEffect13(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, [type, listener]);\n}\n\n// src/use-local-storage/create-storage.ts\nfunction serializeJSON(value, hookName) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(\n      `@mantine/hooks ${hookName}: Failed to serialize the value`\n    );\n  }\n}\nfunction deserializeJSON(value) {\n  try {\n    return value && JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\nfunction createStorageHandler(type) {\n  const getItem = (key) => {\n    try {\n      return window[type].getItem(key);\n    } catch (error) {\n      console.warn(\n        \"use-local-storage: Failed to get value from storage, localStorage is blocked\"\n      );\n      return null;\n    }\n  };\n  const setItem = (key, value) => {\n    try {\n      window[type].setItem(key, value);\n    } catch (error) {\n      console.warn(\n        \"use-local-storage: Failed to set value to storage, localStorage is blocked\"\n      );\n    }\n  };\n  const removeItem = (key) => {\n    try {\n      window[type].removeItem(key);\n    } catch (error) {\n      console.warn(\n        \"use-local-storage: Failed to remove value from storage, localStorage is blocked\"\n      );\n    }\n  };\n  return { getItem, setItem, removeItem };\n}\nfunction createStorage(type, hookName) {\n  const eventName = type === \"localStorage\" ? \"mantine-local-storage\" : \"mantine-session-storage\";\n  const { getItem, setItem, removeItem } = createStorageHandler(type);\n  return function useStorage({\n    key,\n    defaultValue,\n    getInitialValueInEffect = true,\n    deserialize = deserializeJSON,\n    serialize = (value) => serializeJSON(value, hookName)\n  }) {\n    const readStorageValue = useCallback4(\n      (skipStorage) => {\n        if (typeof window === \"undefined\" || !(type in window) || window[type] === null || skipStorage) {\n          return defaultValue;\n        }\n        const storageValue = getItem(key);\n        return storageValue !== null ? deserialize(storageValue) : defaultValue;\n      },\n      [key, defaultValue]\n    );\n    const [value, setValue] = useState11(\n      readStorageValue(getInitialValueInEffect)\n    );\n    const setStorageValue = useCallback4(\n      (val) => {\n        if (val instanceof Function) {\n          setValue((current) => {\n            const result = val(current);\n            setItem(key, serialize(result));\n            window.dispatchEvent(\n              new CustomEvent(eventName, {\n                detail: { key, value: val(current) }\n              })\n            );\n            return result;\n          });\n        } else {\n          setItem(key, serialize(val));\n          window.dispatchEvent(\n            new CustomEvent(eventName, { detail: { key, value: val } })\n          );\n          setValue(val);\n        }\n      },\n      [key]\n    );\n    const removeStorageValue = useCallback4(() => {\n      removeItem(key);\n      window.dispatchEvent(\n        new CustomEvent(eventName, { detail: { key, value: defaultValue } })\n      );\n    }, []);\n    useWindowEvent(\"storage\", (event) => {\n      if (event.storageArea === window[type] && event.key === key) {\n        setValue(deserialize(event.newValue ?? void 0));\n      }\n    });\n    useWindowEvent(eventName, (event) => {\n      if (event.detail.key === key) {\n        setValue(event.detail.value);\n      }\n    });\n    useEffect14(() => {\n      if (defaultValue !== void 0 && value === void 0) {\n        setStorageValue(defaultValue);\n      }\n    }, [defaultValue, value, setStorageValue]);\n    useEffect14(() => {\n      if (getInitialValueInEffect) {\n        setValue(readStorageValue());\n      }\n    }, []);\n    return [\n      value === void 0 ? defaultValue : value,\n      setStorageValue,\n      removeStorageValue\n    ];\n  };\n}\n\n// src/use-local-storage/use-local-storage.ts\nfunction useLocalStorage(props) {\n  return createStorage(\"localStorage\", \"use-local-storage\")(props);\n}\n\n// src/use-session-storage/use-session-storage.ts\nfunction useSessionStorage(props) {\n  return createStorage(\"sessionStorage\", \"use-session-storage\")(props);\n}\n\n// src/use-merged-ref/use-merged-ref.ts\nimport { useCallback as useCallback5 } from \"react\";\nfunction assignRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (typeof ref === \"object\" && ref !== null && \"current\" in ref) {\n    ref.current = value;\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\nfunction useMergedRef(...refs) {\n  return useCallback5(mergeRefs(...refs), refs);\n}\n\n// src/use-mouse/use-mouse.ts\nimport { useEffect as useEffect15, useRef as useRef12, useState as useState12 } from \"react\";\nfunction useMouse(options = { resetOnExit: false }) {\n  const [position, setPosition] = useState12({ x: 0, y: 0 });\n  const ref = useRef12();\n  const setMousePosition = (event) => {\n    if (ref.current) {\n      const rect = event.currentTarget.getBoundingClientRect();\n      const x = Math.max(\n        0,\n        Math.round(event.pageX - rect.left - (window.pageXOffset || window.scrollX))\n      );\n      const y = Math.max(\n        0,\n        Math.round(event.pageY - rect.top - (window.pageYOffset || window.scrollY))\n      );\n      setPosition({ x, y });\n    } else {\n      setPosition({ x: event.clientX, y: event.clientY });\n    }\n  };\n  const resetMousePosition = () => setPosition({ x: 0, y: 0 });\n  useEffect15(() => {\n    const element = (ref == null ? void 0 : ref.current) ? ref.current : document;\n    element.addEventListener(\"mousemove\", setMousePosition);\n    if (options.resetOnExit)\n      element.addEventListener(\"mouseleave\", resetMousePosition);\n    return () => {\n      element.removeEventListener(\"mousemove\", setMousePosition);\n      if (options.resetOnExit)\n        element.removeEventListener(\"mouseleave\", resetMousePosition);\n    };\n  }, [ref.current]);\n  return { ref, ...position };\n}\n\n// src/use-move/use-move.ts\nimport { useEffect as useEffect16, useState as useState13, useRef as useRef13 } from \"react\";\nvar clampUseMovePosition = (position) => ({\n  x: clamp(position.x, 0, 1),\n  y: clamp(position.y, 0, 1)\n});\nfunction useMove(onChange, handlers, dir = \"ltr\") {\n  const ref = useRef13();\n  const mounted = useRef13(false);\n  const isSliding = useRef13(false);\n  const frame = useRef13(0);\n  const [active, setActive] = useState13(false);\n  useEffect16(() => {\n    mounted.current = true;\n  }, []);\n  useEffect16(() => {\n    var _a, _b;\n    const onScrub = ({ x, y }) => {\n      cancelAnimationFrame(frame.current);\n      frame.current = requestAnimationFrame(() => {\n        if (mounted.current && ref.current) {\n          ref.current.style.userSelect = \"none\";\n          const rect = ref.current.getBoundingClientRect();\n          if (rect.width && rect.height) {\n            const _x = clamp((x - rect.left) / rect.width, 0, 1);\n            onChange({\n              x: dir === \"ltr\" ? _x : 1 - _x,\n              y: clamp((y - rect.top) / rect.height, 0, 1)\n            });\n          }\n        }\n      });\n    };\n    const bindEvents = () => {\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", stopScrubbing);\n      document.addEventListener(\"touchmove\", onTouchMove);\n      document.addEventListener(\"touchend\", stopScrubbing);\n    };\n    const unbindEvents = () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", stopScrubbing);\n      document.removeEventListener(\"touchmove\", onTouchMove);\n      document.removeEventListener(\"touchend\", stopScrubbing);\n    };\n    const startScrubbing = () => {\n      if (!isSliding.current && mounted.current) {\n        isSliding.current = true;\n        typeof (handlers == null ? void 0 : handlers.onScrubStart) === \"function\" && handlers.onScrubStart();\n        setActive(true);\n        bindEvents();\n      }\n    };\n    const stopScrubbing = () => {\n      if (isSliding.current && mounted.current) {\n        isSliding.current = false;\n        setActive(false);\n        unbindEvents();\n        setTimeout(() => {\n          typeof (handlers == null ? void 0 : handlers.onScrubEnd) === \"function\" && handlers.onScrubEnd();\n        }, 0);\n      }\n    };\n    const onMouseDown = (event) => {\n      startScrubbing();\n      event.preventDefault();\n      onMouseMove(event);\n    };\n    const onMouseMove = (event) => onScrub({ x: event.clientX, y: event.clientY });\n    const onTouchStart = (event) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      startScrubbing();\n      onTouchMove(event);\n    };\n    const onTouchMove = (event) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      onScrub({\n        x: event.changedTouches[0].clientX,\n        y: event.changedTouches[0].clientY\n      });\n    };\n    (_a = ref.current) == null ? void 0 : _a.addEventListener(\"mousedown\", onMouseDown);\n    (_b = ref.current) == null ? void 0 : _b.addEventListener(\"touchstart\", onTouchStart, {\n      passive: false\n    });\n    return () => {\n      if (ref.current) {\n        ref.current.removeEventListener(\"mousedown\", onMouseDown);\n        ref.current.removeEventListener(\"touchstart\", onTouchStart);\n      }\n    };\n  }, [dir, onChange]);\n  return { ref, active };\n}\n\n// src/use-pagination/use-pagination.ts\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/use-uncontrolled/use-uncontrolled.ts\nimport { useState as useState14 } from \"react\";\nfunction useUncontrolled({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {\n  }\n}) {\n  const [uncontrolledValue, setUncontrolledValue] = useState14(\n    defaultValue !== void 0 ? defaultValue : finalValue\n  );\n  const handleUncontrolledChange = (val) => {\n    setUncontrolledValue(val);\n    onChange == null ? void 0 : onChange(val);\n  };\n  if (value !== void 0) {\n    return [value, onChange, true];\n  }\n  return [uncontrolledValue, handleUncontrolledChange, false];\n}\n\n// src/use-pagination/use-pagination.ts\nvar DOTS = \"dots\";\nfunction usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange\n}) {\n  const _total = Math.max(Math.trunc(total), 0);\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage\n  });\n  const setPage = (pageNumber) => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(_total);\n  const paginationRange = useMemo2(() => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n    return [\n      ...range(1, boundaries),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(_total - boundaries + 1, _total)\n    ];\n  }, [_total, siblings, activePage]);\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last\n  };\n}\n\n// src/use-queue/use-queue.ts\nimport { useState as useState15 } from \"react\";\nfunction useQueue({ initialValues = [], limit }) {\n  const [{ state, queue }, setState] = useState15({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit)\n  });\n  const add = (...items) => setState((current) => {\n    const results = [...current.state, ...current.queue, ...items];\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const update = (fn) => setState((current) => {\n    const results = fn([...current.state, ...current.queue]);\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const cleanQueue = () => setState((current) => ({ state: current.state, queue: [] }));\n  return {\n    state,\n    queue,\n    add,\n    update,\n    cleanQueue\n  };\n}\n\n// src/use-page-leave/use-page-leave.ts\nimport { useEffect as useEffect17 } from \"react\";\nfunction usePageLeave(onPageLeave) {\n  useEffect17(() => {\n    document.documentElement.addEventListener(\"mouseleave\", onPageLeave);\n    return () => document.documentElement.removeEventListener(\"mouseleave\", onPageLeave);\n  }, []);\n}\n\n// src/use-reduced-motion/use-reduced-motion.ts\nfunction useReducedMotion(initialValue, options) {\n  return useMediaQuery(\"(prefers-reduced-motion: reduce)\", initialValue, options);\n}\n\n// src/use-scroll-into-view/use-scroll-into-view.ts\nimport { useCallback as useCallback6, useRef as useRef14, useEffect as useEffect18 } from \"react\";\n\n// src/use-scroll-into-view/utils/ease-in-out-quad.ts\nvar easeInOutQuad = (t) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n\n// src/use-scroll-into-view/utils/get-relative-position.ts\nvar getRelativePosition = ({\n  axis,\n  target,\n  parent,\n  alignment,\n  offset,\n  isList\n}) => {\n  if (!target || !parent && typeof document === \"undefined\") {\n    return 0;\n  }\n  const isCustomParent = !!parent;\n  const parentElement = parent || document.body;\n  const parentPosition = parentElement.getBoundingClientRect();\n  const targetPosition = target.getBoundingClientRect();\n  const getDiff = (property) => targetPosition[property] - parentPosition[property];\n  if (axis === \"y\") {\n    const diff = getDiff(\"top\");\n    if (diff === 0)\n      return 0;\n    if (alignment === \"start\") {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n    if (alignment === \"end\") {\n      const distance = diff + offset - parentHeight + targetPosition.height;\n      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    if (alignment === \"center\") {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n    return 0;\n  }\n  if (axis === \"x\") {\n    const diff = getDiff(\"left\");\n    if (diff === 0)\n      return 0;\n    if (alignment === \"start\") {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.width || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n    if (alignment === \"end\") {\n      const distance = diff + offset - parentWidth + targetPosition.width;\n      const shouldScroll = distance >= -targetPosition.width || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    if (alignment === \"center\") {\n      return diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n    return 0;\n  }\n  return 0;\n};\n\n// src/use-scroll-into-view/utils/get-scroll-start.ts\nvar getScrollStart = ({ axis, parent }) => {\n  if (!parent && typeof document === \"undefined\") {\n    return 0;\n  }\n  const method = axis === \"y\" ? \"scrollTop\" : \"scrollLeft\";\n  if (parent) {\n    return parent[method];\n  }\n  const { body, documentElement } = document;\n  return body[method] + documentElement[method];\n};\n\n// src/use-scroll-into-view/utils/set-scroll-param.ts\nvar setScrollParam = ({ axis, parent, distance }) => {\n  if (!parent && typeof document === \"undefined\") {\n    return;\n  }\n  const method = axis === \"y\" ? \"scrollTop\" : \"scrollLeft\";\n  if (parent) {\n    parent[method] = distance;\n  } else {\n    const { body, documentElement } = document;\n    body[method] = distance;\n    documentElement[method] = distance;\n  }\n};\n\n// src/use-scroll-into-view/use-scroll-into-view.ts\nfunction useScrollIntoView({\n  duration = 1250,\n  axis = \"y\",\n  onScrollFinish,\n  easing = easeInOutQuad,\n  offset = 0,\n  cancelable = true,\n  isList = false\n} = {}) {\n  const frameID = useRef14(0);\n  const startTime = useRef14(0);\n  const shouldStop = useRef14(false);\n  const scrollableRef = useRef14(null);\n  const targetRef = useRef14(null);\n  const reducedMotion = useReducedMotion();\n  const cancel = () => {\n    if (frameID.current) {\n      cancelAnimationFrame(frameID.current);\n    }\n  };\n  const scrollIntoView = useCallback6(\n    ({ alignment = \"start\" } = {}) => {\n      shouldStop.current = false;\n      if (frameID.current) {\n        cancel();\n      }\n      const start = getScrollStart({ parent: scrollableRef.current, axis }) ?? 0;\n      const change = getRelativePosition({\n        parent: scrollableRef.current,\n        target: targetRef.current,\n        axis,\n        alignment,\n        offset,\n        isList\n      }) - (scrollableRef.current ? 0 : start);\n      function animateScroll() {\n        if (startTime.current === 0) {\n          startTime.current = performance.now();\n        }\n        const now = performance.now();\n        const elapsed = now - startTime.current;\n        const t = reducedMotion || duration === 0 ? 1 : elapsed / duration;\n        const distance = start + change * easing(t);\n        setScrollParam({\n          parent: scrollableRef.current,\n          axis,\n          distance\n        });\n        if (!shouldStop.current && t < 1) {\n          frameID.current = requestAnimationFrame(animateScroll);\n        } else {\n          typeof onScrollFinish === \"function\" && onScrollFinish();\n          startTime.current = 0;\n          frameID.current = 0;\n          cancel();\n        }\n      }\n      animateScroll();\n    },\n    [axis, duration, easing, isList, offset, onScrollFinish, reducedMotion]\n  );\n  const handleStop = () => {\n    if (cancelable) {\n      shouldStop.current = true;\n    }\n  };\n  useWindowEvent(\"wheel\", handleStop, {\n    passive: true\n  });\n  useWindowEvent(\"touchmove\", handleStop, {\n    passive: true\n  });\n  useEffect18(() => cancel, []);\n  return {\n    scrollableRef,\n    targetRef,\n    scrollIntoView,\n    cancel\n  };\n}\n\n// src/use-resize-observer/use-resize-observer.ts\nimport { useEffect as useEffect19, useMemo as useMemo3, useRef as useRef15, useState as useState16 } from \"react\";\nvar defaultState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\nfunction useResizeObserver() {\n  const frameID = useRef15(0);\n  const ref = useRef15(null);\n  const [rect, setRect] = useState16(defaultState);\n  const observer = useMemo3(\n    () => typeof window !== \"undefined\" ? new ResizeObserver((entries) => {\n      const entry = entries[0];\n      if (entry) {\n        cancelAnimationFrame(frameID.current);\n        frameID.current = requestAnimationFrame(() => {\n          if (ref.current) {\n            setRect(entry.contentRect);\n          }\n        });\n      }\n    }) : null,\n    []\n  );\n  useEffect19(() => {\n    if (ref.current) {\n      observer == null ? void 0 : observer.observe(ref.current);\n    }\n    return () => {\n      observer == null ? void 0 : observer.disconnect();\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n  return [ref, rect];\n}\nfunction useElementSize() {\n  const [ref, { width, height }] = useResizeObserver();\n  return { ref, width, height };\n}\n\n// src/use-shallow-effect/use-shallow-effect.ts\nimport { useEffect as useEffect20, useRef as useRef16 } from \"react\";\nfunction shallowCompare(prevValue, currValue) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n  if (prevValue === currValue) {\n    return true;\n  }\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction useShallowCompare(dependencies) {\n  const ref = useRef16([]);\n  const updateRef = useRef16(0);\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n  return [updateRef.current];\n}\nfunction useShallowEffect(cb, dependencies) {\n  useEffect20(cb, useShallowCompare(dependencies));\n}\n\n// src/use-toggle/use-toggle.ts\nimport { useReducer as useReducer2 } from \"react\";\nfunction useToggle(options = [false, true]) {\n  const [[option], toggle] = useReducer2((state, action) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n    return state.slice(index).concat(state.slice(0, index));\n  }, options);\n  return [option, toggle];\n}\n\n// src/use-viewport-size/use-viewport-size.ts\nimport { useCallback as useCallback7, useState as useState17, useEffect as useEffect21 } from \"react\";\nvar eventListerOptions = {\n  passive: true\n};\nfunction useViewportSize() {\n  const [windowSize, setWindowSize] = useState17({\n    width: 0,\n    height: 0\n  });\n  const setSize = useCallback7(() => {\n    setWindowSize({ width: window.innerWidth || 0, height: window.innerHeight || 0 });\n  }, []);\n  useWindowEvent(\"resize\", setSize, eventListerOptions);\n  useWindowEvent(\"orientationchange\", setSize, eventListerOptions);\n  useEffect21(setSize, []);\n  return windowSize;\n}\n\n// src/use-window-scroll/use-window-scroll.ts\nimport { useState as useState18, useEffect as useEffect22 } from \"react\";\nfunction getScrollPosition() {\n  return typeof window !== \"undefined\" ? { x: window.pageXOffset, y: window.pageYOffset } : { x: 0, y: 0 };\n}\nfunction scrollTo({ x, y }) {\n  if (typeof window !== \"undefined\") {\n    const scrollOptions = { behavior: \"smooth\" };\n    if (typeof x === \"number\") {\n      scrollOptions.left = x;\n    }\n    if (typeof y === \"number\") {\n      scrollOptions.top = y;\n    }\n    window.scrollTo(scrollOptions);\n  }\n}\nfunction useWindowScroll() {\n  const [position, setPosition] = useState18({ x: 0, y: 0 });\n  useWindowEvent(\"scroll\", () => setPosition(getScrollPosition()));\n  useWindowEvent(\"resize\", () => setPosition(getScrollPosition()));\n  useEffect22(() => {\n    setPosition(getScrollPosition());\n  }, []);\n  return [position, scrollTo];\n}\n\n// src/use-intersection/use-intersection.ts\nimport { useCallback as useCallback8, useRef as useRef17, useState as useState19 } from \"react\";\nfunction useIntersection(options) {\n  const [entry, setEntry] = useState19(null);\n  const observer = useRef17(null);\n  const ref = useCallback8(\n    (element) => {\n      if (observer.current) {\n        observer.current.disconnect();\n        observer.current = null;\n      }\n      if (element === null) {\n        setEntry(null);\n        return;\n      }\n      observer.current = new IntersectionObserver(([_entry]) => {\n        setEntry(_entry);\n      }, options);\n      observer.current.observe(element);\n    },\n    [options == null ? void 0 : options.rootMargin, options == null ? void 0 : options.root, options == null ? void 0 : options.threshold]\n  );\n  return { ref, entry };\n}\n\n// src/use-hash/use-hash.ts\nimport { useState as useState20, useEffect as useEffect23 } from \"react\";\nfunction useHash({\n  getInitialValueInEffect = false\n} = {}) {\n  const [hash, setHashValue] = useState20(\n    getInitialValueInEffect ? window.location.hash || \"\" : \"\"\n  );\n  const setHash = (value) => {\n    const valueWithHash = value.startsWith(\"#\") ? value : `#${value}`;\n    window.location.hash = valueWithHash;\n    setHashValue(valueWithHash);\n  };\n  useWindowEvent(\"hashchange\", () => {\n    const newHash = window.location.hash;\n    if (hash !== newHash) {\n      setHashValue(hash);\n    }\n  });\n  useEffect23(() => {\n    if (getInitialValueInEffect) {\n      setHashValue(window.location.hash);\n    }\n  }, []);\n  return [hash, setHash];\n}\n\n// src/use-hotkeys/use-hotkeys.ts\nimport { useEffect as useEffect24 } from \"react\";\n\n// src/use-hotkeys/parse-hotkey.ts\nfunction parseHotkey(hotkey) {\n  const keys = hotkey.toLowerCase().split(\"+\").map((part) => part.trim());\n  const modifiers = {\n    alt: keys.includes(\"alt\"),\n    ctrl: keys.includes(\"ctrl\"),\n    meta: keys.includes(\"meta\"),\n    mod: keys.includes(\"mod\"),\n    shift: keys.includes(\"shift\")\n  };\n  const reservedKeys = [\"alt\", \"ctrl\", \"meta\", \"shift\", \"mod\"];\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n  return {\n    ...modifiers,\n    key: freeKey\n  };\n}\nfunction isExactHotkey(hotkey, event) {\n  const { alt, ctrl, meta, mod, shift, key } = hotkey;\n  const { altKey, ctrlKey, metaKey, shiftKey, key: pressedKey } = event;\n  if (alt !== altKey) {\n    return false;\n  }\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n  if (key && (pressedKey.toLowerCase() === key.toLowerCase() || event.code.replace(\"Key\", \"\").toLowerCase() === key.toLowerCase())) {\n    return true;\n  }\n  return false;\n}\nfunction getHotkeyMatcher(hotkey) {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\nfunction getHotkeyHandler(hotkeys) {\n  return (event) => {\n    const _event = \"nativeEvent\" in event ? event.nativeEvent : event;\n    hotkeys.forEach(([hotkey, handler, options = { preventDefault: true }]) => {\n      if (getHotkeyMatcher(hotkey)(_event)) {\n        if (options.preventDefault) {\n          event.preventDefault();\n        }\n        handler(_event);\n      }\n    });\n  };\n}\n\n// src/use-hotkeys/use-hotkeys.ts\nfunction shouldFireEvent(event, tagsToIgnore, triggerOnContentEditable = false) {\n  if (event.target instanceof HTMLElement) {\n    if (triggerOnContentEditable) {\n      return !tagsToIgnore.includes(event.target.tagName);\n    }\n    return !event.target.isContentEditable && !tagsToIgnore.includes(event.target.tagName);\n  }\n  return true;\n}\nfunction useHotkeys(hotkeys, tagsToIgnore = [\"INPUT\", \"TEXTAREA\", \"SELECT\"], triggerOnContentEditable = false) {\n  useEffect24(() => {\n    const keydownListener = (event) => {\n      hotkeys.forEach(([hotkey, handler, options = { preventDefault: true }]) => {\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event, tagsToIgnore, triggerOnContentEditable)) {\n          if (options.preventDefault) {\n            event.preventDefault();\n          }\n          handler(event);\n        }\n      });\n    };\n    document.documentElement.addEventListener(\"keydown\", keydownListener);\n    return () => document.documentElement.removeEventListener(\"keydown\", keydownListener);\n  }, [hotkeys]);\n}\n\n// src/use-fullscreen/use-fullscreen.ts\nimport { useCallback as useCallback9, useRef as useRef18, useState as useState21, useEffect as useEffect25 } from \"react\";\nfunction getFullscreenElement() {\n  const _document = window.document;\n  const fullscreenElement = _document.fullscreenElement || _document.webkitFullscreenElement || _document.mozFullScreenElement || _document.msFullscreenElement;\n  return fullscreenElement;\n}\nasync function exitFullscreen() {\n  const _document = window.document;\n  if (typeof _document.exitFullscreen === \"function\")\n    return _document.exitFullscreen();\n  if (typeof _document.msExitFullscreen === \"function\")\n    return _document.msExitFullscreen();\n  if (typeof _document.webkitExitFullscreen === \"function\")\n    return _document.webkitExitFullscreen();\n  if (typeof _document.mozCancelFullScreen === \"function\")\n    return _document.mozCancelFullScreen();\n  return null;\n}\nasync function enterFullScreen(element) {\n  var _a, _b, _c, _d, _e;\n  const _element = element;\n  return ((_a = _element.requestFullscreen) == null ? void 0 : _a.call(_element)) || ((_b = _element.msRequestFullscreen) == null ? void 0 : _b.call(_element)) || ((_c = _element.webkitEnterFullscreen) == null ? void 0 : _c.call(_element)) || ((_d = _element.webkitRequestFullscreen) == null ? void 0 : _d.call(_element)) || ((_e = _element.mozRequestFullscreen) == null ? void 0 : _e.call(_element));\n}\nvar prefixes = [\"\", \"webkit\", \"moz\", \"ms\"];\nfunction addEvents(element, {\n  onFullScreen,\n  onError\n}) {\n  prefixes.forEach((prefix) => {\n    element.addEventListener(`${prefix}fullscreenchange`, onFullScreen);\n    element.addEventListener(`${prefix}fullscreenerror`, onError);\n  });\n  return () => {\n    prefixes.forEach((prefix) => {\n      element.removeEventListener(`${prefix}fullscreenchange`, onFullScreen);\n      element.removeEventListener(`${prefix}fullscreenerror`, onError);\n    });\n  };\n}\nfunction useFullscreen() {\n  const [fullscreen, setFullscreen] = useState21(false);\n  const _ref = useRef18();\n  const handleFullscreenChange = useCallback9(\n    (event) => {\n      setFullscreen(event.target === getFullscreenElement());\n    },\n    [setFullscreen]\n  );\n  const handleFullscreenError = useCallback9(\n    (event) => {\n      setFullscreen(false);\n      console.error(\n        `[@raikou/hooks] use-fullscreen: Error attempting full-screen mode method: ${event} (${event.target})`\n      );\n    },\n    [setFullscreen]\n  );\n  const toggle = useCallback9(async () => {\n    if (!getFullscreenElement()) {\n      await enterFullScreen(_ref.current);\n    } else {\n      await exitFullscreen();\n    }\n  }, []);\n  const ref = useCallback9((element) => {\n    if (element === null) {\n      _ref.current = window.document.documentElement;\n    } else {\n      _ref.current = element;\n    }\n  }, []);\n  useEffect25(() => {\n    if (!_ref.current && window.document) {\n      _ref.current = window.document.documentElement;\n      return addEvents(_ref.current, {\n        onFullScreen: handleFullscreenChange,\n        onError: handleFullscreenError\n      });\n    }\n    if (_ref.current) {\n      return addEvents(_ref.current, {\n        onFullScreen: handleFullscreenChange,\n        onError: handleFullscreenError\n      });\n    }\n    return void 0;\n  }, []);\n  return { ref, toggle, fullscreen };\n}\n\n// src/use-logger/use-logger.ts\nimport { useEffect as useEffect26 } from \"react\";\nfunction useLogger(componentName, props) {\n  useEffect26(() => {\n    console.log(`${componentName} mounted`, ...props);\n    return () => console.log(`${componentName} unmounted`);\n  }, []);\n  useDidUpdate(() => {\n    console.log(`${componentName} updated`, ...props);\n  }, props);\n  return null;\n}\n\n// src/use-hover/use-hover.ts\nimport { useState as useState22, useEffect as useEffect27, useRef as useRef19, useCallback as useCallback10 } from \"react\";\nfunction useHover() {\n  const [hovered, setHovered] = useState22(false);\n  const ref = useRef19(null);\n  const onMouseEnter = useCallback10(() => setHovered(true), []);\n  const onMouseLeave = useCallback10(() => setHovered(false), []);\n  useEffect27(() => {\n    if (ref.current) {\n      ref.current.addEventListener(\"mouseenter\", onMouseEnter);\n      ref.current.addEventListener(\"mouseleave\", onMouseLeave);\n      return () => {\n        var _a, _b;\n        (_a = ref.current) == null ? void 0 : _a.removeEventListener(\"mouseenter\", onMouseEnter);\n        (_b = ref.current) == null ? void 0 : _b.removeEventListener(\"mouseleave\", onMouseLeave);\n      };\n    }\n    return void 0;\n  }, []);\n  return { ref, hovered };\n}\n\n// src/use-validated-state/use-validated-state.ts\nimport { useState as useState23 } from \"react\";\nfunction useValidatedState(initialValue, validation, initialValidationState) {\n  const [value, setValue] = useState23(initialValue);\n  const [lastValidValue, setLastValidValue] = useState23(\n    validation(initialValue) ? initialValue : void 0\n  );\n  const [valid, setValid] = useState23(\n    typeof initialValidationState === \"boolean\" ? initialValidationState : validation(initialValue)\n  );\n  const onChange = (val) => {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n    setValue(val);\n  };\n  return [{ value, lastValidValue, valid }, onChange];\n}\n\n// src/use-os/use-os.ts\nimport { useState as useState24 } from \"react\";\nfunction getOS() {\n  if (typeof window === \"undefined\") {\n    return \"undetermined\";\n  }\n  const { userAgent } = window.navigator;\n  const macosPlatforms = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n  const windowsPlatforms = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n  const iosPlatforms = /(iPhone)|(iPad)|(iPod)/i;\n  if (macosPlatforms.test(userAgent)) {\n    return \"macos\";\n  }\n  if (iosPlatforms.test(userAgent)) {\n    return \"ios\";\n  }\n  if (windowsPlatforms.test(userAgent)) {\n    return \"windows\";\n  }\n  if (/Android/i.test(userAgent)) {\n    return \"android\";\n  }\n  if (/Linux/i.test(userAgent)) {\n    return \"linux\";\n  }\n  return \"undetermined\";\n}\nfunction useOs(options = { getValueInEffect: true }) {\n  const [value, setValue] = useState24(options.getValueInEffect ? \"undetermined\" : getOS());\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n  return value;\n}\n\n// src/use-set-state/use-set-state.ts\nimport { useState as useState25, useCallback as useCallback11 } from \"react\";\nfunction useSetState(initialState) {\n  const [state, _setState] = useState25(initialState);\n  const setState = useCallback11(\n    (statePartial) => _setState((current) => ({\n      ...current,\n      ...typeof statePartial === \"function\" ? statePartial(current) : statePartial\n    })),\n    []\n  );\n  return [state, setState];\n}\n\n// src/use-input-state/use-input-state.ts\nimport { useState as useState26 } from \"react\";\nfunction getInputOnChange(setValue) {\n  return (val) => {\n    if (!val) {\n      setValue(val);\n    } else if (typeof val === \"function\") {\n      setValue(val);\n    } else if (typeof val === \"object\" && \"nativeEvent\" in val) {\n      const { currentTarget } = val;\n      if (currentTarget.type === \"checkbox\") {\n        setValue(currentTarget.checked);\n      } else {\n        setValue(currentTarget.value);\n      }\n    } else {\n      setValue(val);\n    }\n  };\n}\nfunction useInputState(initialState) {\n  const [value, setValue] = useState26(initialState);\n  return [value, getInputOnChange(setValue)];\n}\n\n// src/use-event-listener/use-event-listener.ts\nimport { useRef as useRef20, useEffect as useEffect28 } from \"react\";\nfunction useEventListener(type, listener, options) {\n  const ref = useRef20();\n  useEffect28(() => {\n    if (ref.current) {\n      ref.current.addEventListener(type, listener, options);\n      return () => {\n        var _a;\n        return (_a = ref.current) == null ? void 0 : _a.removeEventListener(type, listener, options);\n      };\n    }\n    return void 0;\n  }, [listener, options]);\n  return ref;\n}\n\n// src/use-disclosure/use-disclosure.ts\nimport { useState as useState27, useCallback as useCallback12 } from \"react\";\nfunction useDisclosure(initialState = false, callbacks) {\n  const { onOpen, onClose } = callbacks || {};\n  const [opened, setOpened] = useState27(initialState);\n  const open = useCallback12(() => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        onOpen == null ? void 0 : onOpen();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [onOpen]);\n  const close = useCallback12(() => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        onClose == null ? void 0 : onClose();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [onClose]);\n  const toggle = useCallback12(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, { open, close, toggle }];\n}\n\n// src/use-focus-within/use-focus-within.ts\nimport { useRef as useRef21, useState as useState28, useEffect as useEffect29 } from \"react\";\nfunction containsRelatedTarget(event) {\n  if (event.currentTarget instanceof HTMLElement && event.relatedTarget instanceof HTMLElement) {\n    return event.currentTarget.contains(event.relatedTarget);\n  }\n  return false;\n}\nfunction useFocusWithin({\n  onBlur,\n  onFocus\n} = {}) {\n  const ref = useRef21();\n  const [focused, _setFocused] = useState28(false);\n  const focusedRef = useRef21(false);\n  const setFocused = (value) => {\n    _setFocused(value);\n    focusedRef.current = value;\n  };\n  const handleFocusIn = (event) => {\n    if (!focusedRef.current) {\n      setFocused(true);\n      onFocus == null ? void 0 : onFocus(event);\n    }\n  };\n  const handleFocusOut = (event) => {\n    if (focusedRef.current && !containsRelatedTarget(event)) {\n      setFocused(false);\n      onBlur == null ? void 0 : onBlur(event);\n    }\n  };\n  useEffect29(() => {\n    if (ref.current) {\n      ref.current.addEventListener(\"focusin\", handleFocusIn);\n      ref.current.addEventListener(\"focusout\", handleFocusOut);\n      return () => {\n        var _a, _b;\n        (_a = ref.current) == null ? void 0 : _a.removeEventListener(\"focusin\", handleFocusIn);\n        (_b = ref.current) == null ? void 0 : _b.removeEventListener(\"focusout\", handleFocusOut);\n      };\n    }\n    return void 0;\n  }, [handleFocusIn, handleFocusOut]);\n  return { ref, focused };\n}\n\n// src/use-network/use-network.ts\nimport { useState as useState29, useEffect as useEffect30, useCallback as useCallback13 } from \"react\";\nfunction getConnection() {\n  if (typeof navigator === \"undefined\") {\n    return {};\n  }\n  const _navigator = navigator;\n  const connection = _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n  if (!connection) {\n    return {};\n  }\n  return {\n    downlink: connection == null ? void 0 : connection.downlink,\n    downlinkMax: connection == null ? void 0 : connection.downlinkMax,\n    effectiveType: connection == null ? void 0 : connection.effectiveType,\n    rtt: connection == null ? void 0 : connection.rtt,\n    saveData: connection == null ? void 0 : connection.saveData,\n    type: connection == null ? void 0 : connection.type\n  };\n}\nfunction useNetwork() {\n  const [status, setStatus] = useState29({\n    online: true\n  });\n  const handleConnectionChange = useCallback13(\n    () => setStatus((current) => ({ ...current, ...getConnection() })),\n    []\n  );\n  useWindowEvent(\"online\", () => setStatus({ online: true, ...getConnection() }));\n  useWindowEvent(\"offline\", () => setStatus({ online: false, ...getConnection() }));\n  useEffect30(() => {\n    const _navigator = navigator;\n    if (_navigator.connection) {\n      setStatus({ online: _navigator.onLine, ...getConnection() });\n      _navigator.connection.addEventListener(\"change\", handleConnectionChange);\n      return () => _navigator.connection.removeEventListener(\"change\", handleConnectionChange);\n    }\n    return void 0;\n  }, []);\n  return status;\n}\n\n// src/use-timeout/use-timeout.ts\nimport { useRef as useRef22, useEffect as useEffect31, useCallback as useCallback14 } from \"react\";\nfunction useTimeout(callback, delay, options = { autoInvoke: false }) {\n  const timeoutRef = useRef22(null);\n  const start = useCallback14(\n    (...callbackParams) => {\n      if (!timeoutRef.current) {\n        timeoutRef.current = window.setTimeout(() => {\n          callback(callbackParams);\n          timeoutRef.current = null;\n        }, delay);\n      }\n    },\n    [delay]\n  );\n  const clear = useCallback14(() => {\n    if (timeoutRef.current) {\n      window.clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  }, []);\n  useEffect31(() => {\n    if (options.autoInvoke) {\n      start();\n    }\n    return clear;\n  }, [clear, start]);\n  return { start, clear };\n}\n\n// src/use-text-selection/use-text-selection.ts\nimport { useState as useState30, useEffect as useEffect32 } from \"react\";\nfunction useTextSelection() {\n  const forceUpdate = useForceUpdate();\n  const [selection, setSelection] = useState30(null);\n  const handleSelectionChange = () => {\n    setSelection(document.getSelection());\n    forceUpdate();\n  };\n  useEffect32(() => {\n    setSelection(document.getSelection());\n    document.addEventListener(\"selectionchange\", handleSelectionChange);\n    return () => document.removeEventListener(\"selectionchange\", handleSelectionChange);\n  }, []);\n  return selection;\n}\n\n// src/use-previous/use-previous.ts\nimport { useEffect as useEffect33, useRef as useRef23 } from \"react\";\nfunction usePrevious(value) {\n  const ref = useRef23();\n  useEffect33(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// src/use-favicon/use-favicon.ts\nimport { useRef as useRef24 } from \"react\";\nvar MIME_TYPES = {\n  ico: \"image/x-icon\",\n  png: \"image/png\",\n  svg: \"image/svg+xml\",\n  gif: \"image/gif\"\n};\nfunction useFavicon(url) {\n  const link = useRef24();\n  useIsomorphicEffect(() => {\n    if (!url) {\n      return;\n    }\n    if (!link.current) {\n      const existingElements = document.querySelectorAll('link[rel*=\"icon\"]');\n      existingElements.forEach((element2) => document.head.removeChild(element2));\n      const element = document.createElement(\"link\");\n      element.rel = \"shortcut icon\";\n      link.current = element;\n      document.querySelector(\"head\").appendChild(element);\n    }\n    const splittedUrl = url.split(\".\");\n    link.current.setAttribute(\n      \"type\",\n      // @ts-ignore\n      MIME_TYPES[splittedUrl[splittedUrl.length - 1].toLowerCase()]\n    );\n    link.current.setAttribute(\"href\", url);\n  }, [url]);\n}\n\n// src/use-headroom/use-headroom.ts\nimport { useRef as useRef25 } from \"react\";\nvar isFixed = (current, fixedAt) => current <= fixedAt;\nvar isPinned = (current, previous) => current <= previous;\nvar isReleased = (current, previous, fixedAt) => !isPinned(current, previous) && !isFixed(current, fixedAt);\nfunction useHeadroom({\n  fixedAt = 0,\n  onPin,\n  onFix,\n  onRelease\n} = {}) {\n  const scrollRef = useRef25(0);\n  const [{ y: scrollPosition }] = useWindowScroll();\n  useIsomorphicEffect(() => {\n    if (isPinned(scrollPosition, scrollRef.current)) {\n      onPin == null ? void 0 : onPin();\n    }\n  }, [scrollPosition, onPin]);\n  useIsomorphicEffect(() => {\n    if (isFixed(scrollPosition, fixedAt)) {\n      onFix == null ? void 0 : onFix();\n    }\n  }, [scrollPosition, fixedAt, onFix]);\n  useIsomorphicEffect(() => {\n    if (isReleased(scrollPosition, scrollRef.current, fixedAt)) {\n      onRelease == null ? void 0 : onRelease();\n    }\n  }, [scrollPosition, onRelease]);\n  useIsomorphicEffect(() => {\n    scrollRef.current = window.scrollY;\n  }, [scrollPosition]);\n  if (isPinned(scrollPosition, scrollRef.current)) {\n    return true;\n  }\n  if (isFixed(scrollPosition, fixedAt)) {\n    return true;\n  }\n  return false;\n}\n\n// src/use-eye-dropper/use-eye-dropper.ts\nimport { useCallback as useCallback15, useState as useState31 } from \"react\";\nfunction useEyeDropper() {\n  const [supported, setSupported] = useState31(false);\n  useIsomorphicEffect(() => {\n    setSupported(typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  }, []);\n  const open = useCallback15(\n    (options = {}) => {\n      if (supported) {\n        const eyeDropper = new window.EyeDropper();\n        return eyeDropper.open(options);\n      }\n      return Promise.resolve(void 0);\n    },\n    [supported]\n  );\n  return { supported, open };\n}\nexport {\n  assignRef,\n  clamp,\n  clampUseMovePosition,\n  getHotkeyHandler,\n  lowerFirst,\n  mergeRefs,\n  randomId,\n  range,\n  shallowEqual,\n  upperFirst,\n  useCallbackRef,\n  useClickOutside,\n  useClipboard,\n  useColorScheme,\n  useCounter,\n  useDebounceCallback,\n  useDebouncedState,\n  useDebouncedValue,\n  useDidUpdate,\n  useDisclosure,\n  useDocumentTitle,\n  useDocumentVisibility,\n  useElementSize,\n  useEventListener,\n  useEyeDropper,\n  useFavicon,\n  useFocusReturn,\n  useFocusTrap,\n  useFocusWithin,\n  useForceUpdate,\n  useFullscreen,\n  useHash,\n  useHeadroom,\n  useHotkeys,\n  useHover,\n  useId,\n  useIdle,\n  useInputState,\n  useIntersection,\n  useInterval,\n  useIsomorphicEffect,\n  useListState,\n  useLocalStorage,\n  useLogger,\n  useMediaQuery,\n  useMergedRef,\n  useMouse,\n  useMove,\n  useNetwork,\n  useOs,\n  usePageLeave,\n  usePagination,\n  usePrevious,\n  useQueue,\n  useReducedMotion,\n  useResizeObserver,\n  useScrollIntoView,\n  useSessionStorage,\n  useSetState,\n  useShallowEffect,\n  useTextSelection,\n  useTimeout,\n  useToggle,\n  useUncontrolled,\n  useValidatedState,\n  useViewportSize,\n  useWindowEvent,\n  useWindowScroll\n};\n","export function getInputOffsets(\n  inputWrapperOrder: ('label' | 'input' | 'description' | 'error')[],\n  { hasDescription, hasError }: { hasDescription: boolean; hasError: boolean }\n) {\n  const inputIndex = inputWrapperOrder.findIndex((part) => part === 'input');\n  const aboveInput = inputWrapperOrder[inputIndex - 1];\n  const belowInput = inputWrapperOrder[inputIndex + 1];\n  const offsetTop =\n    (hasDescription && aboveInput === 'description') || (hasError && aboveInput === 'error');\n  const offsetBottom =\n    (hasDescription && belowInput === 'description') || (hasError && belowInput === 'error');\n  return { offsetBottom, offsetTop };\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Input/src/Input.module.css\"; export default {\"wrapper\":\"m-6c018570\",\"input\":\"m-8fb7ebe7\",\"section\":\"m-82577fc2\",\"placeholder\":\"m-88bacfd0\",\"root\":\"m-46b77525\",\"label\":\"m-8fdc1311\",\"required\":\"m-78a94662\",\"error\":\"m-8f816625\",\"description\":\"m-fe47ce59\"}","import {\n  extractStyleProps,\n  useProps,\n  BoxProps,\n  StylesApiProps,\n} from \"@raikou/core\";\nimport { __BaseInputProps } from \"./Input\";\n\ninterface BaseProps\n  extends __BaseInputProps,\n    BoxProps,\n    StylesApiProps<{ props: any; stylesNames: string }> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n  id?: string;\n}\n\nexport function useInputProps<T extends BaseProps, U extends Partial<T>>(\n  component: string,\n  defaultProps: U,\n  _props: T,\n) {\n  const props = useProps<T>(component, defaultProps, _props);\n  const {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    styles,\n    className,\n    unstyled,\n    __staticSelector,\n    __stylesApiProps,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    wrapperProps: _wrapperProps,\n    id,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    vars,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n\n  const wrapperProps = {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    className,\n    __staticSelector,\n    __stylesApiProps: __stylesApiProps || props,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    unstyled,\n    styles,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    id,\n    ..._wrapperProps,\n  };\n\n  return {\n    ...rest,\n    classNames,\n    styles,\n    unstyled,\n    wrapperProps: { ...wrapperProps, ...styleProps } as typeof wrapperProps &\n      BoxProps,\n    inputProps: {\n      required,\n      classNames,\n      styles,\n      unstyled,\n      size,\n      __staticSelector,\n      __stylesApiProps: __stylesApiProps || props,\n      error,\n      variant,\n    },\n  };\n}\n"],"mappings":"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","names":["import_react","import_core","import_react","import_core","import_react","import_core","import_react","React","import_react","import_react","import_react","React","import_react","import_core","defaultProps","varsResolver","React","import_react","import_core","defaultProps","varsResolver","React","import_react","import_core","defaultProps","React","import_react","import_react","useEffect7","React","useState7","import_core","defaultProps","varsResolver","React","Input_module_default","defaultProps","varsResolver","Input_module_default","React","import_core","defaultProps","defaultProps","React","defaultProps","React","TextareaAutosize"]}