{"version":3,"sources":["../src/NumberFormatter.tsx"],"sourcesContent":["import React from \"react\";\nimport { NumericFormat } from \"react-number-format\";\nimport {\n  useProps,\n  Factory,\n  ExtendComponent,\n  RaikouThemeComponent,\n} from \"@raikou/core\";\n\nexport interface NumberFormatterProps\n  extends React.ComponentPropsWithoutRef<\"span\"> {\n  /** Value to format */\n  value?: number | string;\n\n  /** Determines whether negative values are allowed, `true` by default */\n  allowNegative?: boolean;\n\n  /** Limits the number of digits that are displayed after the decimal point, by default there is no limit */\n  decimalScale?: number;\n\n  /** Character used as a decimal separator, `'.'` by default */\n  decimalSeparator?: string;\n\n  /** If set, 0s are added after `decimalSeparator` to match given `decimalScale`. `false` by default */\n  fixedDecimalScale?: boolean;\n\n  /** Prefix added before the value */\n  prefix?: string;\n\n  /** Suffix added after the value */\n  suffix?: string;\n\n  /** Defines the thousand grouping style */\n  thousandsGroupStyle?: \"thousand\" | \"lakh\" | \"wan\" | \"none\";\n\n  /** A character used to separate thousands, `','` by default */\n  thousandSeparator?: string | boolean;\n}\n\nexport type NumberFormatterFactory = Factory<{\n  props: NumberFormatterProps;\n  ref: HTMLDivElement;\n}>;\n\nconst defaultProps: Partial<NumberFormatterProps> = {};\n\nexport function NumberFormatter(_props: NumberFormatterProps) {\n  const props = useProps(\"NumberFormatter\", defaultProps, _props);\n  const { value, defaultValue, ...others } = props;\n\n  if (value === undefined) {\n    return null;\n  }\n\n  return <NumericFormat displayType=\"text\" value={value} {...others} />;\n}\n\nconst extendNumberFormatter = (\n  c: ExtendComponent<NumberFormatterFactory>,\n): RaikouThemeComponent => c;\n\nNumberFormatter.extend = extendNumberFormatter;\nNumberFormatter.displayName = \"@raikou/core/NumberFormatter\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,WAAW;AAClB,SAAS,qBAAqB;AAC9B;AAAA,EACE;AAAA,OAIK;AAqCP,IAAM,eAA8C,CAAC;AAE9C,SAAS,gBAAgB,QAA8B;AAC5D,QAAM,QAAQ,SAAS,mBAAmB,cAAc,MAAM;AAC9D,QAA2C,YAAnC,SAAO,aAhDjB,IAgD6C,IAAX,mBAAW,IAAX,CAAxB,SAAO;AAEf,MAAI,UAAU,QAAW;AACvB,WAAO;AAAA,EACT;AAEA,SAAO,oCAAC,gCAAc,aAAY,QAAO,SAAkB,OAAQ;AACrE;AAEA,IAAM,wBAAwB,CAC5B,MACyB;AAE3B,gBAAgB,SAAS;AACzB,gBAAgB,cAAc;","names":[]}