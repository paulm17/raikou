{"version":3,"sources":["../src/index.ts","../src/FileButton.tsx"],"sourcesContent":["export { FileButton } from './FileButton';\nexport type { FileButtonProps } from './FileButton';\n","/* eslint-disable react/no-unused-prop-types */\nimport React, { useRef, forwardRef } from \"react\";\nimport { assignRef, useMergedRef } from \"@raikou/hooks\";\nimport { useProps } from \"@raikou/core\";\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children: (props: { onClick: () => void }) => React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Reference of the function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | \"user\" | \"environment\";\n\n  /** Passes down props to the input element used to capture files */\n  inputProps?: React.ComponentPropsWithoutRef<\"input\">;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>,\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<\n  HTMLInputElement,\n  FileButtonProps\n>((props, ref) => {\n  const {\n    onChange,\n    children,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef,\n    disabled,\n    capture,\n    inputProps,\n    ...others\n  } = useProps(\"FileButton\", defaultProps, props);\n\n  const inputRef = useRef<HTMLInputElement>();\n\n  const onClick = () => {\n    !disabled && inputRef.current?.click();\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (multiple) {\n      onChange(Array.from(event.currentTarget!.files!) as any);\n    } else {\n      onChange(event.currentTarget!.files![0] || null);\n    }\n  };\n\n  const reset = () => {\n    inputRef.current!.value = \"\";\n  };\n\n  assignRef(resetRef!, reset);\n\n  return (\n    <>\n      {children({ onClick, ...others })}\n\n      <input\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept={accept}\n        multiple={multiple}\n        onChange={handleChange}\n        ref={useMergedRef(ref, inputRef)}\n        name={name}\n        form={form}\n        capture={capture}\n        {...inputProps}\n      />\n    </>\n  );\n}) as any;\n\nFileButton.displayName = \"@raikou/core/FileButton\";\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,mBAA0C;AAC1C,mBAAwC;AACxC,kBAAyB;AAkCzB,IAAM,eAAyC;AAAA,EAC7C,UAAU;AACZ;AAMO,IAAM,iBAAkC,yBAG7C,CAAC,OAAO,QAAQ;AAChB,QAYI,+BAAS,cAAc,cAAc,KAAK,GAX5C;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EA3DJ,IA6DM,IADC,mBACD,IADC;AAAA,IAVH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIF,QAAM,eAAW,qBAAyB;AAE1C,QAAM,UAAU,MAAM;AAjExB,QAAAA;AAkEI,KAAC,cAAYA,MAAA,SAAS,YAAT,gBAAAA,IAAkB;AAAA,EACjC;AAEA,QAAM,eAAe,CAAC,UAA+C;AACnE,QAAI,UAAU;AACZ,eAAS,MAAM,KAAK,MAAM,cAAe,KAAM,CAAQ;AAAA,IACzD,OAAO;AACL,eAAS,MAAM,cAAe,MAAO,CAAC,KAAK,IAAI;AAAA,IACjD;AAAA,EACF;AAEA,QAAM,QAAQ,MAAM;AAClB,aAAS,QAAS,QAAQ;AAAA,EAC5B;AAEA,8BAAU,UAAW,KAAK;AAE1B,SACE,6BAAAC,QAAA,2BAAAA,QAAA,gBACG,SAAS,iBAAE,WAAY,OAAQ,GAEhC,6BAAAA,QAAA;AAAA,IAAC;AAAA;AAAA,MACC,OAAO,EAAE,SAAS,OAAO;AAAA,MACzB,MAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV,SAAK,2BAAa,KAAK,QAAQ;AAAA,MAC/B;AAAA,MACA;AAAA,MACA;AAAA,OACI;AAAA,EACN,CACF;AAEJ,CAAC;AAED,WAAW,cAAc;","names":["_a","React"]}