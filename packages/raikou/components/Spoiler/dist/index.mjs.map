{"version":3,"sources":["../src/Spoiler.tsx","../../Anchor/src/Anchor.tsx","../../../../../node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs","../../Text/src/Text.tsx","css-module:./Text.module.css#css-module","css-module:./Anchor.module.css#css-module","css-module:./Spoiler.module.css#css-module"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useElementSize, useId } from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  rem,\n} from \"@raikou/core\";\nimport { Anchor } from \"../../Anchor/src\";\nimport classes from \"./Spoiler.module.css\";\n\nexport type SpoilerStylesNames = \"root\" | \"control\" | \"content\";\nexport type SpoilerCssVariables = {\n  root: \"--spoiler-transition-duration\";\n};\n\nexport interface SpoilerProps\n  extends BoxProps,\n    StylesApiProps<SpoilerFactory>,\n    ElementProps<\"div\"> {\n  /** Maximum height of the visible content, when this point is reached spoiler appears, `100` by default */\n  maxHeight?: number;\n\n  /** Label for close spoiler action */\n  hideLabel: React.ReactNode;\n\n  /** Label for open spoiler action */\n  showLabel: React.ReactNode;\n\n  /** Get ref of spoiler toggle button */\n  controlRef?: React.ForwardedRef<HTMLButtonElement>;\n\n  /** Initial spoiler state, true to wrap content in spoiler, false to show content without spoiler, opened state is updated on mount */\n  initialState?: boolean;\n\n  /** Spoiler reveal transition duration in ms, set 0 or null to turn off animation, `200` by default */\n  transitionDuration?: number;\n}\n\nexport type SpoilerFactory = Factory<{\n  props: SpoilerProps;\n  ref: HTMLDivElement;\n  stylesNames: SpoilerStylesNames;\n  vars: SpoilerCssVariables;\n}>;\n\nconst defaultProps: Partial<SpoilerProps> = {\n  maxHeight: 100,\n  initialState: false,\n};\n\nconst varsResolver = createVarsResolver<SpoilerFactory>(\n  (_, { transitionDuration }) => ({\n    root: {\n      \"--spoiler-transition-duration\":\n        transitionDuration !== undefined\n          ? `${transitionDuration}ms`\n          : undefined,\n    },\n  }),\n);\n\nexport const Spoiler = factory<SpoilerFactory>((_props, ref) => {\n  const props = useProps(\"Spoiler\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    initialState,\n    maxHeight,\n    hideLabel,\n    showLabel,\n    children,\n    controlRef,\n    transitionDuration,\n    id,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SpoilerFactory>({\n    name: \"Spoiler\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _id = useId(id);\n  const regionId = `${_id}-region`;\n  const [show, setShowState] = useState(initialState);\n  const { ref: contentRef, height } = useElementSize();\n  const spoiler = maxHeight! < height;\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n\n  return (\n    <Box\n      {...getStyles(\"root\")}\n      id={_id}\n      ref={ref}\n      data-has-spoiler={spoiler || undefined}\n      {...others}\n    >\n      {spoiler && (\n        <Anchor\n          component=\"button\"\n          type=\"button\"\n          ref={controlRef}\n          onClick={() => setShowState((opened) => !opened)}\n          aria-expanded={show}\n          aria-controls={regionId}\n          {...getStyles(\"control\")}\n        >\n          {/* @ts-ignore */}\n          {spoilerMoreContent}\n        </Anchor>\n      )}\n      <div\n        {...getStyles(\"content\", {\n          style: {\n            maxHeight: !show\n              ? rem(maxHeight)\n              : height\n              ? rem(height)\n              : undefined,\n          },\n        })}\n        data-reduce-motion\n        role=\"region\"\n        id={regionId}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n    </Box>\n  );\n});\n\nSpoiler.classes = classes;\nSpoiler.displayName = \"@raikou/core/Spoiler\";\n","import React from \"react\";\nimport cx from \"clsx\";\nimport { polymorphicFactory, useProps, PolymorphicFactory } from \"@raikou/core\";\nimport {\n  Text,\n  TextProps,\n  TextCssVariables,\n  TextStylesNames,\n  TextVariant,\n} from \"../../Text/src\";\nimport classes from \"./Anchor.module.css\";\n\nexport type AnchorStylesNames = TextStylesNames;\nexport type AnchorVariant = TextVariant;\nexport type AnchorCssVariables = TextCssVariables;\n\nexport interface AnchorProps extends Omit<TextProps, \"span\"> {\n  /** Determines in which cases link should have `text-decoration: underline` styles, `hover` by default */\n  underline?: \"always\" | \"hover\" | \"never\";\n}\n\nexport type AnchorFactory = PolymorphicFactory<{\n  props: AnchorProps;\n  defaultComponent: \"a\";\n  defaultRef: HTMLAnchorElement;\n  stylesNames: AnchorStylesNames;\n  vars: AnchorCssVariables;\n  variant: AnchorVariant;\n}>;\n\nconst defaultProps: Partial<AnchorProps> = {\n  underline: \"hover\",\n};\n\nexport const Anchor = polymorphicFactory<AnchorFactory>((props, ref) => {\n  const { underline, className, ...others } = useProps(\n    \"Anchor\",\n    defaultProps,\n    props,\n  );\n  return (\n    <Text\n      component=\"a\"\n      ref={ref}\n      className={cx(classes.root, className)}\n      {...others}\n      mod={{ underline }}\n      __staticSelector=\"Anchor\"\n    />\n  );\n});\n\nAnchor.displayName = \"@raikou/core/Anchor\";\nAnchor.classes = classes;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  RaikouGradient,\n  useStyles,\n  useProps,\n  getGradient,\n  BoxMod,\n  createVarsResolver,\n  PolymorphicFactory,\n  RaikouSize,\n  getFontSize,\n  getLineHeight,\n} from \"@raikou/core\";\nimport classes from \"./Text.module.css\";\n\ntype TextTruncate = \"end\" | \"start\" | boolean;\n\nfunction getTextTruncate(truncate: TextTruncate | undefined) {\n  if (truncate === \"start\") {\n    return \"start\";\n  }\n\n  if (truncate === \"end\" || truncate) {\n    return \"end\";\n  }\n\n  return undefined;\n}\n\nexport type TextStylesNames = \"root\";\nexport type TextVariant = \"text\" | \"gradient\";\nexport type TextCssVariables = {\n  root: \"--text-gradient\" | \"--text-line-clamp\" | \"--text-fz\" | \"--text-lh\";\n};\n\nexport interface TextProps extends BoxProps, StylesApiProps<TextFactory> {\n  __staticSelector?: string;\n  mod?: BoxMod;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Number of lines after which Text will be truncated */\n  lineClamp?: number;\n\n  /** Side on which Text must be truncated, if `true`, text in truncated from the start */\n  truncate?: TextTruncate;\n\n  /** Sets `line-height` to 1 for centering, `false` by default */\n  inline?: boolean;\n\n  /** Determines whether font properties should be inherited from the parent, `false` by default */\n  inherit?: boolean;\n\n  /** Gradient configuration, ignored when `variant` is not `gradient`, `theme.defaultGradient` by default */\n  gradient?: RaikouGradient;\n\n  /** Shorthand for `component=\"span\"`, `false` by default, default root element is `p` */\n  span?: boolean;\n}\n\nexport type TextFactory = PolymorphicFactory<{\n  props: TextProps;\n  defaultComponent: \"p\";\n  defaultRef: HTMLParagraphElement;\n  stylesNames: TextStylesNames;\n  vars: TextCssVariables;\n  variant: TextVariant;\n}>;\n\nconst defaultProps: Partial<TextProps> = {\n  inherit: false,\n};\n\nconst varsResolver = createVarsResolver<TextFactory>(\n  (theme, { variant, lineClamp, gradient, size }) => ({\n    root: {\n      \"--text-fz\": getFontSize(size),\n      \"--text-lh\": getLineHeight(size),\n      \"--text-gradient\":\n        variant === \"gradient\" ? getGradient(gradient, theme) : undefined,\n      \"--text-line-clamp\":\n        typeof lineClamp === \"number\" ? lineClamp.toString() : undefined,\n    },\n  }),\n);\n\nexport const Text = polymorphicFactory<TextFactory>((_props, ref) => {\n  const props = useProps(\"Text\", defaultProps, _props);\n  const {\n    lineClamp,\n    truncate,\n    inline,\n    inherit,\n    gradient,\n    span,\n    __staticSelector,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    mod,\n    size,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TextFactory>({\n    name: [\"Text\", __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles(\"root\", { focusable: true })}\n      ref={ref}\n      component={span ? \"span\" : \"p\"}\n      variant={variant}\n      mod={[\n        {\n          \"data-truncate\": getTextTruncate(truncate),\n          \"data-line-clamp\": typeof lineClamp === \"number\",\n          \"data-inline\": inline,\n          \"data-inherit\": inherit,\n        },\n        mod,\n      ]}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nText.classes = classes;\nText.displayName = \"@raikou/core/Text\";\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Text/src/Text.module.css\"; export default {\"root\":\"m-b6d8b162\"}","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Anchor/src/Anchor.module.css\"; export default {\"root\":\"m-849cf0da\"}","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Spoiler/src/Spoiler.module.css\"; export default {\"root\":\"m-559cce2d\",\"content\":\"m-b912df4e\",\"control\":\"m-b9131032\"}"],"mappings":"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","names":["React","Box","useProps","useStyles","createVarsResolver","React","polymorphicFactory","useProps","defaultProps","polymorphicFactory","useProps","React","defaultProps","varsResolver","createVarsResolver","useProps","useStyles","React","Box"]}