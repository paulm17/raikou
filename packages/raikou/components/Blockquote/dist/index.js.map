{"version":3,"sources":["../src/index.ts","../src/Blockquote.tsx","css-module:./Blockquote.module.css#css-module"],"sourcesContent":["export { Blockquote } from './Blockquote';\nexport type {\n  BlockquoteCssVariables,\n  BlockquoteFactory,\n  BlockquoteProps,\n  BlockquoteStylesNames,\n} from './Blockquote';\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  RaikouColor,\n  getThemeColor,\n  parseThemeColor,\n  rgba,\n  rem,\n  RaikouRadius,\n  getRadius,\n} from \"@raikou/core\";\nimport classes from \"./Blockquote.module.css\";\n\nexport type BlockquoteStylesNames = \"root\" | \"icon\" | \"cite\";\n\nexport type BlockquoteCssVariables = {\n  root:\n    | \"--bq-bg-light\"\n    | \"--bq-bg-dark\"\n    | \"--bq-bd\"\n    | \"--bq-icon-size\"\n    | \"--bq-radius\";\n};\n\nexport interface BlockquoteProps\n  extends BoxProps,\n    StylesApiProps<BlockquoteFactory>,\n    ElementProps<\"blockquote\", \"cite\"> {\n  /** Blockquote icon, displayed on the top left */\n  icon?: React.ReactNode;\n\n  /** Controls icon `width` and `height`, numbers are converted to rem, `40` by default */\n  iconSize?: number | string;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: RaikouColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Reference to a cited quote */\n  cite?: React.ReactNode;\n}\n\nexport type BlockquoteFactory = Factory<{\n  props: BlockquoteProps;\n  ref: HTMLQuoteElement;\n  stylesNames: BlockquoteStylesNames;\n  vars: BlockquoteCssVariables;\n}>;\n\nconst defaultProps: Partial<BlockquoteProps> = {\n  iconSize: 48,\n};\n\nconst varsResolver = createVarsResolver<BlockquoteFactory>(\n  (theme, { color, iconSize, radius }) => {\n    const darkParsed = parseThemeColor({\n      color: color || theme.primaryColor,\n      theme,\n      colorScheme: \"dark\",\n    });\n\n    const lightParsed = parseThemeColor({\n      color: color || theme.primaryColor,\n      theme,\n      colorScheme: \"light\",\n    });\n\n    return {\n      root: {\n        \"--bq-bg-light\": rgba(lightParsed.value, 0.07),\n        \"--bq-bg-dark\": rgba(darkParsed.value, 0.06),\n        \"--bq-bd\": getThemeColor(color, theme),\n        \"--bq-icon-size\": rem(iconSize),\n        \"--bq-radius\": getRadius(radius),\n      },\n    };\n  },\n);\n\nexport const Blockquote = factory<BlockquoteFactory>((_props, ref) => {\n  const props = useProps(\"Blockquote\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    icon,\n    iconSize,\n    cite,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BlockquoteFactory>({\n    name: \"Blockquote\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box component=\"blockquote\" ref={ref} {...getStyles(\"root\")} {...others}>\n      {icon && <span {...getStyles(\"icon\")}>{icon}</span>}\n      {children}\n      {cite && <cite {...getStyles(\"cite\")}>{cite}</cite>}\n    </Box>\n  );\n});\n\nBlockquote.displayName = \"@raikou/core/Blockquote\";\nBlockquote.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Blockquote/src/Blockquote.module.css\"; export default {\"root\":\"m-ddec01c0\",\"icon\":\"m-dde7bd57\",\"cite\":\"m-dde51a35\"}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAAkB;AAClB,kBAiBO;;;AClB6G,IAAO,4BAAQ,EAAC,QAAO,cAAa,QAAO,cAAa,QAAO,aAAY;;;AD2D/L,IAAM,eAAyC;AAAA,EAC7C,UAAU;AACZ;AAEA,IAAM,mBAAe;AAAA,EACnB,CAAC,OAAO,EAAE,OAAO,UAAU,OAAO,MAAM;AACtC,UAAM,iBAAa,6BAAgB;AAAA,MACjC,OAAO,SAAS,MAAM;AAAA,MACtB;AAAA,MACA,aAAa;AAAA,IACf,CAAC;AAED,UAAM,kBAAc,6BAAgB;AAAA,MAClC,OAAO,SAAS,MAAM;AAAA,MACtB;AAAA,MACA,aAAa;AAAA,IACf,CAAC;AAED,WAAO;AAAA,MACL,MAAM;AAAA,QACJ,qBAAiB,kBAAK,YAAY,OAAO,IAAI;AAAA,QAC7C,oBAAgB,kBAAK,WAAW,OAAO,IAAI;AAAA,QAC3C,eAAW,2BAAc,OAAO,KAAK;AAAA,QACrC,sBAAkB,iBAAI,QAAQ;AAAA,QAC9B,mBAAe,uBAAU,MAAM;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,iBAAa,qBAA2B,CAAC,QAAQ,QAAQ;AACpE,QAAM,YAAQ,sBAAS,cAAc,cAAc,MAAM;AACzD,QAYI,YAXF;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EArGJ,IAuGM,IADC,mBACD,IADC;AAAA,IAVH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIF,QAAM,gBAAY,uBAA6B;AAAA,IAC7C,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SACE,6BAAAA,QAAA,cAAC,iDAAI,WAAU,cAAa,OAAc,UAAU,MAAM,IAAO,SAC9D,QAAQ,6BAAAA,QAAA,cAAC,2BAAS,UAAU,MAAM,IAAI,IAAK,GAC3C,UACA,QAAQ,6BAAAA,QAAA,cAAC,2BAAS,UAAU,MAAM,IAAI,IAAK,CAC9C;AAEJ,CAAC;AAED,WAAW,cAAc;AACzB,WAAW,UAAU;","names":["React"]}