{"version":3,"sources":["../src/InputsGroupFieldset.tsx","../../_utils/create-safe-context/create-safe-context.tsx","../../_utils/create-optional-context/create-optional-context.tsx","../../_utils/use-hovered/use-hovered.ts","../../_utils/create-use-external-events/create-use-external-events.ts","../../Input/src/InputWrapper.context.ts"],"sourcesContent":["import React from \"react\";\nimport { useInputWrapperContext } from \"../../Input/src\";\n\ninterface InputsGroupFieldsetProps {\n  children: React.ReactNode;\n  role: \"radiogroup\" | \"group\";\n}\n\nexport function InputsGroupFieldset({\n  children,\n  role,\n}: InputsGroupFieldsetProps) {\n  const ctx = useInputWrapperContext();\n\n  if (!ctx) {\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      role={role}\n      aria-labelledby={ctx.labelId}\n      aria-describedby={ctx.describedBy}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nconst useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n","import { GetStylesApi } from \"@raikou/core\";\nimport { createOptionalContext } from \"../../_utils\";\nimport type { InputWrapperFactory } from \"./InputWrapper/InputWrapper\";\n\ninterface InputWrapperContextValue {\n  offsetTop: boolean;\n  offsetBottom: boolean;\n  describedBy: string | undefined;\n  inputId: string | undefined;\n  labelId: string | undefined;\n  getStyles: GetStylesApi<InputWrapperFactory> | null;\n}\n\nexport const [InputWrapperProvider, useInputWrapperContext] =\n  createOptionalContext<InputWrapperContextValue>({\n    offsetBottom: false,\n    offsetTop: false,\n    describedBy: undefined,\n    getStyles: null,\n    inputId: undefined,\n    labelId: undefined,\n  });\n"],"mappings":";AAAA,OAAOA,YAAW;;;ACAlB,OAAO,SAAS,eAAe,kBAAkB;;;ACAjD,OAAOC,UAAS,iBAAAC,gBAAe,cAAAC,mBAAkB;AAE1C,SAAS,sBAAoC,eAAoC,MAAM;AAC5F,QAAM,UAAUD,eAAmC,YAAY;AAE/D,QAAM,qBAAqB,MAAMC,YAAW,OAAO;AAEnD,QAAM,WAAW,CAAC,EAAE,UAAU,MAAM,MAClC,gBAAAF,OAAA,cAAC,QAAQ,UAAR,EAAiB,SAAe,QAAS;AAG5C,SAAO,CAAC,UAAU,kBAAkB;AACtC;;;ACZA,SAAS,gBAAgB;;;ACAzB,SAAS,WAAW,uBAAuB;;;ACapC,IAAM,CAAC,sBAAsB,sBAAsB,IACxD,sBAAgD;AAAA,EAC9C,cAAc;AAAA,EACd,WAAW;AAAA,EACX,aAAa;AAAA,EACb,WAAW;AAAA,EACX,SAAS;AAAA,EACT,SAAS;AACX,CAAC;;;ALbI,SAAS,oBAAoB;AAAA,EAClC;AAAA,EACA;AACF,GAA6B;AAC3B,QAAM,MAAM,uBAAuB;AAEnC,MAAI,CAAC,KAAK;AACR,WAAO,gBAAAG,OAAA,cAAAA,OAAA,gBAAG,QAAS;AAAA,EACrB;AAEA,SACE,gBAAAA,OAAA;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,mBAAiB,IAAI;AAAA,MACrB,oBAAkB,IAAI;AAAA;AAAA,IAErB;AAAA,EACH;AAEJ;","names":["React","React","createContext","useContext","React"]}