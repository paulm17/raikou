{"version":3,"sources":["../src/NumberInput.tsx","../../UnstyledButton/src/UnstyledButton.tsx","css-module:./UnstyledButton.module.css#css-module","../../InputBase/src/InputBase.tsx","../../Input/src/Input.tsx","../../_utils/create-safe-context/create-safe-context.tsx","../../_utils/create-optional-context/create-optional-context.tsx","../../_utils/use-hovered/use-hovered.ts","../../_utils/create-use-external-events/create-use-external-events.ts","../../Input/src/InputWrapper.context.ts","../../Input/src/InputLabel/InputLabel.tsx","css-module:../Input.module.css#css-module","../../Input/src/InputError/InputError.tsx","../../Input/src/InputDescription/InputDescription.tsx","../../Input/src/InputPlaceholder/InputPlaceholder.tsx","../../Input/src/InputWrapper/InputWrapper.tsx","../../Input/src/InputWrapper/get-input-offsets/get-input-offsets.ts","css-module:./Input.module.css#css-module","../../Input/src/use-input-props.ts","../src/NumberInputChevron.tsx","css-module:./NumberInput.module.css#css-module"],"sourcesContent":["import React, { useRef } from \"react\";\nimport cx from \"clsx\";\nimport {\n  NumericFormat,\n  OnValueChange,\n  NumberFormatValues,\n} from \"react-number-format\";\nimport { assignRef, clamp, useMergedRef, useUncontrolled } from \"@raikou/hooks\";\nimport {\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  getSize,\n  useResolvedStylesApi,\n} from \"@raikou/core\";\nimport { UnstyledButton } from \"../../UnstyledButton/src\";\nimport { InputBase } from \"../../InputBase/src\";\nimport {\n  __BaseInputProps,\n  __InputStylesNames,\n  InputVariant,\n} from \"../../Input/src\";\nimport { NumberInputChevron } from \"./NumberInputChevron\";\nimport classes from \"./NumberInput.module.css\";\n\n// re for negative -0, -0., -0.0, -0.00, -0.000 ... strings\n// and for positive 0., 0.0, 0.00, 0.000 ... strings\nconst leadingDecimalZeroPattern = /^(0\\.0*|-0(\\.0*)?)$/;\n\n// re for 01, 006, 00.02, -0010, -000.293 ... and negative counterparts\nconst leadingZerosPattern = /^-?0\\d+(\\.\\d+)?\\.?$/;\n\nexport interface NumberInputHandlers {\n  increment: () => void;\n  decrement: () => void;\n}\n\nfunction isValidNumber(value: number | string | undefined): value is number {\n  return (\n    (typeof value === \"number\"\n      ? value < Number.MAX_SAFE_INTEGER\n      : !Number.isNaN(Number(value))) && !Number.isNaN(value)\n  );\n}\n\nfunction isInRange(\n  value: number | undefined,\n  min: number | undefined,\n  max: number | undefined,\n) {\n  if (value === undefined) {\n    return true;\n  }\n\n  const minValid = min === undefined || value >= min;\n  const maxValid = max === undefined || value <= max;\n\n  return minValid && maxValid;\n}\n\nexport type NumberInputStylesNames =\n  | \"controls\"\n  | \"control\"\n  | __InputStylesNames;\nexport type NumberInputCssVariables = {\n  controls: \"--ni-chevron-size\";\n};\n\nexport interface NumberInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<NumberInputFactory>,\n    ElementProps<\"input\", \"size\" | \"type\" | \"onChange\"> {\n  /** Controlled component value */\n  value?: number | string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: number | string;\n\n  /** Called when value changes */\n  onChange?: (value: number | string) => void;\n\n  /** Called when value changes with `react-number-format` payload */\n  onValueChange?: OnValueChange;\n\n  /** Determines whether leading zeros are allowed. If set to `false`, leading zeros are removed when the input value becomes a valid number. `true` by default */\n  allowLeadingZeros?: boolean;\n\n  /** Determines whether negative values are allowed, `true` by default */\n  allowNegative?: boolean;\n\n  /** Characters which when pressed result in a decimal separator, `['.']` by default */\n  allowedDecimalSeparators?: string[];\n\n  /** Limits the number of digits that can be entered after the decimal point */\n  decimalScale?: number;\n\n  /** Character used as a decimal separator, `'.'` by default */\n  decimalSeparator?: string;\n\n  /** If set, 0s are added after `decimalSeparator` to match given `decimalScale`. `false` by default */\n  fixedDecimalScale?: boolean;\n\n  /** Prefix added before the input value */\n  prefix?: string;\n\n  /** Suffix added after the input value */\n  suffix?: string;\n\n  /** Defines the thousand grouping style. */\n  thousandsGroupStyle?: \"thousand\" | \"lakh\" | \"wan\" | \"none\";\n\n  /** A function to validate the input value. If this function returns `false`, the `onChange` will not be called and the input value will not change. */\n  isAllowed?: (values: NumberFormatValues) => boolean;\n\n  /** If value is passed as string representation of numbers (unformatted) and number is used in any format props like in prefix or suffix in numeric format and format prop in pattern format then this should be passed as `true`. `false` by default. */\n  valueIsNumericString?: boolean;\n\n  /** Controls input `type` attribute, `'text'` by default */\n  type?: \"text\" | \"tel\" | \"password\";\n\n  /** A character used to separate thousands */\n  thousandSeparator?: string | boolean;\n\n  /** Minimum possible value */\n  min?: number;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Number by which value will be incremented/decremented with up/down controls and keyboard arrows, `1` by default */\n  step?: number;\n\n  /** Determines whether the up/down controls should be hidden, `false` by default */\n  hideControls?: boolean;\n\n  /** Controls how value is clamped, `strict` – user is not allowed to enter values that are not in `[min, max]` range, `blur` – user is allowed to enter any values, but the value is clamped when the input loses focus (default behavior), `none` – lifts all restrictions, `[min, max]` range is applied only for controls and up/down keys */\n  clampBehavior?: \"strict\" | \"blur\" | \"none\";\n\n  /** Determines whether decimal values are allowed, `true` by default */\n  allowDecimal?: boolean;\n\n  /** Increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Value set to the input when increment/decrement buttons are clicked or up/down arrows pressed if the input is empty, `0` by default */\n  startValue?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Determines whether up/down keyboard events should be handled to increment/decrement value, `true` by default */\n  withKeyboardEvents?: boolean;\n\n  /** Determines whether leading zeros (e.g. `00100` -> `100`) should be removed on blur, `true` by default */\n  trimLeadingZeroesOnBlur?: boolean;\n}\n\nexport type NumberInputFactory = Factory<{\n  props: NumberInputProps;\n  ref: HTMLDivElement;\n  stylesNames: NumberInputStylesNames;\n  vars: NumberInputCssVariables;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<NumberInputProps> = {\n  step: 1,\n  clampBehavior: \"blur\",\n  allowDecimal: true,\n  allowNegative: true,\n  withKeyboardEvents: true,\n  allowLeadingZeros: true,\n  trimLeadingZeroesOnBlur: true,\n  startValue: 0,\n};\n\nconst varsResolver = createVarsResolver<NumberInputFactory>((_, { size }) => ({\n  controls: {\n    \"--ni-chevron-size\": getSize(size, \"ni-chevron-size\"),\n  },\n}));\n\nexport const NumberInput = factory<NumberInputFactory>((_props, ref) => {\n  const props = useProps(\"NumberInput\", defaultProps, _props);\n  const {\n    className,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    onChange,\n    onValueChange,\n    value,\n    defaultValue,\n    max,\n    min,\n    step,\n    hideControls,\n    rightSection,\n    isAllowed,\n    clampBehavior,\n    onBlur,\n    allowDecimal,\n    decimalScale,\n    onKeyDown,\n    onKeyDownCapture,\n    handlersRef,\n    startValue,\n    disabled,\n    rightSectionPointerEvents,\n    allowNegative,\n    readOnly,\n    size,\n    rightSectionWidth,\n    stepHoldInterval,\n    stepHoldDelay,\n    allowLeadingZeros,\n    withKeyboardEvents,\n    trimLeadingZeroesOnBlur,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NumberInputFactory>({\n    name: \"NumberInput\",\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { resolvedClassNames, resolvedStyles } =\n    useResolvedStylesApi<NumberInputFactory>({\n      classNames,\n      styles,\n      props,\n    });\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    onChange,\n  });\n\n  const shouldUseStepInterval =\n    stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const onStepTimeoutRef = useRef<number | null>(null);\n  const stepCountRef = useRef<number>(0);\n\n  const handleValueChange: OnValueChange = (payload, event) => {\n    if (event.source === \"event\") {\n      setValue(\n        isValidNumber(payload.floatValue) &&\n          !leadingDecimalZeroPattern.test(payload.value) &&\n          !(allowLeadingZeros ? leadingZerosPattern.test(payload.value) : false)\n          ? payload.floatValue\n          : payload.value,\n      );\n    }\n    onValueChange?.(payload, event);\n  };\n\n  const getDecimalPlaces = (inputValue: number | string): number => {\n    const match = String(inputValue).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match) {\n      return 0;\n    }\n    return Math.max(\n      0,\n      (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0),\n    );\n  };\n\n  const adjustCursor = (position?: number) => {\n    if (inputRef.current && typeof position !== \"undefined\") {\n      inputRef.current.setSelectionRange(position, position);\n    }\n  };\n\n  const incrementRef = useRef<() => void>();\n  incrementRef.current = () => {\n    let val: number;\n    const currentValuePrecision = getDecimalPlaces(_value);\n    const stepPrecision = getDecimalPlaces(step!);\n    const maxPrecision = Math.max(currentValuePrecision, stepPrecision);\n    const factor = 10 ** maxPrecision;\n\n    if (typeof _value !== \"number\" || Number.isNaN(_value)) {\n      val = clamp(startValue!, min, max);\n    } else if (max !== undefined) {\n      const incrementedValue =\n        (Math.round(_value * factor) + Math.round(step! * factor)) / factor;\n      val = incrementedValue <= max ? incrementedValue : max;\n    } else {\n      val = (Math.round(_value * factor) + Math.round(step! * factor)) / factor;\n    }\n\n    const formattedValue = val.toFixed(maxPrecision);\n    setValue(parseFloat(formattedValue));\n    onValueChange?.(\n      {\n        floatValue: parseFloat(formattedValue),\n        formattedValue,\n        value: formattedValue,\n      },\n      { source: \"increment\" as any },\n    );\n    setTimeout(() => adjustCursor(inputRef.current?.value.length), 0);\n  };\n\n  const decrementRef = useRef<() => void>();\n  decrementRef.current = () => {\n    let val: number;\n    const minValue =\n      min !== undefined ? min : !allowNegative ? 0 : Number.MIN_SAFE_INTEGER;\n    const currentValuePrecision = getDecimalPlaces(_value);\n    const stepPrecision = getDecimalPlaces(step!);\n    const maxPrecision = Math.max(currentValuePrecision, stepPrecision);\n    const factor = 10 ** maxPrecision;\n\n    if (typeof _value !== \"number\" || Number.isNaN(_value)) {\n      val = clamp(startValue!, minValue, max);\n    } else {\n      const decrementedValue =\n        (Math.round(_value * factor) - Math.round(step! * factor)) / factor;\n      val =\n        minValue !== undefined && decrementedValue < minValue\n          ? minValue\n          : decrementedValue;\n    }\n\n    const formattedValue = val.toFixed(maxPrecision);\n    setValue(parseFloat(formattedValue));\n    onValueChange?.(\n      {\n        floatValue: parseFloat(formattedValue),\n        formattedValue,\n        value: formattedValue,\n      },\n      { source: \"decrement\" as any },\n    );\n    setTimeout(() => adjustCursor(inputRef.current?.value.length), 0);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    if (readOnly || !withKeyboardEvents) {\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      incrementRef.current!();\n    }\n\n    if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      decrementRef.current!();\n    }\n  };\n\n  const handleKeyDownCapture = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    onKeyDownCapture?.(event);\n    if (event.key === \"Backspace\") {\n      const input = inputRef.current!;\n      if (\n        input.selectionStart === 0 &&\n        input.selectionStart === input.selectionEnd\n      ) {\n        event.preventDefault();\n        window.setTimeout(() => adjustCursor(0), 0);\n      }\n    }\n  };\n\n  assignRef(handlersRef, {\n    increment: incrementRef.current,\n    decrement: decrementRef.current,\n  });\n\n  const onStepHandleChange = (isIncrement: boolean) => {\n    if (isIncrement) {\n      incrementRef.current!();\n    } else {\n      decrementRef.current!();\n    }\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = (isIncrement: boolean) => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval =\n        typeof stepHoldInterval === \"number\"\n          ? stepHoldInterval\n          : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(\n        () => onStepLoop(isIncrement),\n        interval,\n      );\n    }\n  };\n\n  const onStep = (\n    event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    isIncrement: boolean,\n  ) => {\n    event.preventDefault();\n    inputRef.current?.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(\n        () => onStepLoop(isIncrement),\n        stepHoldDelay,\n      );\n    }\n  };\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const controls = (\n    <div {...getStyles(\"controls\")}>\n      <UnstyledButton\n        {...getStyles(\"control\")}\n        tabIndex={-1}\n        aria-hidden\n        disabled={\n          disabled ||\n          (typeof _value === \"number\" && max !== undefined && _value >= max)\n        }\n        mod={{ direction: \"up\" }}\n        onMouseDown={(event) => event.preventDefault()}\n        onPointerDown={(event) => {\n          onStep(event, true);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <NumberInputChevron direction=\"up\" />\n      </UnstyledButton>\n      <UnstyledButton\n        {...getStyles(\"control\")}\n        tabIndex={-1}\n        aria-hidden\n        disabled={\n          disabled ||\n          (typeof _value === \"number\" && min !== undefined && _value <= min)\n        }\n        mod={{ direction: \"down\" }}\n        onMouseDown={(event) => event.preventDefault()}\n        onPointerDown={(event) => {\n          onStep(event, false);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <NumberInputChevron direction=\"down\" />\n      </UnstyledButton>\n    </div>\n  );\n\n  return (\n    <InputBase\n      component={NumericFormat}\n      allowNegative={allowNegative}\n      className={cx(classes.root, className)}\n      size={size}\n      {...others}\n      readOnly={readOnly}\n      disabled={disabled}\n      value={_value}\n      getInputRef={useMergedRef(ref, inputRef)}\n      onValueChange={handleValueChange}\n      rightSection={\n        hideControls || readOnly ? rightSection : rightSection || controls\n      }\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      unstyled={unstyled}\n      __staticSelector=\"NumberInput\"\n      decimalScale={allowDecimal ? decimalScale : 0}\n      onKeyDown={handleKeyDown}\n      onKeyDownCapture={handleKeyDownCapture}\n      rightSectionPointerEvents={\n        rightSectionPointerEvents ?? (disabled ? \"none\" : undefined)\n      }\n      rightSectionWidth={\n        rightSectionWidth ?? `var(--ni-right-section-width-${size || \"sm\"})`\n      }\n      allowLeadingZeros={allowLeadingZeros}\n      onBlur={(event) => {\n        onBlur?.(event);\n        if (clampBehavior === \"blur\" && typeof _value === \"number\") {\n          const clampedValue = clamp(_value, min, max);\n          if (clampedValue !== _value) {\n            setValue(clamp(_value, min, max));\n          }\n        }\n        if (trimLeadingZeroesOnBlur && typeof _value === \"string\") {\n          const replaced = _value.replace(/^0+/, \"\");\n          const parsedValue = parseFloat(replaced);\n          setValue(Number.isNaN(parsedValue) ? replaced : parsedValue);\n        }\n      }}\n      isAllowed={(val) => {\n        if (clampBehavior === \"strict\") {\n          if (isAllowed) {\n            return isAllowed(val) && isInRange(val.floatValue, min, max);\n          }\n\n          return isInRange(val.floatValue, min, max);\n        }\n\n        return isAllowed ? isAllowed(val) : true;\n      }}\n    />\n  );\n});\n\nNumberInput.displayName = \"@raikou/core/NumberInput\";\n","import React from \"react\";\nimport {\n  Box,\n  useProps,\n  StylesApiProps,\n  useStyles,\n  polymorphicFactory,\n  BoxComponentProps,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport classes from \"./UnstyledButton.module.css\";\n\nexport type UnstyledButtonStylesNames = \"root\";\n\nexport interface UnstyledButtonProps\n  extends Omit<BoxComponentProps, \"vars\" | \"variant\">,\n    StylesApiProps<UnstyledButtonFactory> {\n  __staticSelector?: string;\n}\n\nconst defaultProps: Partial<UnstyledButtonProps> = {\n  __staticSelector: \"UnstyledButton\",\n};\n\nexport type UnstyledButtonFactory = PolymorphicFactory<{\n  props: UnstyledButtonProps;\n  stylesNames: UnstyledButtonStylesNames;\n  defaultComponent: \"button\";\n  defaultRef: HTMLButtonElement;\n}>;\n\nexport const UnstyledButton = polymorphicFactory<UnstyledButtonFactory>(\n  (_props: UnstyledButtonProps & { component?: any }, ref) => {\n    const props = useProps(\"UnstyledButton\", defaultProps, _props);\n    const {\n      className,\n      component = \"button\",\n      __staticSelector,\n      unstyled,\n      classNames,\n      styles,\n      style,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<UnstyledButtonFactory>({\n      name: __staticSelector!,\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n    });\n\n    return (\n      <Box\n        {...getStyles(\"root\", { focusable: true })}\n        component={component}\n        ref={ref}\n        type={component === \"button\" ? \"button\" : undefined}\n        {...others}\n      />\n    );\n  },\n);\n\nUnstyledButton.displayName = \"@raikou/core/UnstyledButton\";\nUnstyledButton.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/UnstyledButton/src/UnstyledButton.module.css\"; export default {\"root\":\"m-87cf2631\"}","import React from \"react\";\nimport {\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport {\n  __InputStylesNames,\n  __BaseInputProps,\n  InputVariant,\n  useInputProps,\n  Input,\n} from \"../../Input/src\";\n\nexport interface InputBaseProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<InputBaseFactory> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n\n  /** Props passed down to the root element (`Input.Wrapper` component) */\n  wrapperProps?: Record<string, any>;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputBaseFactory = PolymorphicFactory<{\n  props: InputBaseProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: \"input\";\n  stylesNames: __InputStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<InputBaseProps> = {\n  __staticSelector: \"InputBase\",\n  withAria: true,\n};\n\nexport const InputBase = polymorphicFactory<InputBaseFactory>((props, ref) => {\n  const { inputProps, wrapperProps, ...others } = useInputProps(\n    \"InputBase\",\n    defaultProps,\n    props,\n  );\n  return (\n    <Input.Wrapper {...wrapperProps}>\n      <Input {...inputProps} {...others} ref={ref} />\n    </Input.Wrapper>\n  );\n});\n\nInputBase.displayName = \"@raikou/core/InputBase\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  polymorphicFactory,\n  useProps,\n  useStyles,\n  RaikouRadius,\n  RaikouSize,\n  extractStyleProps,\n  getSize,\n  getFontSize,\n  getRadius,\n  rem,\n  createVarsResolver,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"./InputWrapper.context\";\nimport { InputLabel } from \"./InputLabel/InputLabel\";\nimport { InputError } from \"./InputError/InputError\";\nimport { InputDescription } from \"./InputDescription/InputDescription\";\nimport { InputPlaceholder } from \"./InputPlaceholder/InputPlaceholder\";\nimport {\n  InputWrapper,\n  __InputWrapperProps,\n  InputWrapperStylesNames,\n} from \"./InputWrapper/InputWrapper\";\nimport classes from \"./Input.module.css\";\n\nexport interface __BaseInputProps\n  extends __InputWrapperProps,\n    Omit<__InputProps, \"wrapperProps\"> {\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n}\n\nexport type __InputStylesNames = InputStylesNames | InputWrapperStylesNames;\n\nexport type InputStylesNames = \"input\" | \"wrapper\" | \"section\";\nexport type InputVariant = \"default\" | \"filled\" | \"unstyled\";\nexport type InputCssVariables = {\n  wrapper:\n    | \"--input-height\"\n    | \"--input-fz\"\n    | \"--input-radius\"\n    | \"--input-left-section-width\"\n    | \"--input-right-section-width\"\n    | \"--input-left-section-pointer-events\"\n    | \"--input-right-section-pointer-events\"\n    | \"--input-padding-y\"\n    | \"--input-margin-top\"\n    | \"--input-margin-bottom\";\n};\n\nexport interface InputStylesCtx {\n  offsetTop: boolean | undefined;\n  offsetBottom: boolean | undefined;\n}\n\nexport interface __InputProps {\n  /** Content section rendered on the left side of the input */\n  leftSection?: React.ReactNode;\n\n  /** Left section width, used to set `width` of the section and input `padding-left`, by default equals to the input height */\n  leftSectionWidth?: React.CSSProperties[\"width\"];\n\n  /** Props added to the `leftSection` element */\n  leftSectionProps?: React.ComponentPropsWithoutRef<\"div\">;\n\n  /** Sets `pointer-events` styles on the `leftSection` element, `'none'` by default */\n  leftSectionPointerEvents?: React.CSSProperties[\"pointerEvents\"];\n\n  /** Content section rendered on the right side of the input */\n  rightSection?: React.ReactNode;\n\n  /** Right section width, used to set `width` of the section and input `padding-right`, by default equals to the input height */\n  rightSectionWidth?: React.CSSProperties[\"width\"];\n\n  /** Props added to the `rightSection` element */\n  rightSectionProps?: React.ComponentPropsWithoutRef<\"div\">;\n\n  /** Sets `pointer-events` styles on the `rightSection` element, `'none'` by default */\n  rightSectionPointerEvents?: React.CSSProperties[\"pointerEvents\"];\n\n  /** Props added to the root element of the `Input` component */\n  wrapperProps?: Record<string, any>;\n\n  /** Sets `required` attribute on the `input` element */\n  required?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Sets `disabled` attribute on the `input` element */\n  disabled?: boolean;\n\n  /** Controls input `height` and horizontal `padding`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Determines whether the input should have `cursor: pointer` style, `false` by default */\n  pointer?: boolean;\n\n  /** Determines whether the input should have red border and text color when `error` prop is set, `true` by default */\n  withErrorStyles?: boolean;\n\n  /** `size` prop added to the input element */\n  inputSize?: string;\n}\n\nexport interface InputProps\n  extends BoxProps,\n    __InputProps,\n    StylesApiProps<InputFactory> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces `Input.Wrapper` props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Determines whether the input should have error styles and `aria-invalid` attribute */\n  error?: React.ReactNode;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Input element id */\n  id?: string;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputFactory = PolymorphicFactory<{\n  props: InputProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: \"input\";\n  stylesNames: InputStylesNames;\n  variant: InputVariant;\n  vars: InputCssVariables;\n  ctx: InputStylesCtx;\n  staticComponents: {\n    Label: typeof InputLabel;\n    Error: typeof InputError;\n    Description: typeof InputDescription;\n    Placeholder: typeof InputPlaceholder;\n    Wrapper: typeof InputWrapper;\n  };\n}>;\n\nconst defaultProps: Partial<InputProps> = {\n  variant: \"default\",\n  leftSectionPointerEvents: \"none\",\n  rightSectionPointerEvents: \"none\",\n  withAria: true,\n  withErrorStyles: true,\n};\n\nconst varsResolver = createVarsResolver<InputFactory>((_, props, ctx) => ({\n  wrapper: {\n    \"--input-margin-top\": ctx.offsetTop\n      ? \"calc(var(--raikou-spacing-xs) / 2)\"\n      : undefined,\n    \"--input-margin-bottom\": ctx.offsetBottom\n      ? \"calc(var(--raikou-spacing-xs) / 2)\"\n      : undefined,\n    \"--input-height\": getSize(props.size, \"input-height\"),\n    \"--input-fz\": getFontSize(props.size),\n    \"--input-radius\":\n      props.radius === undefined ? undefined : getRadius(props.radius),\n    \"--input-left-section-width\":\n      props.leftSectionWidth !== undefined\n        ? rem(props.leftSectionWidth)\n        : undefined,\n    \"--input-right-section-width\":\n      props.rightSectionWidth !== undefined\n        ? rem(props.rightSectionWidth)\n        : undefined,\n    \"--input-padding-y\": props.multiline\n      ? getSize(props.size, \"input-padding-y\")\n      : undefined,\n    \"--input-left-section-pointer-events\": props.leftSectionPointerEvents,\n    \"--input-right-section-pointer-events\": props.rightSectionPointerEvents,\n  },\n}));\n\nexport const Input = polymorphicFactory<InputFactory>((_props, ref) => {\n  const props = useProps(\"Input\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    required,\n    __staticSelector,\n    __stylesApiProps,\n    size,\n    wrapperProps,\n    error,\n    disabled,\n    leftSection,\n    leftSectionProps,\n    leftSectionWidth,\n    rightSection,\n    rightSectionProps,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    leftSectionPointerEvents,\n    variant,\n    vars,\n    pointer,\n    multiline,\n    radius,\n    id,\n    withAria,\n    withErrorStyles,\n    mod,\n    inputSize,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const ctx = useInputWrapperContext();\n  const stylesCtx: InputStylesCtx = {\n    offsetBottom: ctx?.offsetBottom,\n    offsetTop: ctx?.offsetTop,\n  };\n\n  const getStyles = useStyles<InputFactory>({\n    name: [\"Input\", __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    stylesCtx,\n    rootSelector: \"wrapper\",\n    vars,\n    varsResolver,\n  });\n\n  const ariaAttributes = withAria\n    ? {\n        required,\n        disabled,\n        \"aria-invalid\": !!error,\n        \"aria-describedby\": ctx?.describedBy,\n        id: ctx?.inputId || id,\n      }\n    : {};\n\n  return (\n    <Box\n      {...getStyles(\"wrapper\")}\n      {...styleProps}\n      {...wrapperProps}\n      mod={[\n        {\n          error: !!error && withErrorStyles,\n          pointer,\n          disabled,\n          multiline,\n          \"data-with-right-section\": !!rightSection,\n          \"data-with-left-section\": !!leftSection,\n        },\n        mod,\n      ]}\n      variant={variant}\n      size={size}\n    >\n      {leftSection && (\n        <div\n          {...leftSectionProps}\n          data-position=\"left\"\n          {...getStyles(\"section\", {\n            className: leftSectionProps?.className,\n            style: leftSectionProps?.style,\n          })}\n        >\n          {leftSection}\n        </div>\n      )}\n\n      <Box\n        component=\"input\"\n        {...rest}\n        {...ariaAttributes}\n        ref={ref}\n        required={required}\n        mod={{ disabled, error: !!error && withErrorStyles }}\n        variant={variant}\n        __size={inputSize}\n        {...getStyles(\"input\")}\n      />\n\n      {rightSection && (\n        <div\n          {...rightSectionProps}\n          data-position=\"right\"\n          {...getStyles(\"section\", {\n            className: rightSectionProps?.className,\n            style: rightSectionProps?.style,\n          })}\n        >\n          {rightSection}\n        </div>\n      )}\n    </Box>\n  );\n});\n\nInput.classes = classes;\nInput.Wrapper = InputWrapper;\nInput.Label = InputLabel;\nInput.Error = InputError;\nInput.Description = InputDescription;\nInput.Placeholder = InputPlaceholder;\nInput.displayName = \"@raikou/core/Input\";\n","import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nconst useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n","import { GetStylesApi } from \"@raikou/core\";\nimport { createOptionalContext } from \"../../_utils\";\nimport type { InputWrapperFactory } from \"./InputWrapper/InputWrapper\";\n\ninterface InputWrapperContextValue {\n  offsetTop: boolean;\n  offsetBottom: boolean;\n  describedBy: string | undefined;\n  inputId: string | undefined;\n  labelId: string | undefined;\n  getStyles: GetStylesApi<InputWrapperFactory> | null;\n}\n\nexport const [InputWrapperProvider, useInputWrapperContext] =\n  createOptionalContext<InputWrapperContextValue>({\n    offsetBottom: false,\n    offsetTop: false,\n    describedBy: undefined,\n    getStyles: null,\n    inputId: undefined,\n    labelId: undefined,\n  });\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getFontSize,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"../InputWrapper.context\";\nimport classes from \"../Input.module.css\";\n\nexport type InputLabelStylesNames = \"label\" | \"required\";\nexport type InputLabelCssVariables = {\n  label: \"--input-asterisk-color\" | \"--input-label-size\";\n};\n\nexport interface InputLabelProps\n  extends BoxProps,\n    StylesApiProps<InputLabelFactory>,\n    ElementProps<\"label\"> {\n  __staticSelector?: string;\n\n  /** Determines whether required asterisk should be displayed  */\n  required?: boolean;\n\n  /** Controls label `font-size`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n\n  /** Root element of the label, `'label'` by default */\n  labelElement?: \"label\" | \"div\";\n}\n\nexport type InputLabelFactory = Factory<{\n  props: InputLabelProps;\n  ref: HTMLLabelElement;\n  stylesNames: InputLabelStylesNames;\n  vars: InputLabelCssVariables;\n}>;\n\nconst defaultProps: Partial<InputLabelProps> = {\n  labelElement: \"label\",\n};\n\nconst varsResolver = createVarsResolver<InputLabelFactory>((_, { size }) => ({\n  label: {\n    \"--input-label-size\": getFontSize(size),\n    \"--input-asterisk-color\": undefined,\n  },\n}));\n\nexport const InputLabel = factory<InputLabelFactory>((_props, ref) => {\n  const props = useProps(\"InputLabel\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    labelElement,\n    size,\n    required,\n    htmlFor,\n    onMouseDown,\n    children,\n    __staticSelector,\n    variant,\n    mod,\n    ...others\n  } = useProps(\"InputLabel\", defaultProps, props);\n\n  const _getStyles = useStyles<InputLabelFactory>({\n    name: [\"InputWrapper\", __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"label\",\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = ctx?.getStyles || _getStyles;\n\n  return (\n    <Box\n      {...getStyles(\"label\")}\n      component={labelElement as \"label\"}\n      variant={variant}\n      size={size}\n      ref={ref}\n      htmlFor={labelElement === \"label\" ? htmlFor : undefined}\n      mod={[{ required }, mod]}\n      onMouseDown={(event) => {\n        onMouseDown?.(event as any);\n        if (!event.defaultPrevented && event.detail > 1) {\n          event.preventDefault();\n        }\n      }}\n      {...others}\n    >\n      {children}\n      {required && (\n        <span {...getStyles(\"required\")} aria-hidden>\n          {\" *\"}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nInputLabel.displayName = \"@raikou/core/InputLabel\";\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Input/src/Input.module.css\"; export default {\"wrapper\":\"m-6c018570\",\"input\":\"m-8fb7ebe7\",\"section\":\"m-82577fc2\",\"placeholder\":\"m-88bacfd0\",\"root\":\"m-46b77525\",\"label\":\"m-8fdc1311\",\"required\":\"m-78a94662\",\"error\":\"m-8f816625\",\"description\":\"m-fe47ce59\"}","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getFontSize,\n  rem,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"../InputWrapper.context\";\nimport classes from \"../Input.module.css\";\n\nexport type InputErrorStylesNames = \"error\";\nexport type InputErrorCssVariables = {\n  error: \"--input-error-size\";\n};\n\nexport interface InputErrorProps\n  extends BoxProps,\n    StylesApiProps<InputErrorFactory>,\n    ElementProps<\"div\"> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls error `font-size`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n}\n\nexport type InputErrorFactory = Factory<{\n  props: InputErrorProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputErrorStylesNames;\n  vars: InputErrorCssVariables;\n}>;\n\nconst defaultProps: Partial<InputErrorProps> = {};\n\nconst varsResolver = createVarsResolver<InputErrorFactory>((_, { size }) => ({\n  error: {\n    \"--input-error-size\":\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputError = factory<InputErrorFactory>((_props, ref) => {\n  const props = useProps(\"InputError\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    __staticSelector,\n    __inheritStyles = true,\n    variant,\n    ...others\n  } = props;\n\n  const _getStyles = useStyles<InputErrorFactory>({\n    name: [\"InputWrapper\", __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"error\",\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n  return (\n    <Box\n      component=\"p\"\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles(\"error\")}\n      {...others}\n    />\n  );\n});\n\nInputError.displayName = \"@raikou/core/InputError\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  getFontSize,\n  rem,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { useInputWrapperContext } from \"../InputWrapper.context\";\nimport classes from \"../Input.module.css\";\n\nexport type InputDescriptionStylesNames = \"description\";\nexport type InputDescriptionCssVariables = {\n  description: \"--input-description-size\";\n};\n\nexport interface InputDescriptionProps\n  extends BoxProps,\n    StylesApiProps<InputDescriptionFactory>,\n    ElementProps<\"div\"> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls description `font-size`, `'sm'` by default */\n  size?: RaikouSize | (string & {});\n}\n\nexport type InputDescriptionFactory = Factory<{\n  props: InputDescriptionProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputDescriptionStylesNames;\n  vars: InputDescriptionCssVariables;\n}>;\n\nconst defaultProps: Partial<InputDescriptionProps> = {};\n\nconst varsResolver = createVarsResolver<InputDescriptionFactory>(\n  (_, { size }) => ({\n    description: {\n      \"--input-description-size\":\n        size === undefined\n          ? undefined\n          : `calc(${getFontSize(size)} - ${rem(2)})`,\n    },\n  }),\n);\n\nexport const InputDescription = factory<InputDescriptionFactory>(\n  (_props, ref) => {\n    const props = useProps(\"InputDescription\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      size,\n      __staticSelector,\n      __inheritStyles = true,\n      variant,\n      ...others\n    } = useProps(\"InputDescription\", defaultProps, props);\n    const ctx = useInputWrapperContext();\n\n    const _getStyles = useStyles<InputDescriptionFactory>({\n      name: [\"InputWrapper\", __staticSelector],\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      rootSelector: \"description\",\n      vars,\n      varsResolver,\n    });\n\n    const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n    return (\n      <Box\n        component=\"p\"\n        ref={ref}\n        variant={variant}\n        size={size}\n        {...getStyles(\"description\")}\n        {...others}\n      />\n    );\n  },\n);\n\nInputDescription.displayName = \"@raikou/core/InputDescription\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  Factory,\n} from \"@raikou/core\";\nimport classes from \"../Input.module.css\";\n\nexport type InputPlaceholderStylesNames = \"placeholder\";\nexport type InputPlaceholderVariant = string;\n\nexport interface InputPlaceholderProps\n  extends BoxProps,\n    StylesApiProps<InputPlaceholderFactory>,\n    ElementProps<\"span\"> {\n  __staticSelector?: string;\n\n  /** If set, the placeholder will have error styles, `false` by default */\n  error?: React.ReactNode;\n}\n\nexport type InputPlaceholderFactory = Factory<{\n  props: InputPlaceholderProps;\n  ref: HTMLSpanElement;\n  stylesNames: InputPlaceholderStylesNames;\n}>;\n\nconst defaultProps: Partial<InputPlaceholderProps> = {};\n\nexport const InputPlaceholder = factory<InputPlaceholderFactory>(\n  (_props, ref) => {\n    const props = useProps(\"InputPlaceholder\", defaultProps, _props);\n    const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      __staticSelector,\n      variant,\n      error,\n      mod,\n      ...others\n    } = useProps(\"InputPlaceholder\", defaultProps, props);\n\n    const getStyles = useStyles<InputPlaceholderFactory>({\n      name: [\"InputPlaceholder\", __staticSelector],\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n      rootSelector: \"placeholder\",\n    });\n\n    return (\n      <Box\n        {...getStyles(\"placeholder\")}\n        mod={[{ error: !!error }, mod]}\n        component=\"span\"\n        variant={variant}\n        ref={ref}\n        {...others}\n      />\n    );\n  },\n);\n\nInputPlaceholder.displayName = \"@raikou/core/InputPlaceholder\";\n","import React from \"react\";\nimport { useId } from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  RaikouSize,\n  Factory,\n  createVarsResolver,\n  getFontSize,\n  rem,\n} from \"@raikou/core\";\nimport {\n  InputLabel,\n  InputLabelStylesNames,\n  InputLabelCssVariables,\n} from \"../InputLabel/InputLabel\";\nimport {\n  InputDescription,\n  InputDescriptionStylesNames,\n  InputDescriptionCssVariables,\n} from \"../InputDescription/InputDescription\";\nimport {\n  InputError,\n  InputErrorStylesNames,\n  InputErrorCssVariables,\n} from \"../InputError/InputError\";\nimport { InputWrapperProvider } from \"../InputWrapper.context\";\nimport { getInputOffsets } from \"./get-input-offsets/get-input-offsets\";\nimport classes from \"../Input.module.css\";\n\nexport type InputWrapperCssVariables = InputLabelCssVariables &\n  InputErrorCssVariables &\n  InputDescriptionCssVariables;\n\nexport type InputWrapperStylesNames =\n  | \"root\"\n  | InputLabelStylesNames\n  | InputDescriptionStylesNames\n  | InputErrorStylesNames;\n\nexport interface __InputWrapperProps {\n  /** Contents of `Input.Label` component, if not set, label is not rendered. */\n  label?: React.ReactNode;\n\n  /** Contents of `Input.Description` component, if not set, description is not rendered. */\n  description?: React.ReactNode;\n\n  /** Contents of `Input.Error` component, if not set, error is not rendered. */\n  error?: React.ReactNode;\n\n  /** Adds required attribute to the input and a red asterisk on the right side of label, `false` by default */\n  required?: boolean;\n\n  /** Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input, `false` by default */\n  withAsterisk?: boolean;\n\n  /** Props passed down to the `Input.Label` component */\n  labelProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Description` component */\n  descriptionProps?: Record<string, any>;\n\n  /** Props passed down to the `InputError` component */\n  errorProps?: Record<string, any>;\n\n  /** Input container component, defaults to `React.Fragment` */\n  inputContainer?: (children: React.ReactNode) => React.ReactNode;\n\n  /** Controls order of the elements, `['label', 'description', 'input', 'error']` by default */\n  inputWrapperOrder?: (\"label\" | \"input\" | \"description\" | \"error\")[];\n}\n\nexport interface InputWrapperProps\n  extends __InputWrapperProps,\n    BoxProps,\n    StylesApiProps<InputWrapperFactory>,\n    ElementProps<\"div\"> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces Input.Wrapper props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Static id used as base to generate `aria-` attributes, by default generates random id */\n  id?: string;\n\n  /** Controls size of `Input.Label`, `Input.Description` and `Input.Error` components */\n  size?: RaikouSize | (string & {});\n\n  /** `Input.Label` root element, `'label'` by default */\n  labelElement?: \"label\" | \"div\";\n}\n\nexport type InputWrapperFactory = Factory<{\n  props: InputWrapperProps;\n  ref: HTMLDivElement;\n  stylesNames: InputWrapperStylesNames;\n  vars: InputWrapperCssVariables;\n}>;\n\nconst defaultProps: Partial<InputWrapperProps> = {\n  labelElement: \"label\",\n  inputContainer: (children) => children,\n  inputWrapperOrder: [\"label\", \"description\", \"input\", \"error\"],\n};\n\nconst varsResolver = createVarsResolver<InputWrapperFactory>((_, { size }) => ({\n  label: {\n    \"--input-label-size\": getFontSize(size),\n    \"--input-asterisk-color\": undefined,\n  },\n\n  error: {\n    \"--input-error-size\":\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n\n  description: {\n    \"--input-description-size\":\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputWrapper = factory<InputWrapperFactory>((_props, ref) => {\n  const props = useProps(\"InputWrapper\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<InputWrapperFactory>({\n    name: [\"InputWrapper\", __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector,\n  };\n\n  const idBase = useId(id);\n  const isRequired =\n    typeof withAsterisk === \"boolean\" ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== \"boolean\";\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : \"\"} ${\n    hasDescription ? descriptionId : \"\"\n  }`;\n  const describedBy =\n    _describedBy.trim().length > 0 ? _describedBy.trim() : undefined;\n  const labelId = labelProps?.id || `${idBase}-label`;\n\n  const _label = label && (\n    <InputLabel\n      key=\"label\"\n      labelElement={labelElement}\n      id={labelId}\n      htmlFor={inputId}\n      required={isRequired}\n      {...sharedProps}\n      {...labelProps}\n    >\n      {label}\n    </InputLabel>\n  );\n\n  const _description = hasDescription && (\n    <InputDescription\n      key=\"description\"\n      {...descriptionProps}\n      {...sharedProps}\n      size={descriptionProps?.size || sharedProps.size}\n      id={descriptionProps?.id || descriptionId}\n    >\n      {description}\n    </InputDescription>\n  );\n\n  const _input = (\n    <React.Fragment key=\"input\">\n      {inputContainer!(children as any)}\n    </React.Fragment>\n  );\n\n  const _error = hasError && (\n    <InputError\n      {...errorProps}\n      {...sharedProps}\n      size={errorProps?.size || sharedProps.size}\n      key=\"error\"\n      id={errorProps?.id || errorId}\n    >\n      {error}\n    </InputError>\n  );\n\n  const content = inputWrapperOrder!.map((part) => {\n    switch (part) {\n      case \"label\":\n        return _label;\n      case \"input\":\n        return _input;\n      case \"description\":\n        return _description;\n      case \"error\":\n        return _error;\n      default:\n        return null;\n    }\n  });\n\n  return (\n    <InputWrapperProvider\n      value={{\n        getStyles,\n        describedBy,\n        inputId,\n        labelId,\n        ...getInputOffsets(inputWrapperOrder!, { hasDescription, hasError }),\n      }}\n    >\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        mod={[{ error: !!error }, mod]}\n        {...getStyles(\"root\")}\n        {...others}\n      >\n        {content}\n      </Box>\n    </InputWrapperProvider>\n  );\n});\n\nInputWrapper.displayName = \"@raikou/core/InputWrapper\";\n","export function getInputOffsets(\n  inputWrapperOrder: ('label' | 'input' | 'description' | 'error')[],\n  { hasDescription, hasError }: { hasDescription: boolean; hasError: boolean }\n) {\n  const inputIndex = inputWrapperOrder.findIndex((part) => part === 'input');\n  const aboveInput = inputWrapperOrder[inputIndex - 1];\n  const belowInput = inputWrapperOrder[inputIndex + 1];\n  const offsetTop =\n    (hasDescription && aboveInput === 'description') || (hasError && aboveInput === 'error');\n  const offsetBottom =\n    (hasDescription && belowInput === 'description') || (hasError && belowInput === 'error');\n  return { offsetBottom, offsetTop };\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Input/src/Input.module.css\"; export default {\"wrapper\":\"m-6c018570\",\"input\":\"m-8fb7ebe7\",\"section\":\"m-82577fc2\",\"placeholder\":\"m-88bacfd0\",\"root\":\"m-46b77525\",\"label\":\"m-8fdc1311\",\"required\":\"m-78a94662\",\"error\":\"m-8f816625\",\"description\":\"m-fe47ce59\"}","import {\n  extractStyleProps,\n  useProps,\n  BoxProps,\n  StylesApiProps,\n} from \"@raikou/core\";\nimport { __BaseInputProps } from \"./Input\";\n\ninterface BaseProps\n  extends __BaseInputProps,\n    BoxProps,\n    StylesApiProps<{ props: any; stylesNames: string }> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n  id?: string;\n}\n\nexport function useInputProps<T extends BaseProps, U extends Partial<T>>(\n  component: string,\n  defaultProps: U,\n  _props: T,\n) {\n  const props = useProps<T>(component, defaultProps, _props);\n  const {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    styles,\n    className,\n    unstyled,\n    __staticSelector,\n    __stylesApiProps,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    wrapperProps: _wrapperProps,\n    id,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    vars,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n\n  const wrapperProps = {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    className,\n    __staticSelector,\n    __stylesApiProps: __stylesApiProps || props,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    unstyled,\n    styles,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    id,\n    ..._wrapperProps,\n  };\n\n  return {\n    ...rest,\n    classNames,\n    styles,\n    unstyled,\n    wrapperProps: { ...wrapperProps, ...styleProps } as typeof wrapperProps &\n      BoxProps,\n    inputProps: {\n      required,\n      classNames,\n      styles,\n      unstyled,\n      size,\n      __staticSelector,\n      __stylesApiProps: __stylesApiProps || props,\n      error,\n      variant,\n    },\n  } as any;\n}\n","import React from 'react';\n\ninterface ChevronProps extends React.ComponentPropsWithoutRef<'svg'> {\n  direction: 'up' | 'down';\n}\n\nexport function NumberInputChevron({ direction, style, ...others }: ChevronProps) {\n  return (\n    <svg\n      style={{\n        width: 'var(--ni-chevron-size)',\n        height: 'var(--ni-chevron-size)',\n        transform: direction === 'up' ? 'rotate(180deg)' : undefined,\n        ...style,\n      }}\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...others}\n    >\n      <path\n        d=\"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/NumberInput/src/NumberInput.module.css\"; export default {\"root\":\"m-e2f5cd4e\",\"controls\":\"m-95e17d22\",\"control\":\"m-80b4b171\"}"],"mappings":"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","names":["React","factory","useProps","useStyles","createVarsResolver","getSize","React","polymorphicFactory","React","Box","polymorphicFactory","useProps","useStyles","getFontSize","rem","createVarsResolver","React","React","createContext","useContext","React","Box","useProps","useStyles","defaultProps","useProps","useStyles","React","Box","React","Box","factory","useProps","useStyles","getFontSize","createVarsResolver","defaultProps","varsResolver","createVarsResolver","getFontSize","factory","useProps","useStyles","React","Box","React","Box","factory","useProps","useStyles","getFontSize","rem","createVarsResolver","defaultProps","varsResolver","createVarsResolver","getFontSize","rem","factory","useProps","useStyles","React","Box","React","Box","factory","useProps","useStyles","defaultProps","factory","useProps","useStyles","React","Box","React","Box","factory","useProps","useStyles","createVarsResolver","getFontSize","rem","defaultProps","varsResolver","createVarsResolver","getFontSize","rem","factory","useProps","useStyles","React","Box","Input_module_default","defaultProps","varsResolver","createVarsResolver","getFontSize","rem","polymorphicFactory","useProps","useStyles","Input_module_default","React","Box","extractStyleProps","useProps","defaultProps","useProps","extractStyleProps","defaultProps","polymorphicFactory","React","React","React","defaultProps","varsResolver","createVarsResolver","getSize","factory","useProps","useStyles","_a","React"]}