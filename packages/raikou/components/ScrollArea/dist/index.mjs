var __defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value:value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b)),__objRest=(source,exclude)=>{var target={};for(var prop in source)__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0&&(target[prop]=source[prop]);if(null!=source&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source))exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop)&&(target[prop]=source[prop]);return target};import React15,{useState as useState8}from"react";import{Box as Box3,factory,useProps as useProps2,useStyles,rem,createVarsResolver}from"@raikou/core";import React10 from"react";import React,{createContext,useContext}from"react";function createSafeContext(errorMessage){const Context=createContext(null);return[({children:children,value:value})=>React.createElement(Context.Provider,{value:value},children),()=>{const ctx=useContext(Context);if(null===ctx)throw new Error(errorMessage);return ctx}]}import React2,{createContext as createContext2,useContext as useContext2}from"react";import{useState}from"react";import{useEffect,useLayoutEffect}from"react";var[ScrollAreaProvider,useScrollAreaContext]=createSafeContext("ScrollArea.Root component was not found in tree");import React6,{useRef as useRef3,useState as useState3,forwardRef as forwardRef4}from"react";import{useDirection}from"@raikou/core";import React4,{forwardRef as forwardRef2,useRef,useState as useState2,useEffect as useEffect3}from"react";import{useMergedRef as useMergedRef2}from"@raikou/hooks";import React3,{useEffect as useEffect2,forwardRef}from"react";import{useMergedRef,useCallbackRef as useCallbackRef2,useDebounceCallback}from"@raikou/hooks";import{useIsomorphicEffect,useCallbackRef}from"@raikou/hooks";function useResizeObserver(element,onResize){const handleResize=useCallbackRef(onResize);useIsomorphicEffect((()=>{let rAF=0;if(element){const resizeObserver=new ResizeObserver((()=>{cancelAnimationFrame(rAF),rAF=window.requestAnimationFrame(handleResize)}));return resizeObserver.observe(element),()=>{window.cancelAnimationFrame(rAF),resizeObserver.unobserve(element)}}}),[element,handleResize])}var[ScrollbarProvider,useScrollbarContext]=createSafeContext("ScrollAreaScrollbar was not found in tree");function isScrollingWithinScrollbarBounds(scrollPos,maxScrollPos){return scrollPos>0&&scrollPos<maxScrollPos}function getThumbRatio(viewportSize,contentSize){const ratio=viewportSize/contentSize;return Number.isNaN(ratio)?0:ratio}function getThumbSize(sizes){const ratio=getThumbRatio(sizes.viewport,sizes.content),scrollbarPadding=sizes.scrollbar.paddingStart+sizes.scrollbar.paddingEnd,thumbSize=(sizes.scrollbar.size-scrollbarPadding)*ratio;return Math.max(thumbSize,18)}function composeEventHandlers(originalEventHandler,ourEventHandler,{checkForDefaultPrevented:checkForDefaultPrevented=!0}={}){return event=>{null==originalEventHandler||originalEventHandler(event),!1!==checkForDefaultPrevented&&event.defaultPrevented||null==ourEventHandler||ourEventHandler(event)}}function toInt(value){return value?parseInt(value,10):0}function linearScale(input,output){return value=>{if(input[0]===input[1]||output[0]===output[1])return output[0];const ratio=(output[1]-output[0])/(input[1]-input[0]);return output[0]+ratio*(value-input[0])}}function clamp(value,[min,max]){return Math.min(max,Math.max(min,value))}function getThumbOffsetFromScroll(scrollPos,sizes,dir="ltr"){const thumbSizePx=getThumbSize(sizes),scrollbarPadding=sizes.scrollbar.paddingStart+sizes.scrollbar.paddingEnd,scrollbar=sizes.scrollbar.size-scrollbarPadding,maxScrollPos=sizes.content-sizes.viewport,maxThumbPos=scrollbar-thumbSizePx,scrollWithoutMomentum=clamp(scrollPos,"ltr"===dir?[0,maxScrollPos]:[-1*maxScrollPos,0]);return linearScale([0,maxScrollPos],[0,maxThumbPos])(scrollWithoutMomentum)}function getScrollPositionFromPointer(pointerPos,pointerOffset,sizes,dir="ltr"){const thumbSizePx=getThumbSize(sizes),offset=pointerOffset||thumbSizePx/2,thumbOffsetFromEnd=thumbSizePx-offset,minPointerPos=sizes.scrollbar.paddingStart+offset,maxPointerPos=sizes.scrollbar.size-sizes.scrollbar.paddingEnd-thumbOffsetFromEnd,maxScrollPos=sizes.content-sizes.viewport;return linearScale([minPointerPos,maxPointerPos],"ltr"===dir?[0,maxScrollPos]:[-1*maxScrollPos,0])(pointerPos)}function addUnlinkedScrollListener(node,handler=(()=>{})){let prevPosition={left:node.scrollLeft,top:node.scrollTop},rAF=0;return function loop(){const position={left:node.scrollLeft,top:node.scrollTop},isHorizontalScroll=prevPosition.left!==position.left,isVerticalScroll=prevPosition.top!==position.top;(isHorizontalScroll||isVerticalScroll)&&handler(),prevPosition=position,rAF=window.requestAnimationFrame(loop)}(),()=>window.cancelAnimationFrame(rAF)}var Scrollbar=forwardRef(((props,forwardedRef)=>{const _a=props,{sizes:sizes,hasThumb:hasThumb,onThumbChange:onThumbChange,onThumbPointerUp:onThumbPointerUp,onThumbPointerDown:onThumbPointerDown,onThumbPositionChange:onThumbPositionChange,onDragScroll:onDragScroll,onWheelScroll:onWheelScroll,onResize:onResize}=_a,scrollbarProps=__objRest(_a,["sizes","hasThumb","onThumbChange","onThumbPointerUp","onThumbPointerDown","onThumbPositionChange","onDragScroll","onWheelScroll","onResize"]),context=useScrollAreaContext(),[scrollbar,setScrollbar]=React3.useState(null),composeRefs=useMergedRef(forwardedRef,(node=>setScrollbar(node))),rectRef=React3.useRef(null),prevWebkitUserSelectRef=React3.useRef(""),{viewport:viewport}=context,maxScrollPos=sizes.content-sizes.viewport,handleWheelScroll=useCallbackRef2(onWheelScroll),handleThumbPositionChange=useCallbackRef2(onThumbPositionChange),handleResize=useDebounceCallback(onResize,10),handleDragScroll=event=>{if(rectRef.current){const x=event.clientX-rectRef.current.left,y=event.clientY-rectRef.current.top;onDragScroll({x:x,y:y})}};return useEffect2((()=>{const handleWheel=event=>{const element=event.target;(null==scrollbar?void 0:scrollbar.contains(element))&&handleWheelScroll(event,maxScrollPos)};return document.addEventListener("wheel",handleWheel,{passive:!1}),()=>document.removeEventListener("wheel",handleWheel,{passive:!1})}),[viewport,scrollbar,maxScrollPos,handleWheelScroll]),useEffect2(handleThumbPositionChange,[sizes,handleThumbPositionChange]),useResizeObserver(scrollbar,handleResize),useResizeObserver(context.content,handleResize),React3.createElement(ScrollbarProvider,{value:{scrollbar:scrollbar,hasThumb:hasThumb,onThumbChange:useCallbackRef2(onThumbChange),onThumbPointerUp:useCallbackRef2(onThumbPointerUp),onThumbPositionChange:handleThumbPositionChange,onThumbPointerDown:useCallbackRef2(onThumbPointerDown)}},React3.createElement("div",__spreadProps(__spreadValues({},scrollbarProps),{ref:composeRefs,style:__spreadValues({position:"absolute"},scrollbarProps.style),onPointerDown:composeEventHandlers(props.onPointerDown,(event=>{if(0===event.button){event.target.setPointerCapture(event.pointerId),rectRef.current=scrollbar.getBoundingClientRect(),prevWebkitUserSelectRef.current=document.body.style.webkitUserSelect,document.body.style.webkitUserSelect="none",handleDragScroll(event)}})),onPointerMove:composeEventHandlers(props.onPointerMove,handleDragScroll),onPointerUp:composeEventHandlers(props.onPointerUp,(event=>{const element=event.target;element.hasPointerCapture(event.pointerId)&&element.releasePointerCapture(event.pointerId),document.body.style.webkitUserSelect=prevWebkitUserSelectRef.current,rectRef.current=null}))})))}));Scrollbar.displayName="@raikou/Scrollbar";var ScrollAreaScrollbarX=forwardRef2(((props,forwardedRef)=>{const _a=props,{sizes:sizes,onSizesChange:onSizesChange,style:style}=_a,others=__objRest(_a,["sizes","onSizesChange","style"]),ctx=useScrollAreaContext(),[computedStyle,setComputedStyle]=useState2(),ref=useRef(null),composeRefs=useMergedRef2(forwardedRef,ref,ctx.onScrollbarXChange);return useEffect3((()=>{ref.current&&setComputedStyle(getComputedStyle(ref.current))}),[ref]),React4.createElement(Scrollbar,__spreadProps(__spreadValues({"data-orientation":"horizontal"},others),{ref:composeRefs,sizes:sizes,style:__spreadProps(__spreadValues({},style),{"--sa-thumb-width":`${getThumbSize(sizes)}px`}),onThumbPointerDown:pointerPos=>props.onThumbPointerDown(pointerPos.x),onDragScroll:pointerPos=>props.onDragScroll(pointerPos.x),onWheelScroll:(event,maxScrollPos)=>{if(ctx.viewport){const scrollPos=ctx.viewport.scrollLeft+event.deltaX;props.onWheelScroll(scrollPos),isScrollingWithinScrollbarBounds(scrollPos,maxScrollPos)&&event.preventDefault()}},onResize:()=>{ref.current&&ctx.viewport&&computedStyle&&onSizesChange({content:ctx.viewport.scrollWidth,viewport:ctx.viewport.offsetWidth,scrollbar:{size:ref.current.clientWidth,paddingStart:toInt(computedStyle.paddingLeft),paddingEnd:toInt(computedStyle.paddingRight)}})}}))}));import React5,{forwardRef as forwardRef3,useEffect as useEffect4,useRef as useRef2}from"react";import{useMergedRef as useMergedRef3}from"@raikou/hooks";var ScrollAreaScrollbarY=forwardRef3(((props,forwardedRef)=>{const _a=props,{sizes:sizes,onSizesChange:onSizesChange,style:style}=_a,others=__objRest(_a,["sizes","onSizesChange","style"]),context=useScrollAreaContext(),[computedStyle,setComputedStyle]=React5.useState(),ref=useRef2(null),composeRefs=useMergedRef3(forwardedRef,ref,context.onScrollbarYChange);return useEffect4((()=>{ref.current&&setComputedStyle(getComputedStyle(ref.current))}),[ref]),React5.createElement(Scrollbar,__spreadProps(__spreadValues({},others),{"data-orientation":"vertical",ref:composeRefs,sizes:sizes,style:__spreadValues({"--sa-thumb-height":`${getThumbSize(sizes)}px`},style),onThumbPointerDown:pointerPos=>props.onThumbPointerDown(pointerPos.y),onDragScroll:pointerPos=>props.onDragScroll(pointerPos.y),onWheelScroll:(event,maxScrollPos)=>{if(context.viewport){const scrollPos=context.viewport.scrollTop+event.deltaY;props.onWheelScroll(scrollPos),isScrollingWithinScrollbarBounds(scrollPos,maxScrollPos)&&event.preventDefault()}},onResize:()=>{ref.current&&context.viewport&&computedStyle&&onSizesChange({content:context.viewport.scrollHeight,viewport:context.viewport.offsetHeight,scrollbar:{size:ref.current.clientHeight,paddingStart:toInt(computedStyle.paddingTop),paddingEnd:toInt(computedStyle.paddingBottom)}})}}))})),ScrollAreaScrollbarVisible=forwardRef4(((props,forwardedRef)=>{const _a=props,{orientation:orientation="vertical"}=_a,scrollbarProps=__objRest(_a,["orientation"]),{dir:dir}=useDirection(),context=useScrollAreaContext(),thumbRef=useRef3(null),pointerOffsetRef=useRef3(0),[sizes,setSizes]=useState3({content:0,viewport:0,scrollbar:{size:0,paddingStart:0,paddingEnd:0}}),thumbRatio=getThumbRatio(sizes.viewport,sizes.content),commonProps=__spreadProps(__spreadValues({},scrollbarProps),{sizes:sizes,onSizesChange:setSizes,hasThumb:Boolean(thumbRatio>0&&thumbRatio<1),onThumbChange:thumb=>{thumbRef.current=thumb},onThumbPointerUp:()=>{pointerOffsetRef.current=0},onThumbPointerDown:pointerPos=>{pointerOffsetRef.current=pointerPos}}),getScrollPosition=(pointerPos,direction)=>getScrollPositionFromPointer(pointerPos,pointerOffsetRef.current,sizes,direction);return"horizontal"===orientation?React6.createElement(ScrollAreaScrollbarX,__spreadProps(__spreadValues({},commonProps),{ref:forwardedRef,onThumbPositionChange:()=>{if(context.viewport&&thumbRef.current){const offset=getThumbOffsetFromScroll(context.viewport.scrollLeft,sizes,dir);thumbRef.current.style.transform=`translate3d(${offset}px, 0, 0)`}},onWheelScroll:scrollPos=>{context.viewport&&(context.viewport.scrollLeft=scrollPos)},onDragScroll:pointerPos=>{context.viewport&&(context.viewport.scrollLeft=getScrollPosition(pointerPos,dir))}})):"vertical"===orientation?React6.createElement(ScrollAreaScrollbarY,__spreadProps(__spreadValues({},commonProps),{ref:forwardedRef,onThumbPositionChange:()=>{if(context.viewport&&thumbRef.current){const offset=getThumbOffsetFromScroll(context.viewport.scrollTop,sizes);thumbRef.current.style.transform=`translate3d(0, ${offset}px, 0)`}},onWheelScroll:scrollPos=>{context.viewport&&(context.viewport.scrollTop=scrollPos)},onDragScroll:pointerPos=>{context.viewport&&(context.viewport.scrollTop=getScrollPosition(pointerPos))}})):null}));import React8,{forwardRef as forwardRef6,useEffect as useEffect5,useState as useState5}from"react";import React7,{forwardRef as forwardRef5,useState as useState4}from"react";import{useDebounceCallback as useDebounceCallback2}from"@raikou/hooks";var ScrollAreaScrollbarAuto=forwardRef5(((props,ref)=>{const context=useScrollAreaContext(),_a=props,{forceMount:forceMount}=_a,scrollbarProps=__objRest(_a,["forceMount"]),[visible,setVisible]=useState4(!1),isHorizontal="horizontal"===props.orientation,handleResize=useDebounceCallback2((()=>{if(context.viewport){const isOverflowX=context.viewport.offsetWidth<context.viewport.scrollWidth,isOverflowY=context.viewport.offsetHeight<context.viewport.scrollHeight;setVisible(isHorizontal?isOverflowX:isOverflowY)}}),10);return useResizeObserver(context.viewport,handleResize),useResizeObserver(context.content,handleResize),forceMount||visible?React7.createElement(ScrollAreaScrollbarVisible,__spreadProps(__spreadValues({"data-state":visible?"visible":"hidden"},scrollbarProps),{ref:ref})):null})),ScrollAreaScrollbarHover=forwardRef6(((props,ref)=>{const _a=props,{forceMount:forceMount}=_a,scrollbarProps=__objRest(_a,["forceMount"]),context=useScrollAreaContext(),[visible,setVisible]=useState5(!1);return useEffect5((()=>{const{scrollArea:scrollArea}=context;let hideTimer=0;if(scrollArea){const handlePointerEnter=()=>{window.clearTimeout(hideTimer),setVisible(!0)},handlePointerLeave=()=>{hideTimer=window.setTimeout((()=>setVisible(!1)),context.scrollHideDelay)};return scrollArea.addEventListener("pointerenter",handlePointerEnter),scrollArea.addEventListener("pointerleave",handlePointerLeave),()=>{window.clearTimeout(hideTimer),scrollArea.removeEventListener("pointerenter",handlePointerEnter),scrollArea.removeEventListener("pointerleave",handlePointerLeave)}}}),[context.scrollArea,context.scrollHideDelay]),forceMount||visible?React8.createElement(ScrollAreaScrollbarAuto,__spreadProps(__spreadValues({"data-state":visible?"visible":"hidden"},scrollbarProps),{ref:ref})):null}));import React9,{forwardRef as forwardRef7,useEffect as useEffect6,useState as useState6}from"react";import{useDebounceCallback as useDebounceCallback3}from"@raikou/hooks";var ScrollAreaScrollbarScroll=forwardRef7(((props,red)=>{const _a=props,{forceMount:forceMount}=_a,scrollbarProps=__objRest(_a,["forceMount"]),context=useScrollAreaContext(),isHorizontal="horizontal"===props.orientation,[state,setState]=useState6("hidden"),debounceScrollEnd=useDebounceCallback3((()=>setState("idle")),100);return useEffect6((()=>{if("idle"===state){const hideTimer=window.setTimeout((()=>setState("hidden")),context.scrollHideDelay);return()=>window.clearTimeout(hideTimer)}}),[state,context.scrollHideDelay]),useEffect6((()=>{const{viewport:viewport}=context,scrollDirection=isHorizontal?"scrollLeft":"scrollTop";if(viewport){let prevScrollPos=viewport[scrollDirection];const handleScroll=()=>{const scrollPos=viewport[scrollDirection];prevScrollPos!==scrollPos&&(setState("scrolling"),debounceScrollEnd()),prevScrollPos=scrollPos};return viewport.addEventListener("scroll",handleScroll),()=>viewport.removeEventListener("scroll",handleScroll)}}),[context.viewport,isHorizontal,debounceScrollEnd]),forceMount||"hidden"!==state?React9.createElement(ScrollAreaScrollbarVisible,__spreadProps(__spreadValues({"data-state":"hidden"===state?"hidden":"visible"},scrollbarProps),{ref:red,onPointerEnter:composeEventHandlers(props.onPointerEnter,(()=>setState("interacting"))),onPointerLeave:composeEventHandlers(props.onPointerLeave,(()=>setState("idle")))})):null})),ScrollAreaScrollbar=React10.forwardRef(((props,forwardedRef)=>{const _a=props,{forceMount:forceMount}=_a,scrollbarProps=__objRest(_a,["forceMount"]),context=useScrollAreaContext(),{onScrollbarXEnabledChange:onScrollbarXEnabledChange,onScrollbarYEnabledChange:onScrollbarYEnabledChange}=context,isHorizontal="horizontal"===props.orientation;return React10.useEffect((()=>(isHorizontal?onScrollbarXEnabledChange(!0):onScrollbarYEnabledChange(!0),()=>{isHorizontal?onScrollbarXEnabledChange(!1):onScrollbarYEnabledChange(!1)})),[isHorizontal,onScrollbarXEnabledChange,onScrollbarYEnabledChange]),"hover"===context.type?React10.createElement(ScrollAreaScrollbarHover,__spreadProps(__spreadValues({},scrollbarProps),{ref:forwardedRef,forceMount:forceMount})):"scroll"===context.type?React10.createElement(ScrollAreaScrollbarScroll,__spreadProps(__spreadValues({},scrollbarProps),{ref:forwardedRef,forceMount:forceMount})):"auto"===context.type?React10.createElement(ScrollAreaScrollbarAuto,__spreadProps(__spreadValues({},scrollbarProps),{ref:forwardedRef,forceMount:forceMount})):"always"===context.type?React10.createElement(ScrollAreaScrollbarVisible,__spreadProps(__spreadValues({},scrollbarProps),{ref:forwardedRef})):null}));import React11 from"react";var Corner=React11.forwardRef(((props,ref)=>{const _a=props,{style:style}=_a,others=__objRest(_a,["style"]),ctx=useScrollAreaContext(),[width,setWidth]=React11.useState(0),[height,setHeight]=React11.useState(0),hasSize=Boolean(width&&height);return useResizeObserver(ctx.scrollbarX,(()=>{var _a2;const h=(null==(_a2=ctx.scrollbarX)?void 0:_a2.offsetHeight)||0;ctx.onCornerHeightChange(h),setHeight(h)})),useResizeObserver(ctx.scrollbarY,(()=>{var _a2;const w=(null==(_a2=ctx.scrollbarY)?void 0:_a2.offsetWidth)||0;ctx.onCornerWidthChange(w),setWidth(w)})),hasSize?React11.createElement("div",__spreadProps(__spreadValues({},others),{ref:ref,style:__spreadProps(__spreadValues({},style),{width:width,height:height})})):null})),ScrollAreaCorner=React11.forwardRef(((props,ref)=>{const ctx=useScrollAreaContext(),hasBothScrollbarsVisible=Boolean(ctx.scrollbarX&&ctx.scrollbarY);return"scroll"!==ctx.type&&hasBothScrollbarsVisible?React11.createElement(Corner,__spreadProps(__spreadValues({},props),{ref:ref})):null}));import React12,{useState as useState7,forwardRef as forwardRef8}from"react";import{useMergedRef as useMergedRef4}from"@raikou/hooks";import{Box,useProps}from"@raikou/core";var defaultProps={scrollHideDelay:1e3,type:"hover"},ScrollAreaRoot=forwardRef8(((_props,ref)=>{const _a=useProps("ScrollAreaRoot",defaultProps,_props),{type:type,scrollHideDelay:scrollHideDelay,scrollbars:scrollbars}=_a,others=__objRest(_a,["type","scrollHideDelay","scrollbars"]),[scrollArea,setScrollArea]=useState7(null),[viewport,setViewport]=useState7(null),[content,setContent]=useState7(null),[scrollbarX,setScrollbarX]=useState7(null),[scrollbarY,setScrollbarY]=useState7(null),[cornerWidth,setCornerWidth]=useState7(0),[cornerHeight,setCornerHeight]=useState7(0),[scrollbarXEnabled,setScrollbarXEnabled]=useState7(!1),[scrollbarYEnabled,setScrollbarYEnabled]=useState7(!1),rootRef=useMergedRef4(ref,(node=>setScrollArea(node)));return React12.createElement(ScrollAreaProvider,{value:{type:type,scrollHideDelay:scrollHideDelay,scrollArea:scrollArea,viewport:viewport,onViewportChange:setViewport,content:content,onContentChange:setContent,scrollbarX:scrollbarX,onScrollbarXChange:setScrollbarX,scrollbarXEnabled:scrollbarXEnabled,onScrollbarXEnabledChange:setScrollbarXEnabled,scrollbarY:scrollbarY,onScrollbarYChange:setScrollbarY,scrollbarYEnabled:scrollbarYEnabled,onScrollbarYEnabledChange:setScrollbarYEnabled,onCornerWidthChange:setCornerWidth,onCornerHeightChange:setCornerHeight}},React12.createElement(Box,__spreadProps(__spreadValues({},others),{ref:rootRef,__vars:{"--sa-corner-width":"xy"!==scrollbars?"0px":`${cornerWidth}px`,"--sa-corner-height":"xy"!==scrollbars?"0px":`${cornerHeight}px`}})))}));ScrollAreaRoot.displayName="@raikou/core/ScrollAreaRoot";import React13,{forwardRef as forwardRef9}from"react";import{useMergedRef as useMergedRef5}from"@raikou/hooks";import{Box as Box2}from"@raikou/core";var ScrollAreaViewport=forwardRef9(((_a,ref)=>{var _b=_a,{children:children,style:style}=_b,others=__objRest(_b,["children","style"]);const ctx=useScrollAreaContext(),rootRef=useMergedRef5(ref,ctx.onViewportChange);return React13.createElement(Box2,__spreadProps(__spreadValues({},others),{ref:rootRef,style:__spreadValues({overflowX:ctx.scrollbarXEnabled?"scroll":"hidden",overflowY:ctx.scrollbarYEnabled?"scroll":"hidden"},style)}),React13.createElement("div",{style:{minWidth:"100%",display:"table"},ref:ctx.onContentChange},children))}));ScrollAreaViewport.displayName="@raikou/core/ScrollAreaViewport";import React14,{forwardRef as forwardRef10,useRef as useRef4,useEffect as useEffect7}from"react";import{useDebounceCallback as useDebounceCallback4,useMergedRef as useMergedRef6}from"@raikou/hooks";var Thumb=forwardRef10(((props,forwardedRef)=>{const _a=props,{style:style}=_a,others=__objRest(_a,["style"]),scrollAreaContext=useScrollAreaContext(),scrollbarContext=useScrollbarContext(),{onThumbPositionChange:onThumbPositionChange}=scrollbarContext,composedRef=useMergedRef6(forwardedRef,(node=>scrollbarContext.onThumbChange(node))),removeUnlinkedScrollListenerRef=useRef4(),debounceScrollEnd=useDebounceCallback4((()=>{removeUnlinkedScrollListenerRef.current&&(removeUnlinkedScrollListenerRef.current(),removeUnlinkedScrollListenerRef.current=void 0)}),100);return useEffect7((()=>{const{viewport:viewport}=scrollAreaContext;if(viewport){const handleScroll=()=>{if(debounceScrollEnd(),!removeUnlinkedScrollListenerRef.current){const listener=addUnlinkedScrollListener(viewport,onThumbPositionChange);removeUnlinkedScrollListenerRef.current=listener,onThumbPositionChange()}};return onThumbPositionChange(),viewport.addEventListener("scroll",handleScroll),()=>viewport.removeEventListener("scroll",handleScroll)}}),[scrollAreaContext.viewport,debounceScrollEnd,onThumbPositionChange]),React14.createElement("div",__spreadProps(__spreadValues({"data-state":scrollbarContext.hasThumb?"visible":"hidden"},others),{ref:composedRef,style:__spreadValues({width:"var(--sa-thumb-width)",height:"var(--sa-thumb-height)"},style),onPointerDownCapture:composeEventHandlers(props.onPointerDownCapture,(event=>{const thumbRect=event.target.getBoundingClientRect(),x=event.clientX-thumbRect.left,y=event.clientY-thumbRect.top;scrollbarContext.onThumbPointerDown({x:x,y:y})})),onPointerUp:composeEventHandlers(props.onPointerUp,scrollbarContext.onThumbPointerUp)}))})),ScrollAreaThumb=React14.forwardRef(((props,forwardedRef)=>{const _a=props,{forceMount:forceMount}=_a,thumbProps=__objRest(_a,["forceMount"]),scrollbarContext=useScrollbarContext();return forceMount||scrollbarContext.hasThumb?React14.createElement(Thumb,__spreadValues({ref:forwardedRef},thumbProps)):null})),ScrollArea_module_default={root:"m-d57069b5",viewport:"m-c0783ff9",viewportInner:"m-f8f631dd",scrollbar:"m-c44ba933",thumb:"m-d8b5e363",corner:"m-21657268"},defaultProps2={scrollHideDelay:1e3,type:"hover",scrollbars:"xy"},varsResolver=createVarsResolver(((_,{scrollbarSize:scrollbarSize})=>({root:{"--scrollarea-scrollbar-size":rem(scrollbarSize)}}))),ScrollArea=factory(((_props,ref)=>{const props=useProps2("ScrollArea",defaultProps2,_props),_a=props,{classNames:classNames,className:className,style:style,styles:styles,unstyled:unstyled,scrollbarSize:scrollbarSize,vars:vars,type:type,scrollHideDelay:scrollHideDelay,viewportProps:viewportProps,viewportRef:viewportRef,onScrollPositionChange:onScrollPositionChange,children:children,offsetScrollbars:offsetScrollbars,scrollbars:scrollbars}=_a,others=__objRest(_a,["classNames","className","style","styles","unstyled","scrollbarSize","vars","type","scrollHideDelay","viewportProps","viewportRef","onScrollPositionChange","children","offsetScrollbars","scrollbars"]),[scrollbarHovered,setScrollbarHovered]=useState8(!1),getStyles=useStyles({name:"ScrollArea",props:props,classes:ScrollArea_module_default,className:className,style:style,classNames:classNames,styles:styles,unstyled:unstyled,vars:vars,varsResolver:varsResolver});return React15.createElement(ScrollAreaRoot,__spreadValues(__spreadValues({type:"never"===type?"always":type,scrollHideDelay:scrollHideDelay,ref:ref,scrollbars:scrollbars},getStyles("root")),others),React15.createElement(ScrollAreaViewport,__spreadProps(__spreadValues(__spreadValues({},viewportProps),getStyles("viewport")),{ref:viewportRef,"data-offset-scrollbars":offsetScrollbars||void 0,"data-scrollbars":scrollbars||void 0,onScroll:"function"==typeof onScrollPositionChange?({currentTarget:currentTarget})=>onScrollPositionChange({x:currentTarget.scrollLeft,y:currentTarget.scrollTop}):void 0}),children),("xy"===scrollbars||"x"===scrollbars)&&React15.createElement(ScrollAreaScrollbar,__spreadProps(__spreadValues({},getStyles("scrollbar")),{orientation:"horizontal","data-hidden":"never"===type||void 0,forceMount:!0,onMouseEnter:()=>setScrollbarHovered(!0),onMouseLeave:()=>setScrollbarHovered(!1)}),React15.createElement(ScrollAreaThumb,__spreadValues({},getStyles("thumb")))),("xy"===scrollbars||"y"===scrollbars)&&React15.createElement(ScrollAreaScrollbar,__spreadProps(__spreadValues({},getStyles("scrollbar")),{orientation:"vertical","data-hidden":"never"===type||void 0,forceMount:!0,onMouseEnter:()=>setScrollbarHovered(!0),onMouseLeave:()=>setScrollbarHovered(!1)}),React15.createElement(ScrollAreaThumb,__spreadValues({},getStyles("thumb")))),React15.createElement(ScrollAreaCorner,__spreadProps(__spreadValues({},getStyles("corner")),{"data-hovered":scrollbarHovered||void 0,"data-hidden":"never"===type||void 0})))}));ScrollArea.displayName="@raikou/core/ScrollArea";var ScrollAreaAutosize=factory(((props,ref)=>{const _a=useProps2("ScrollAreaAutosize",defaultProps2,props),{children:children,classNames:classNames,styles:styles,scrollbarSize:scrollbarSize,scrollHideDelay:scrollHideDelay,type:type,dir:dir,offsetScrollbars:offsetScrollbars,viewportRef:viewportRef,onScrollPositionChange:onScrollPositionChange,unstyled:unstyled,variant:variant,viewportProps:viewportProps,scrollbars:scrollbars,style:style,vars:vars}=_a,others=__objRest(_a,["children","classNames","styles","scrollbarSize","scrollHideDelay","type","dir","offsetScrollbars","viewportRef","onScrollPositionChange","unstyled","variant","viewportProps","scrollbars","style","vars"]);return React15.createElement(Box3,__spreadProps(__spreadValues({},others),{ref:ref,style:[{display:"flex"},style]}),React15.createElement(Box3,{style:{display:"flex",flexDirection:"column",flex:1}},React15.createElement(ScrollArea,{classNames:classNames,styles:styles,scrollHideDelay:scrollHideDelay,scrollbarSize:scrollbarSize,type:type,dir:dir,offsetScrollbars:offsetScrollbars,viewportRef:viewportRef,onScrollPositionChange:onScrollPositionChange,unstyled:unstyled,variant:variant,viewportProps:viewportProps,vars:vars,scrollbars:scrollbars},children)))}));ScrollArea.classes=ScrollArea_module_default,ScrollAreaAutosize.displayName="@raikou/core/ScrollAreaAutosize",ScrollArea.Autosize=ScrollAreaAutosize;export{ScrollArea,ScrollAreaAutosize};