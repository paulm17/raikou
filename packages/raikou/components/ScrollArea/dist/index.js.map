{"version":3,"sources":["../src/index.ts","../src/ScrollArea.tsx","../src/ScrollAreaScrollbar/ScrollAreaScrollbar.tsx","../../_utils/create-safe-context/create-safe-context.tsx","../../_utils/create-optional-context/create-optional-context.tsx","../../_utils/use-hovered/use-hovered.ts","../../_utils/create-use-external-events/create-use-external-events.ts","../src/ScrollArea.context.ts","../src/ScrollAreaScrollbar/ScrollAreaScrollbarVisible.tsx","../src/ScrollAreaScrollbar/ScrollbarX.tsx","../src/ScrollAreaScrollbar/Scrollbar.tsx","../src/use-resize-observer.ts","../src/ScrollAreaScrollbar/Scrollbar.context.ts","../src/utils/is-scrolling-within-scrollbar-bounds.ts","../src/utils/get-thumb-ratio.tsx","../src/utils/get-thumb-size.tsx","../src/utils/compose-event-handlers.ts","../src/utils/to-int.ts","../src/utils/linear-scale.ts","../src/utils/get-thumb-offset-from-scroll.ts","../src/utils/get-scroll-position-from-pointer.ts","../src/utils/add-unlinked-scroll-listener.tsx","../src/ScrollAreaScrollbar/ScrollbarY.tsx","../src/ScrollAreaScrollbar/ScrollAreaScrollbarHover.tsx","../src/ScrollAreaScrollbar/ScrollAreaScrollbarAuto.tsx","../src/ScrollAreaScrollbar/ScrollAreaScrollbarScroll.tsx","../src/ScrollAreaCorner/ScrollAreaCorner.tsx","../src/ScrollAreaRoot/ScrollAreaRoot.tsx","../src/ScrollAreaViewport/ScrollAreaViewport.tsx","../src/ScrollAreaThumb/ScrollAreaThumb.tsx","css-module:./ScrollArea.module.css#css-module"],"sourcesContent":["export { ScrollArea, ScrollAreaAutosize } from './ScrollArea';\nexport type {\n  ScrollAreaProps,\n  ScrollAreaAutosizeProps,\n  ScrollAreaStylesNames,\n  ScrollAreaCssVariables,\n  ScrollAreaFactory,\n} from './ScrollArea';\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  rem,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { ScrollAreaScrollbar } from \"./ScrollAreaScrollbar/ScrollAreaScrollbar\";\nimport { ScrollAreaCorner } from \"./ScrollAreaCorner/ScrollAreaCorner\";\nimport { ScrollAreaRoot } from \"./ScrollAreaRoot/ScrollAreaRoot\";\nimport { ScrollAreaViewport } from \"./ScrollAreaViewport/ScrollAreaViewport\";\nimport { ScrollAreaThumb } from \"./ScrollAreaThumb/ScrollAreaThumb\";\nimport classes from \"./ScrollArea.module.css\";\n\nexport type ScrollAreaStylesNames =\n  | \"root\"\n  | \"viewport\"\n  | \"viewportInner\"\n  | \"scrollbar\"\n  | \"thumb\"\n  | \"corner\";\nexport type ScrollAreaCssVariables = {\n  root: \"--scrollarea-scrollbar-size\";\n};\n\nexport interface ScrollAreaProps\n  extends BoxProps,\n    StylesApiProps<ScrollAreaFactory>,\n    ElementProps<\"div\"> {\n  /** Scrollbar size, any valid CSS value for width/height, numbers are converted to rem, default value is 0.75rem */\n  scrollbarSize?: number | string;\n\n  /**\n   * Defines scrollbars behavior, `hover` by default\n   * - `hover` – scrollbars are visible when mouse is over the scroll area\n   * - `scroll` – scrollbars are visible when the scroll area is scrolled\n   * - `always` – scrollbars are always visible\n   * - `never` – scrollbars are always hidden\n   * - `auto` – similar to `overflow: auto` – scrollbars are always visible when the content is overflowing\n   * */\n  type?: \"auto\" | \"always\" | \"scroll\" | \"hover\" | \"never\";\n\n  /** Scroll hide delay in ms, applicable only when type is set to `hover` or `scroll`, `1000` by default */\n  scrollHideDelay?: number;\n\n  /** Axis at which scrollbars must be rendered, `'xy'` by default */\n  scrollbars?: \"x\" | \"y\" | \"xy\" | false;\n\n  /** Determines whether scrollbars should be offset with padding, `false` by default */\n  offsetScrollbars?: boolean | \"x\" | \"y\";\n\n  /** Assigns viewport element (scrollable container) ref */\n  viewportRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Props passed down to the viewport element */\n  viewportProps?: React.ComponentPropsWithRef<\"div\">;\n\n  /** Called with current position (`x` and `y` coordinates) when viewport is scrolled */\n  onScrollPositionChange?: (position: { x: number; y: number }) => void;\n}\n\nexport interface ScrollAreaAutosizeProps extends ScrollAreaProps {}\n\nexport type ScrollAreaFactory = Factory<{\n  props: ScrollAreaProps;\n  ref: HTMLDivElement;\n  stylesNames: ScrollAreaStylesNames;\n  vars: ScrollAreaCssVariables;\n  staticComponents: {\n    Autosize: typeof ScrollAreaAutosize;\n  };\n}>;\n\nconst defaultProps: Partial<ScrollAreaProps> = {\n  scrollHideDelay: 1000,\n  type: \"hover\",\n  scrollbars: \"xy\",\n};\n\nconst varsResolver = createVarsResolver<ScrollAreaFactory>(\n  (_, { scrollbarSize }) => ({\n    root: {\n      \"--scrollarea-scrollbar-size\": rem(scrollbarSize),\n    },\n  }),\n);\n\nexport const ScrollArea = factory<ScrollAreaFactory>((_props, ref) => {\n  const props = useProps(\"ScrollArea\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    scrollbarSize,\n    vars,\n    type,\n    scrollHideDelay,\n    viewportProps,\n    viewportRef,\n    onScrollPositionChange,\n    children,\n    offsetScrollbars,\n    scrollbars,\n    ...others\n  } = props;\n\n  const [scrollbarHovered, setScrollbarHovered] = useState(false);\n\n  const getStyles = useStyles<ScrollAreaFactory>({\n    name: \"ScrollArea\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ScrollAreaRoot\n      type={type === \"never\" ? \"always\" : type}\n      scrollHideDelay={scrollHideDelay}\n      ref={ref}\n      scrollbars={scrollbars}\n      {...getStyles(\"root\")}\n      {...others}\n    >\n      <ScrollAreaViewport\n        {...viewportProps}\n        {...getStyles(\"viewport\")}\n        ref={viewportRef}\n        data-offset-scrollbars={offsetScrollbars || undefined}\n        data-scrollbars={scrollbars || undefined}\n        onScroll={\n          typeof onScrollPositionChange === \"function\"\n            ? ({ currentTarget }) =>\n                onScrollPositionChange({\n                  x: currentTarget.scrollLeft,\n                  y: currentTarget.scrollTop,\n                })\n            : undefined\n        }\n      >\n        {children}\n      </ScrollAreaViewport>\n      {(scrollbars === \"xy\" || scrollbars === \"x\") && (\n        <ScrollAreaScrollbar\n          {...getStyles(\"scrollbar\")}\n          orientation=\"horizontal\"\n          data-hidden={type === \"never\" || undefined}\n          forceMount\n          onMouseEnter={() => setScrollbarHovered(true)}\n          onMouseLeave={() => setScrollbarHovered(false)}\n        >\n          <ScrollAreaThumb {...getStyles(\"thumb\")} />\n        </ScrollAreaScrollbar>\n      )}\n\n      {(scrollbars === \"xy\" || scrollbars === \"y\") && (\n        <ScrollAreaScrollbar\n          {...getStyles(\"scrollbar\")}\n          orientation=\"vertical\"\n          data-hidden={type === \"never\" || undefined}\n          forceMount\n          onMouseEnter={() => setScrollbarHovered(true)}\n          onMouseLeave={() => setScrollbarHovered(false)}\n        >\n          <ScrollAreaThumb {...getStyles(\"thumb\")} />\n        </ScrollAreaScrollbar>\n      )}\n      <ScrollAreaCorner\n        {...getStyles(\"corner\")}\n        data-hovered={scrollbarHovered || undefined}\n        data-hidden={type === \"never\" || undefined}\n      />\n    </ScrollAreaRoot>\n  );\n});\n\nScrollArea.displayName = \"@raikou/core/ScrollArea\";\n\nexport const ScrollAreaAutosize = factory<ScrollAreaFactory>((props, ref) => {\n  const {\n    children,\n    classNames,\n    styles,\n    scrollbarSize,\n    scrollHideDelay,\n    type,\n    dir,\n    offsetScrollbars,\n    viewportRef,\n    onScrollPositionChange,\n    unstyled,\n    variant,\n    viewportProps,\n    scrollbars,\n    style,\n    vars,\n    ...others\n  } = useProps(\"ScrollAreaAutosize\", defaultProps, props);\n\n  return (\n    <Box {...others} ref={ref} style={[{ display: \"flex\" }, style]}>\n      <Box style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}>\n        <ScrollArea\n          classNames={classNames}\n          styles={styles}\n          scrollHideDelay={scrollHideDelay}\n          scrollbarSize={scrollbarSize}\n          type={type}\n          dir={dir}\n          offsetScrollbars={offsetScrollbars}\n          viewportRef={viewportRef}\n          onScrollPositionChange={onScrollPositionChange}\n          unstyled={unstyled}\n          variant={variant}\n          viewportProps={viewportProps}\n          vars={vars}\n          scrollbars={scrollbars}\n        >\n          {children}\n        </ScrollArea>\n      </Box>\n    </Box>\n  );\n});\n\nScrollArea.classes = classes;\nScrollAreaAutosize.displayName = \"@raikou/core/ScrollAreaAutosize\";\nScrollArea.Autosize = ScrollAreaAutosize;\n","import React from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport {\n  ScrollAreaScrollbarVisible,\n  ScrollAreaScrollbarVisibleProps,\n} from './ScrollAreaScrollbarVisible';\nimport { ScrollAreaScrollbarHover } from './ScrollAreaScrollbarHover';\nimport { ScrollAreaScrollbarScroll } from './ScrollAreaScrollbarScroll';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto';\n\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbar = React.forwardRef<HTMLDivElement, ScrollAreaScrollbarProps>(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext();\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n","import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n","import { useEffect, useLayoutEffect } from 'react';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nconst useIsomorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n","import { createSafeContext } from \"../../_utils\";\n\nexport interface ScrollAreaContextValue {\n  type: \"auto\" | \"always\" | \"scroll\" | \"hover\" | \"never\";\n  scrollHideDelay: number;\n  scrollArea: HTMLDivElement | null;\n  viewport: HTMLDivElement | null;\n  onViewportChange: (viewport: HTMLDivElement | null) => void;\n  content: HTMLDivElement | null;\n  onContentChange: (content: HTMLDivElement) => void;\n  scrollbarX: HTMLDivElement | null;\n  onScrollbarXChange: (scrollbar: HTMLDivElement | null) => void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange: (rendered: boolean) => void;\n  scrollbarY: HTMLDivElement | null;\n  onScrollbarYChange: (scrollbar: HTMLDivElement | null) => void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange: (rendered: boolean) => void;\n  onCornerWidthChange: (width: number) => void;\n  onCornerHeightChange: (height: number) => void;\n}\n\nexport const [ScrollAreaProvider, useScrollAreaContext] =\n  createSafeContext<ScrollAreaContextValue>(\n    \"ScrollArea.Root component was not found in tree\",\n  );\n","import React, { useRef, useState, forwardRef } from \"react\";\nimport { useDirection } from \"@raikou/core\";\nimport {\n  ScrollAreaScrollbarAxisPrivateProps,\n  ScrollAreaScrollbarAxisProps,\n  Sizes,\n} from \"../ScrollArea.types\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport { ScrollAreaScrollbarX } from \"./ScrollbarX\";\nimport { ScrollAreaScrollbarY } from \"./ScrollbarY\";\nimport {\n  getThumbRatio,\n  getThumbOffsetFromScroll,\n  getScrollPositionFromPointer,\n} from \"../utils\";\n\nexport interface ScrollAreaScrollbarVisibleProps\n  extends Omit<\n    ScrollAreaScrollbarAxisProps,\n    keyof ScrollAreaScrollbarAxisPrivateProps\n  > {\n  orientation?: \"horizontal\" | \"vertical\";\n}\n\nexport const ScrollAreaScrollbarVisible = forwardRef<\n  HTMLDivElement,\n  ScrollAreaScrollbarVisibleProps\n>((props, forwardedRef) => {\n  const { orientation = \"vertical\", ...scrollbarProps } = props;\n  const { dir } = useDirection();\n  const context = useScrollAreaContext();\n  const thumbRef = useRef<HTMLDivElement | null>(null);\n  const pointerOffsetRef = useRef(0);\n  const [sizes, setSizes] = useState<Sizes>({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n\n  const commonProps: Omit<\n    ScrollAreaScrollbarAxisPrivateProps,\n    \"onThumbPositionChange\" | \"onDragScroll\" | \"onWheelScroll\"\n  > = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => {\n      thumbRef.current = thumb;\n    },\n    onThumbPointerUp: () => {\n      pointerOffsetRef.current = 0;\n    },\n    onThumbPointerDown: (pointerPos) => {\n      pointerOffsetRef.current = pointerPos;\n    },\n  };\n\n  const getScrollPosition = (pointerPos: number, direction?: \"ltr\" | \"rtl\") =>\n    getScrollPositionFromPointer(\n      pointerPos,\n      pointerOffsetRef.current,\n      sizes,\n      direction\n    );\n\n  if (orientation === \"horizontal\") {\n    return (\n      <ScrollAreaScrollbarX\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, dir);\n          }\n        }}\n      />\n    );\n  }\n\n  if (orientation === \"vertical\") {\n    return (\n      <ScrollAreaScrollbarY\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport)\n            context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }}\n      />\n    );\n  }\n\n  return null;\n});\n","import React, { forwardRef, useRef, useState, useEffect } from \"react\";\nimport { useMergedRef } from \"@raikou/hooks\";\nimport { Scrollbar } from \"./Scrollbar\";\nimport { ScrollAreaScrollbarAxisProps } from \"../ScrollArea.types\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport {\n  isScrollingWithinScrollbarBounds,\n  getThumbSize,\n  toInt,\n} from \"../utils\";\n\nexport const ScrollAreaScrollbarX = forwardRef<\n  HTMLDivElement,\n  ScrollAreaScrollbarAxisProps\n>((props, forwardedRef) => {\n  const { sizes, onSizesChange, style, ...others } = props;\n  const ctx = useScrollAreaContext();\n  const [computedStyle, setComputedStyle] = useState<CSSStyleDeclaration>();\n  const ref = useRef<HTMLDivElement>(null);\n  const composeRefs = useMergedRef(forwardedRef, ref, ctx.onScrollbarXChange);\n\n  useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <Scrollbar\n      data-orientation=\"horizontal\"\n      {...others}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        ...style,\n        [\"--sa-thumb-width\" as any]: `${getThumbSize(sizes)}px`,\n      }}\n      onThumbPointerDown={(pointerPos) =>\n        props.onThumbPointerDown(pointerPos.x)\n      }\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (ctx.viewport) {\n          const scrollPos = ctx.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && ctx.viewport && computedStyle) {\n          onSizesChange({\n            content: ctx.viewport.scrollWidth,\n            viewport: ctx.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n","import React, { useEffect, forwardRef } from \"react\";\nimport {\n  useMergedRef,\n  useCallbackRef,\n  useDebounceCallback,\n} from \"@raikou/hooks\";\nimport { useResizeObserver } from \"../use-resize-observer\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport { Sizes } from \"../ScrollArea.types\";\nimport { ScrollbarProvider, ScrollbarContextValue } from \"./Scrollbar.context\";\nimport { composeEventHandlers } from \"../utils\";\n\nexport interface ScrollbarPrivateProps {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContextValue[\"onThumbChange\"];\n  onThumbPointerUp: ScrollbarContextValue[\"onThumbPointerUp\"];\n  onThumbPointerDown: ScrollbarContextValue[\"onThumbPointerDown\"];\n  onThumbPositionChange: ScrollbarContextValue[\"onThumbPositionChange\"];\n  onWheelScroll: (event: WheelEvent, maxScrollPos: number) => void;\n  onDragScroll: (pointerPos: { x: number; y: number }) => void;\n  onResize: () => void;\n}\n\ninterface ScrollbarProps\n  extends ScrollbarPrivateProps,\n    Omit<React.ComponentPropsWithoutRef<\"div\">, \"onResize\"> {}\n\nexport const Scrollbar = forwardRef<HTMLDivElement, ScrollbarProps>(\n  (props, forwardedRef) => {\n    const {\n      sizes,\n      hasThumb,\n      onThumbChange,\n      onThumbPointerUp,\n      onThumbPointerDown,\n      onThumbPositionChange,\n      onDragScroll,\n      onWheelScroll,\n      onResize,\n      ...scrollbarProps\n    } = props;\n    const context = useScrollAreaContext();\n    const [scrollbar, setScrollbar] = React.useState<HTMLDivElement | null>(\n      null,\n    );\n    const composeRefs = useMergedRef(forwardedRef, (node) =>\n      setScrollbar(node),\n    );\n    const rectRef = React.useRef<ClientRect | null>(null);\n    const prevWebkitUserSelectRef = React.useRef<string>(\"\");\n    const { viewport } = context;\n    const maxScrollPos = sizes.content - sizes.viewport;\n    const handleWheelScroll = useCallbackRef(onWheelScroll);\n    const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n    const handleResize = useDebounceCallback(onResize, 10);\n\n    const handleDragScroll = (event: React.PointerEvent<HTMLElement>) => {\n      if (rectRef.current) {\n        const x = event.clientX - rectRef.current.left;\n        const y = event.clientY - rectRef.current.top;\n        onDragScroll({ x, y });\n      }\n    };\n\n    useEffect(() => {\n      const handleWheel = (event: WheelEvent) => {\n        const element = event.target as HTMLElement;\n        const isScrollbarWheel = scrollbar?.contains(element);\n        if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n      };\n      document.addEventListener(\"wheel\", handleWheel, { passive: false });\n      return () =>\n        document.removeEventListener(\"wheel\", handleWheel, {\n          passive: false,\n        } as any);\n    }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n    useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n    useResizeObserver(scrollbar, handleResize);\n    useResizeObserver(context.content, handleResize);\n\n    return (\n      <ScrollbarProvider\n        value={{\n          scrollbar,\n          hasThumb,\n          onThumbChange: useCallbackRef(onThumbChange),\n          onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n          onThumbPositionChange: handleThumbPositionChange,\n          onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n        }}\n      >\n        <div\n          {...scrollbarProps}\n          ref={composeRefs}\n          style={{ position: \"absolute\", ...scrollbarProps.style }}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            const mainPointer = 0;\n            if (event.button === mainPointer) {\n              const element = event.target as HTMLElement;\n              element.setPointerCapture(event.pointerId);\n              rectRef.current = scrollbar!.getBoundingClientRect();\n              prevWebkitUserSelectRef.current =\n                document.body.style.webkitUserSelect;\n              document.body.style.webkitUserSelect = \"none\";\n              handleDragScroll(event);\n            }\n          })}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            handleDragScroll,\n          )}\n          onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n            const element = event.target as HTMLElement;\n            if (element.hasPointerCapture(event.pointerId)) {\n              element.releasePointerCapture(event.pointerId);\n            }\n            document.body.style.webkitUserSelect =\n              prevWebkitUserSelectRef.current;\n            rectRef.current = null;\n          })}\n        />\n      </ScrollbarProvider>\n    );\n  },\n);\n\nScrollbar.displayName = \"@raikou/Scrollbar\";\n","import { useIsomorphicEffect, useCallbackRef } from \"@raikou/hooks\";\n\nexport function useResizeObserver(\n  element: HTMLElement | null,\n  onResize: () => void\n) {\n  const handleResize = useCallbackRef(onResize);\n\n  useIsomorphicEffect(() => {\n    let rAF = 0;\n    if (element) {\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n\n      resizeObserver.observe(element);\n\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n\n    return undefined;\n  }, [element, handleResize]);\n}\n","import { createSafeContext } from \"../../../_utils\";\n\nexport interface ScrollbarContextValue {\n  hasThumb: boolean;\n  scrollbar: HTMLDivElement | null;\n  onThumbChange: (thumb: HTMLDivElement | null) => void;\n  onThumbPointerUp: () => void;\n  onThumbPointerDown: (pointerPos: { x: number; y: number }) => void;\n  onThumbPositionChange: () => void;\n}\n\nexport const [ScrollbarProvider, useScrollbarContext] =\n  createSafeContext<ScrollbarContextValue>(\n    \"ScrollAreaScrollbar was not found in tree\",\n  );\n","export function isScrollingWithinScrollbarBounds(scrollPos: number, maxScrollPos: number) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\n","export function getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize;\n  return Number.isNaN(ratio) ? 0 : ratio;\n}\n","import type { Sizes } from '../ScrollArea.types';\nimport { getThumbRatio } from './get-thumb-ratio';\n\nexport function getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  return Math.max(thumbSize, 18);\n}\n","export function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return (event: E) => {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !(event as unknown as Event).defaultPrevented) {\n      ourEventHandler?.(event);\n    }\n  };\n}\n","export function toInt(value?: string) {\n  return value ? parseInt(value, 10) : 0;\n}\n","export function linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n","import type { Sizes } from '../ScrollArea.types';\nimport { getThumbSize } from './get-thumb-size';\nimport { linearScale } from './linear-scale';\n\nfunction clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport function getThumbOffsetFromScroll(\n  scrollPos: number,\n  sizes: Sizes,\n  dir: 'rtl' | 'ltr' = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n","import type { Sizes } from '../ScrollArea.types';\nimport { getThumbSize } from './get-thumb-size';\nimport { linearScale } from './linear-scale';\n\nexport function getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: 'ltr' | 'rtl' = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange as [number, number]);\n  return interpolate(pointerPos);\n}\n","/* eslint-disable wrap-iife */\nexport function addUnlinkedScrollListener(node: HTMLElement, handler = () => {}) {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n}\n","import React, { forwardRef, useEffect, useRef } from \"react\";\nimport { useMergedRef } from \"@raikou/hooks\";\nimport { Scrollbar } from \"./Scrollbar\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport { ScrollAreaScrollbarAxisProps } from \"../ScrollArea.types\";\nimport {\n  isScrollingWithinScrollbarBounds,\n  getThumbSize,\n  toInt,\n} from \"../utils\";\n\nexport const ScrollAreaScrollbarY = forwardRef<\n  HTMLDivElement,\n  ScrollAreaScrollbarAxisProps\n>((props, forwardedRef) => {\n  const { sizes, onSizesChange, style, ...others } = props;\n  const context = useScrollAreaContext();\n  const [computedStyle, setComputedStyle] =\n    React.useState<CSSStyleDeclaration>();\n  const ref = useRef<HTMLDivElement>(null);\n  const composeRefs = useMergedRef(\n    forwardedRef,\n    ref,\n    context.onScrollbarYChange\n  );\n\n  useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <Scrollbar\n      {...others}\n      data-orientation=\"vertical\"\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        [\"--sa-thumb-height\" as any]: `${getThumbSize(sizes)}px`,\n        ...style,\n      }}\n      onThumbPointerDown={(pointerPos) =>\n        props.onThumbPointerDown(pointerPos.y)\n      }\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAuto, ScrollAreaScrollbarAutoProps } from './ScrollAreaScrollbarAuto';\n\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbarHover = forwardRef<HTMLDivElement, ScrollAreaScrollbarHoverProps>(\n  (props, ref) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext();\n    const [visible, setVisible] = useState(false);\n\n    useEffect(() => {\n      const { scrollArea } = context;\n      let hideTimer = 0;\n      if (scrollArea) {\n        const handlePointerEnter = () => {\n          window.clearTimeout(hideTimer);\n          setVisible(true);\n        };\n        const handlePointerLeave = () => {\n          hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n        };\n        scrollArea.addEventListener('pointerenter', handlePointerEnter);\n        scrollArea.addEventListener('pointerleave', handlePointerLeave);\n        return () => {\n          window.clearTimeout(hideTimer);\n          scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n          scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n        };\n      }\n\n      return undefined;\n    }, [context.scrollArea, context.scrollHideDelay]);\n\n    if (forceMount || visible) {\n      return (\n        <ScrollAreaScrollbarAuto\n          data-state={visible ? 'visible' : 'hidden'}\n          {...scrollbarProps}\n          ref={ref}\n        />\n      );\n    }\n\n    return null;\n  }\n);\n","import React, { forwardRef, useState } from \"react\";\nimport { useDebounceCallback } from \"@raikou/hooks\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport {\n  ScrollAreaScrollbarVisibleProps,\n  ScrollAreaScrollbarVisible,\n} from \"./ScrollAreaScrollbarVisible\";\nimport { useResizeObserver } from \"../use-resize-observer\";\n\nexport interface ScrollAreaScrollbarAutoProps\n  extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbarAuto = forwardRef<\n  HTMLDivElement,\n  ScrollAreaScrollbarAutoProps\n>((props, ref) => {\n  const context = useScrollAreaContext();\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX =\n        context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY =\n        context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  if (forceMount || visible) {\n    return (\n      <ScrollAreaScrollbarVisible\n        data-state={visible ? \"visible\" : \"hidden\"}\n        {...scrollbarProps}\n        ref={ref}\n      />\n    );\n  }\n\n  return null;\n});\n","import React, { forwardRef, useEffect, useState } from \"react\";\nimport { useDebounceCallback } from \"@raikou/hooks\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport {\n  ScrollAreaScrollbarVisible,\n  ScrollAreaScrollbarVisibleProps,\n} from \"./ScrollAreaScrollbarVisible\";\nimport { composeEventHandlers } from \"../utils\";\n\ninterface ScrollAreaScrollbarScrollProps\n  extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbarScroll = forwardRef<\n  HTMLDivElement,\n  ScrollAreaScrollbarScrollProps\n>((props, red) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext();\n  const isHorizontal = props.orientation === \"horizontal\";\n  const [state, setState] = useState<\n    \"hidden\" | \"idle\" | \"interacting\" | \"scrolling\"\n  >(\"hidden\");\n  const debounceScrollEnd = useDebounceCallback(() => setState(\"idle\"), 100);\n\n  useEffect(() => {\n    if (state === \"idle\") {\n      const hideTimer = window.setTimeout(\n        () => setState(\"hidden\"),\n        context.scrollHideDelay\n      );\n      return () => window.clearTimeout(hideTimer);\n    }\n\n    return undefined;\n  }, [state, context.scrollHideDelay]);\n\n  useEffect(() => {\n    const { viewport } = context;\n    const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          setState(\"scrolling\");\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n\n    return undefined;\n  }, [context.viewport, isHorizontal, debounceScrollEnd]);\n\n  if (forceMount || state !== \"hidden\") {\n    return (\n      <ScrollAreaScrollbarVisible\n        data-state={state === \"hidden\" ? \"hidden\" : \"visible\"}\n        {...scrollbarProps}\n        ref={red}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () =>\n          setState(\"interacting\")\n        )}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, () =>\n          setState(\"idle\")\n        )}\n      />\n    );\n  }\n\n  return null;\n});\n","import React from \"react\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport { useResizeObserver } from \"../use-resize-observer\";\n\ninterface ScrollAreaCornerProps extends React.ComponentPropsWithoutRef<\"div\"> {}\n\nexport const Corner = React.forwardRef<HTMLDivElement, ScrollAreaCornerProps>(\n  (props, ref) => {\n    const { style, ...others } = props;\n    const ctx = useScrollAreaContext();\n    const [width, setWidth] = React.useState(0);\n    const [height, setHeight] = React.useState(0);\n    const hasSize = Boolean(width && height);\n\n    useResizeObserver(ctx.scrollbarX, () => {\n      const h = ctx.scrollbarX?.offsetHeight || 0;\n      ctx.onCornerHeightChange(h);\n      setHeight(h);\n    });\n\n    useResizeObserver(ctx.scrollbarY, () => {\n      const w = ctx.scrollbarY?.offsetWidth || 0;\n      ctx.onCornerWidthChange(w);\n      setWidth(w);\n    });\n\n    return hasSize ? (\n      <div {...others} ref={ref} style={{ ...style, width, height }} />\n    ) : null;\n  }\n);\n\nexport const ScrollAreaCorner = React.forwardRef<\n  HTMLDivElement,\n  ScrollAreaCornerProps\n>((props, ref) => {\n  const ctx = useScrollAreaContext();\n  const hasBothScrollbarsVisible = Boolean(ctx.scrollbarX && ctx.scrollbarY);\n  const hasCorner = ctx.type !== \"scroll\" && hasBothScrollbarsVisible;\n  return hasCorner ? <Corner {...props} ref={ref} /> : null;\n});\n","import React, { useState, forwardRef } from \"react\";\nimport { useMergedRef } from \"@raikou/hooks\";\nimport { Box, BoxProps, ElementProps, useProps, Factory } from \"@raikou/core\";\nimport { ScrollAreaProvider } from \"../ScrollArea.context\";\n\nexport type ScrollAreaRootStylesNames =\n  | \"root\"\n  | \"viewport\"\n  | \"viewportInner\"\n  | \"scrollbar\"\n  | \"thumb\"\n  | \"corner\";\n\nexport type ScrollAreaRootCssVariables = {\n  root: \"--sa-corner-width\" | \"--sa-corner-height\";\n};\n\nexport interface ScrollAreaRootStylesCtx {\n  cornerWidth: number;\n  cornerHeight: number;\n}\n\nexport interface ScrollAreaRootProps extends BoxProps, ElementProps<\"div\"> {\n  /**\n   * Defines scrollbars behavior, `hover` by default\n   * - `hover` – scrollbars are visible when mouse is over the scroll area\n   * - `scroll` – scrollbars are visible when the scroll area is scrolled\n   * - `always` – scrollbars are always visible\n   * - `never` – scrollbars are always hidden\n   * - `auto` – similar to `overflow: auto` – scrollbars are always visible when the content is overflowing\n   * */\n  type?: \"auto\" | \"always\" | \"scroll\" | \"hover\" | \"never\";\n\n  /** Axis at which scrollbars must be rendered, `'xy'` by default */\n  scrollbars?: \"x\" | \"y\" | \"xy\" | false;\n\n  /** Scroll hide delay in ms, applicable only when type is set to `hover` or `scroll`, `1000` by default */\n  scrollHideDelay?: number;\n}\n\nexport type ScrollAreaRootFactory = Factory<{\n  props: ScrollAreaRootProps;\n  ref: HTMLDivElement;\n  stylesNames: ScrollAreaRootStylesNames;\n}>;\n\nconst defaultProps: Partial<ScrollAreaRootProps> = {\n  scrollHideDelay: 1000,\n  type: \"hover\",\n};\n\nexport const ScrollAreaRoot = forwardRef<HTMLDivElement, ScrollAreaRootProps>(\n  (_props, ref) => {\n    const props = useProps(\"ScrollAreaRoot\", defaultProps, _props);\n    const { type, scrollHideDelay, scrollbars, ...others } = props;\n\n    const [scrollArea, setScrollArea] = useState<HTMLDivElement | null>(null);\n    const [viewport, setViewport] = useState<HTMLDivElement | null>(null);\n    const [content, setContent] = useState<HTMLDivElement | null>(null);\n    const [scrollbarX, setScrollbarX] = useState<HTMLDivElement | null>(null);\n    const [scrollbarY, setScrollbarY] = useState<HTMLDivElement | null>(null);\n    const [cornerWidth, setCornerWidth] = useState(0);\n    const [cornerHeight, setCornerHeight] = useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = useState(false);\n    const rootRef = useMergedRef(ref, (node) => setScrollArea(node));\n\n    return (\n      <ScrollAreaProvider\n        value={{\n          type: type!,\n          scrollHideDelay: scrollHideDelay!,\n          scrollArea,\n          viewport,\n          onViewportChange: setViewport,\n          content,\n          onContentChange: setContent,\n          scrollbarX,\n          onScrollbarXChange: setScrollbarX,\n          scrollbarXEnabled,\n          onScrollbarXEnabledChange: setScrollbarXEnabled,\n          scrollbarY,\n          onScrollbarYChange: setScrollbarY,\n          scrollbarYEnabled,\n          onScrollbarYEnabledChange: setScrollbarYEnabled,\n          onCornerWidthChange: setCornerWidth,\n          onCornerHeightChange: setCornerHeight,\n        }}\n      >\n        <Box\n          {...others}\n          ref={rootRef}\n          __vars={{\n            \"--sa-corner-width\":\n              scrollbars !== \"xy\" ? \"0px\" : `${cornerWidth}px`,\n            \"--sa-corner-height\":\n              scrollbars !== \"xy\" ? \"0px\" : `${cornerHeight}px`,\n          }}\n        />\n      </ScrollAreaProvider>\n    );\n  },\n);\n\nScrollAreaRoot.displayName = \"@raikou/core/ScrollAreaRoot\";\n","import React, { forwardRef } from \"react\";\nimport { useMergedRef } from \"@raikou/hooks\";\nimport { Box, BoxProps, ElementProps } from \"@raikou/core\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\n\nexport interface ScrollAreaViewportProps\n  extends BoxProps,\n    ElementProps<\"div\"> {}\n\nexport const ScrollAreaViewport = forwardRef<\n  HTMLDivElement,\n  ScrollAreaViewportProps\n>(({ children, style, ...others }, ref) => {\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n\n  return (\n    <Box\n      {...others}\n      ref={rootRef}\n      style={{\n        overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n        overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n        ...style,\n      }}\n    >\n      <div\n        style={{ minWidth: \"100%\", display: \"table\" }}\n        ref={ctx.onContentChange}\n      >\n        {children}\n      </div>\n    </Box>\n  );\n});\n\nScrollAreaViewport.displayName = \"@raikou/core/ScrollAreaViewport\";\n","import React, { forwardRef, useRef, useEffect } from \"react\";\nimport { useDebounceCallback, useMergedRef } from \"@raikou/hooks\";\nimport { useScrollbarContext } from \"../ScrollAreaScrollbar/Scrollbar.context\";\nimport { useScrollAreaContext } from \"../ScrollArea.context\";\nimport { addUnlinkedScrollListener, composeEventHandlers } from \"../utils\";\n\ninterface ThumbProps extends React.ComponentPropsWithoutRef<\"div\"> {}\n\nexport const Thumb = forwardRef<HTMLDivElement, ThumbProps>(\n  (props, forwardedRef) => {\n    const { style, ...others } = props;\n    const scrollAreaContext = useScrollAreaContext();\n    const scrollbarContext = useScrollbarContext();\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useMergedRef(forwardedRef, (node) =>\n      scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = useRef<() => void>();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = undefined;\n      }\n    }, 100);\n\n    useEffect(() => {\n      const { viewport } = scrollAreaContext;\n      if (viewport) {\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(\n              viewport,\n              onThumbPositionChange\n            );\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener(\"scroll\", handleScroll);\n        return () => viewport.removeEventListener(\"scroll\", handleScroll);\n      }\n\n      return undefined;\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n    return (\n      <div\n        data-state={scrollbarContext.hasThumb ? \"visible\" : \"hidden\"}\n        {...others}\n        ref={composedRef}\n        style={{\n          width: \"var(--sa-thumb-width)\",\n          height: \"var(--sa-thumb-height)\",\n          ...style,\n        }}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          (event) => {\n            const thumb = event.target as HTMLElement;\n            const thumbRect = thumb.getBoundingClientRect();\n            const x = event.clientX - thumbRect.left;\n            const y = event.clientY - thumbRect.top;\n            scrollbarContext.onThumbPointerDown({ x, y });\n          }\n        )}\n        onPointerUp={composeEventHandlers(\n          props.onPointerUp,\n          scrollbarContext.onThumbPointerUp\n        )}\n      />\n    );\n  }\n);\n\ninterface ScrollAreaThumbProps extends ThumbProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaThumb = React.forwardRef<\n  HTMLDivElement,\n  ScrollAreaThumbProps\n>((props, forwardedRef) => {\n  const { forceMount, ...thumbProps } = props;\n  const scrollbarContext = useScrollbarContext();\n\n  if (forceMount || scrollbarContext.hasThumb) {\n    return <Thumb ref={forwardedRef} {...thumbProps} />;\n  }\n\n  return null;\n});\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/ScrollArea/src/ScrollArea.module.css\"; export default {\"root\":\"m-d57069b5\",\"viewport\":\"m-c0783ff9\",\"viewportInner\":\"m-f8f631dd\",\"scrollbar\":\"m-c44ba933\",\"thumb\":\"m-d8b5e363\",\"corner\":\"m-21657268\"}"],"mappings":"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","names":["import_react","import_core","import_react","React","import_react","import_react","import_react","import_react","import_react","import_hooks","import_react","import_hooks","React","React","import_react","import_hooks","React","React","import_react","import_react","import_hooks","React","React","import_react","import_hooks","React","React","import_react","React","_a","import_react","import_hooks","import_core","React","import_react","import_hooks","import_core","React","import_react","import_hooks","React","defaultProps","React"]}