.pickerControl {
  @mixin where-light {
    --raikou-calendar-picker-control-hover-background-color: #f8f9fa;
  }
  @mixin where-dark {
    --raikou-calendar-picker-control-hover-background-color: #2c2e33;
  }

  --dpc-size-xs: 30px;
  --dpc-size-sm: 36px;
  --dpc-size-md: 42px;
  --dpc-size-lg: 48px;
  --dpc-size-xl: 54px;
  --dpc-size: var(--dpc-size-sm);

  font-size: var(--dpc-fz, var(--raikou-font-size-sm));
  height: var(--dpc-size);
  width: calc((var(--dpc-size) * 7) / 3 + rem(1.5px));
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  cursor: pointer;
  background-color: transparent;
  color: var(--raikou-color-text);
  opacity: 1;
  border-radius: var(--raikou-radius-default);

  @mixin hover {
    &:where(:not([data-disabled], :disabled)) {
      @mixin where-light {
        background-color: var(
          --raikou-calendar-picker-control-hover-background-color
        );
      }

      @mixin where-dark {
        background-color: var(
          --raikou-calendar-picker-control-hover-background-color
        );
      }
    }
  }

  &:where(:disabled, [data-disabled]) {
    color: var(--raikou-color-dimmed);
    cursor: not-allowed;
    opacity: 0.5;
  }

  &:where([data-selected]) {
    background-color: var(--raikou-primary-color-filled);
    color: var(--raikou-primary-color-contrast, var(--raikou-color-white));

    @mixin hover {
      background-color: var(--raikou-primary-color-filled-hover);
    }
  }

  &:where([data-in-range]) {
    background-color: var(--raikou-primary-color-light-hover);
    border-radius: 0;

    @mixin hover {
      background-color: var(--raikou-primary-color-light);
    }
  }

  &:where([data-first-in-range]) {
    border-radius: 0;
    border-start-start-radius: var(--raikou-radius-default);
    border-end-start-radius: var(--raikou-radius-default);
  }

  &:where([data-last-in-range]) {
    border-radius: 0;
    border-end-end-radius: var(--raikou-radius-default);
    border-start-end-radius: var(--raikou-radius-default);
  }

  &:where([data-first-in-range][data-last-in-range]) {
    border-radius: var(--raikou-radius-default);
  }
}
