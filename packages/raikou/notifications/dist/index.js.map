{"version":3,"sources":["../src/index.ts","../src/notifications.store.ts","../../store/src/store.ts","../src/Notifications.tsx","../../components/Portal/src/Portal.tsx","../../components/Portal/src/OptionalPortal.tsx","../src/NotificationContainer.tsx","../../components/Notification/src/Notification.tsx","../../components/Loader/src/Loader.tsx","../../components/Loader/src/loaders/Bars.tsx","../../../../node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs","css-module:../Loader.module.css#css-module","../../components/Loader/src/loaders/Oval.tsx","../../components/Loader/src/loaders/Progress.tsx","../../components/Loader/src/loaders/Dots.tsx","css-module:./Loader.module.css#css-module","../../components/CloseButton/src/CloseIcon.tsx","../../components/CloseButton/src/CloseButton.tsx","../../components/UnstyledButton/src/UnstyledButton.tsx","css-module:./UnstyledButton.module.css#css-module","css-module:./CloseButton.module.css#css-module","css-module:./Notification.module.css#css-module","../src/get-auto-close/get-auto-close.ts","../src/get-notification-state-styles.ts","css-module:./Notifications.module.css#css-module"],"sourcesContent":["export {\n  notifications,\n  showNotification,\n  hideNotification,\n  cleanNotifications,\n  cleanNotificationsQueue,\n  updateNotification,\n  updateNotificationsState,\n  createNotificationsStore,\n  notificationsStore,\n  useNotifications,\n} from './notifications.store';\nexport { Notifications } from './Notifications';\n\nexport type {\n  NotificationData,\n  NotificationsState,\n  NotificationsStore,\n} from './notifications.store';\nexport type {\n  NotificationsCssVariables,\n  NotificationsFactory,\n  NotificationsProps,\n  NotificationsStylesNames,\n} from './Notifications';\n","import { NotificationProps } from \"../../components/Notification/src\";\nimport { randomId } from \"@raikou/hooks\";\nimport { createStore, useStore, RaikouStore } from \"@raikou/store\";\n\nexport interface NotificationData extends Omit<NotificationProps, \"onClose\"> {\n  /** Notification id, can be used to close or update notification */\n  id?: string;\n\n  /** Notification message, required for all notifications */\n  message: React.ReactNode;\n\n  /** Determines whether notification should be closed automatically,\n   *  number is auto close timeout in ms, overrides `autoClose` from `Notifications`\n   * */\n  autoClose?: boolean | number;\n\n  /** Called when notification closes */\n  onClose?: (props: NotificationData) => void;\n\n  /** Called when notification opens */\n  onOpen?: (props: NotificationData) => void;\n}\n\nexport interface NotificationsState {\n  notifications: NotificationData[];\n  queue: NotificationData[];\n  limit: number;\n}\n\nexport type NotificationsStore = RaikouStore<NotificationsState>;\n\nexport const createNotificationsStore = () =>\n  createStore<NotificationsState>({\n    notifications: [],\n    queue: [],\n    limit: 5,\n  });\n\nexport const notificationsStore = createNotificationsStore();\nexport const useNotifications = (\n  store: NotificationsStore = notificationsStore,\n) => useStore(store);\n\nexport function updateNotificationsState(\n  store: NotificationsStore,\n  update: (notifications: NotificationData[]) => NotificationData[],\n) {\n  const state = store.getState();\n  const notifications = update([...state.notifications, ...state.queue]);\n\n  store.setState({\n    notifications: notifications.slice(0, state.limit),\n    queue: notifications.slice(state.limit),\n    limit: state.limit,\n  });\n}\n\nexport function showNotification(\n  notification: NotificationData,\n  store: NotificationsStore = notificationsStore,\n) {\n  const id = notification.id || randomId();\n\n  updateNotificationsState(store, (notifications) => {\n    if (\n      notification.id &&\n      notifications.some((n) => n.id === notification.id)\n    ) {\n      return notifications;\n    }\n\n    return [...notifications, { ...notification, id }];\n  });\n\n  return id;\n}\n\nexport function hideNotification(\n  id: string,\n  store: NotificationsStore = notificationsStore,\n) {\n  updateNotificationsState(store, (notifications) =>\n    notifications.filter((notification) => {\n      if (notification.id === id) {\n        notification.onClose?.(notification);\n        return false;\n      }\n\n      return true;\n    }),\n  );\n\n  return id;\n}\n\nexport function updateNotification(\n  notification: NotificationData,\n  store: NotificationsStore = notificationsStore,\n) {\n  updateNotificationsState(store, (notifications) =>\n    notifications.map((item) => {\n      if (item.id === notification.id) {\n        return { ...item, ...notification };\n      }\n\n      return item;\n    }),\n  );\n\n  return notification.id;\n}\n\nexport function cleanNotifications(\n  store: NotificationsStore = notificationsStore,\n) {\n  updateNotificationsState(store, () => []);\n}\n\nexport function cleanNotificationsQueue(\n  store: NotificationsStore = notificationsStore,\n) {\n  updateNotificationsState(store, (notifications) =>\n    notifications.slice(0, store.getState().limit),\n  );\n}\n\nexport const notifications = {\n  show: showNotification,\n  hide: hideNotification,\n  update: updateNotification,\n  clean: cleanNotifications,\n  cleanQueue: cleanNotificationsQueue,\n  updateState: updateNotificationsState,\n} as const;\n","import { useSyncExternalStore } from \"react\";\n\nexport type RaikouStoreSubscriber<Value> = (value: Value) => void;\ntype SetStateCallback<Value> = (value: Value) => Value;\n\nexport interface RaikouStore<Value> {\n  getState: () => Value;\n  setState: (value: Value | SetStateCallback<Value>) => void;\n  updateState: (value: Value | SetStateCallback<Value>) => void;\n  initialize: (value: Value) => void;\n  subscribe: (callback: RaikouStoreSubscriber<Value>) => () => void;\n}\n\nexport type RaikouStoreValue<Store extends RaikouStore<any>> = ReturnType<\n  Store[\"getState\"]\n>;\n\nexport function createStore<Value extends Record<string, any>>(\n  initialState: Value,\n): RaikouStore<Value> {\n  let state = initialState;\n  let initialized = false;\n  const listeners = new Set<RaikouStoreSubscriber<Value>>();\n\n  return {\n    getState() {\n      return state;\n    },\n\n    updateState(value) {\n      state = typeof value === \"function\" ? value(state) : value;\n    },\n\n    setState(value) {\n      this.updateState(value);\n      listeners.forEach((listener) => listener(state));\n    },\n\n    initialize(value) {\n      if (!initialized) {\n        state = value;\n        initialized = true;\n      }\n    },\n\n    subscribe(callback) {\n      listeners.add(callback);\n      return () => listeners.delete(callback);\n    },\n  };\n}\n\nexport function useStore<Store extends RaikouStore<any>>(store: Store) {\n  return useSyncExternalStore<RaikouStoreValue<Store>>(\n    store.subscribe,\n    () => store.getState(),\n    () => store.getState(),\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport {\n  Transition as _Transition,\n  TransitionGroup,\n  TransitionStatus,\n} from \"react-transition-group\";\nimport { useForceUpdate, useDidUpdate, useReducedMotion } from \"@raikou/hooks\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  getDefaultZIndex,\n  useRaikouTheme,\n  rem,\n} from \"@raikou/core\";\nimport { PortalProps, OptionalPortal } from \"../../components/Portal/src\";\nimport {\n  useNotifications,\n  NotificationsStore,\n  notificationsStore,\n  hideNotification,\n  notifications,\n} from \"./notifications.store\";\nimport { NotificationContainer } from \"./NotificationContainer\";\nimport { getNotificationStateStyles } from \"./get-notification-state-styles\";\nimport classes from \"./Notifications.module.css\";\n\nconst Transition: any = _Transition;\n\nexport type NotificationsStylesNames = \"root\" | \"notification\";\nexport type NotificationsCssVariables = {\n  root:\n    | \"--notifications-z-index\"\n    | \"--notifications-top\"\n    | \"--notifications-right\"\n    | \"--notifications-left\"\n    | \"--notifications-left\"\n    | \"--notifications-transform\"\n    | \"--notifications-container-width\";\n};\n\nexport interface NotificationsProps\n  extends BoxProps,\n    StylesApiProps<NotificationsFactory>,\n    ElementProps<\"div\"> {\n  /** Notifications position, `'bottom-right'` by default */\n  position?:\n    | \"top-left\"\n    | \"top-right\"\n    | \"top-center\"\n    | \"bottom-left\"\n    | \"bottom-right\"\n    | \"bottom-center\";\n\n  /** Auto close timeout for all notifications in ms, `false` to disable auto close, can be overwritten for individual notifications in `notifications.show` function, `4000` by defualt */\n  autoClose?: number | false;\n\n  /** Notification transition duration in ms, `250` by default */\n  transitionDuration?: number;\n\n  /** Notification width, cannot exceed 100%, `440` by default */\n  containerWidth?: number | string;\n\n  /** Notification `max-height`, used for transitions, `200` by default */\n  notificationMaxHeight?: number | string;\n\n  /** Maximum number of notifications displayed at a time, other new notifications will be added to queue, `5` by default */\n  limit?: number;\n\n  /** Notifications container z-index, `400` by default */\n  zIndex?: React.CSSProperties[\"zIndex\"];\n\n  /** Props passed down to the `Portal` component */\n  portalProps?: Omit<PortalProps, \"children\">;\n\n  /** Store for notifications state, can be used to create multiple instances of notifications system in your application */\n  store?: NotificationsStore;\n\n  /** Determines whether notifications container should be rendered inside `Portal`, `true` by default */\n  withinPortal?: boolean;\n}\n\nexport type NotificationsFactory = Factory<{\n  props: NotificationsProps;\n  ref: HTMLDivElement;\n  stylesNames: NotificationsStylesNames;\n  vars: NotificationsCssVariables;\n  staticComponents: {\n    show: typeof notifications.show;\n    hide: typeof notifications.hide;\n    update: typeof notifications.update;\n    clean: typeof notifications.clean;\n    cleanQueue: typeof notifications.cleanQueue;\n    updateState: typeof notifications.updateState;\n  };\n}>;\n\nconst defaultProps: Partial<NotificationsProps> = {\n  position: \"bottom-right\",\n  autoClose: 4000,\n  transitionDuration: 250,\n  containerWidth: 440,\n  notificationMaxHeight: 200,\n  limit: 5,\n  zIndex: getDefaultZIndex(\"overlay\"),\n  store: notificationsStore,\n  withinPortal: true,\n};\n\nconst varsResolver = createVarsResolver<NotificationsFactory>(\n  (_, { zIndex, position, containerWidth }) => {\n    const [vertical, horizontal] = position!.split(\"-\");\n\n    return {\n      root: {\n        \"--notifications-z-index\": zIndex?.toString(),\n        \"--notifications-top\":\n          vertical === \"top\" ? \"var(--raikou-spacing-md)\" : undefined,\n        \"--notifications-bottom\":\n          vertical === \"bottom\" ? \"var(--raikou-spacing-md)\" : undefined,\n        \"--notifications-left\":\n          horizontal === \"left\"\n            ? \"var(--raikou-spacing-md)\"\n            : horizontal === \"center\"\n            ? \"50%\"\n            : undefined,\n        \"--notifications-right\":\n          horizontal === \"right\" ? \"var(--raikou-spacing-md)\" : undefined,\n        \"--notifications-transform\":\n          horizontal === \"center\" ? \"translateX(-50%)\" : undefined,\n        \"--notifications-container-width\": rem(containerWidth),\n      },\n    };\n  },\n);\n\nexport const Notifications = factory<NotificationsFactory>((_props, ref) => {\n  const props = useProps(\"Notifications\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    position,\n    autoClose,\n    transitionDuration,\n    containerWidth,\n    notificationMaxHeight,\n    limit,\n    zIndex,\n    store,\n    portalProps,\n    withinPortal,\n    ...others\n  } = props;\n\n  const theme = useRaikouTheme();\n  const data = useNotifications(store);\n  const forceUpdate = useForceUpdate();\n  const shouldReduceMotion = useReducedMotion();\n  const refs = useRef<Record<string, HTMLDivElement>>({});\n  const previousLength = useRef<number>(0);\n\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n\n  const getStyles = useStyles<NotificationsFactory>({\n    name: \"Notifications\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  useEffect(() => {\n    store?.updateState((current) => ({ ...current, limit: limit || 5 }));\n  }, [limit]);\n\n  useDidUpdate(() => {\n    if (data.notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = data.notifications.length;\n  }, [data.notifications]);\n\n  const items = data.notifications.map(\n    ({ style: notificationStyle, ...notification }) => (\n      <Transition\n        key={notification.id}\n        timeout={duration}\n        onEnter={() => refs.current[notification.id!].offsetHeight}\n        nodeRef={{ current: refs.current[notification.id!] }}\n      >\n        {(state: TransitionStatus) => (\n          <NotificationContainer\n            ref={(node) => {\n              refs.current[notification.id!] = node!;\n            }}\n            data={notification}\n            onHide={(id) => hideNotification(id, store)}\n            autoClose={autoClose!}\n            {...getStyles(\"notification\", {\n              style: {\n                ...getNotificationStateStyles({\n                  state,\n                  position,\n                  transitionDuration: duration!,\n                  maxHeight: notificationMaxHeight!,\n                }),\n                ...notificationStyle,\n              },\n            })}\n          />\n        )}\n      </Transition>\n    ),\n  );\n\n  return (\n    <OptionalPortal withinPortal={withinPortal} {...portalProps}>\n      <Box {...getStyles(\"root\")} ref={ref} {...others}>\n        <TransitionGroup>{items}</TransitionGroup>\n      </Box>\n    </OptionalPortal>\n  );\n});\n\nNotifications.classes = classes;\nNotifications.displayName = \"@raikou/notifications/Notifications\";\nNotifications.show = notifications.show;\nNotifications.hide = notifications.hide;\nNotifications.update = notifications.update;\nNotifications.clean = notifications.clean;\nNotifications.cleanQueue = notifications.cleanQueue;\nNotifications.updateState = notifications.updateState;\n","import React, { useRef, useState, forwardRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useIsomorphicEffect, assignRef } from \"@raikou/hooks\";\nimport { useProps } from \"@raikou/core\";\n\nfunction createPortalNode(props: React.ComponentPropsWithoutRef<\"div\">) {\n  const node = document.createElement(\"div\");\n  node.setAttribute(\"data-portal\", \"true\");\n  // eslint-disable-next-line\n  typeof props.className === \"string\" &&\n    node.classList.add(...props.className.split(\" \").filter(Boolean));\n  // eslint-disable-next-line\n  typeof props.style === \"object\" && Object.assign(node.style, props.style);\n  // eslint-disable-next-line\n  typeof props.id === \"string\" && node.setAttribute(\"id\", props.id);\n  return node;\n}\n\nexport interface PortalProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  /** Portal children, for example, custom modal or popover */\n  children: React.ReactNode;\n\n  /** Element inside which portal should be created, by default a new div element is created and appended to the `document.body` */\n  target?: HTMLElement | string;\n}\n\nconst defaultProps: Partial<PortalProps> = {};\n\n// @ts-ignore\nexport const Portal = forwardRef<HTMLDivElement, PortalProps>((props, ref) => {\n  const { children, target, ...others } = useProps(\n    \"Portal\",\n    defaultProps,\n    props,\n  );\n\n  const [mounted, setMounted] = useState(false);\n  const nodeRef = useRef<HTMLElement | null>(null);\n\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    nodeRef.current = !target\n      ? createPortalNode(others)\n      : typeof target === \"string\"\n      ? document.querySelector(target)\n      : target;\n\n    assignRef(ref, nodeRef.current);\n\n    if (!target && nodeRef.current) {\n      document.body.appendChild(nodeRef.current);\n    }\n\n    return () => {\n      if (!target && nodeRef.current) {\n        document.body.removeChild(nodeRef.current);\n      }\n    };\n  }, [target]);\n\n  if (!mounted || !nodeRef.current) {\n    return null;\n  }\n\n  return createPortal(<>{children}</>, nodeRef.current);\n});\n\nPortal.displayName = \"@raikou/core/Portal\";\n","import React from \"react\";\nimport { Portal, PortalProps } from \"./Portal\";\n\nexport interface OptionalPortalProps extends PortalProps {\n  /** Determines whether children should be rendered inside `<Portal />` */\n  withinPortal?: boolean;\n}\n\nexport function OptionalPortal({\n  withinPortal = true,\n  children,\n  ...others\n}: OptionalPortalProps) {\n  if (withinPortal) {\n    return <Portal {...others}>{children}</Portal>;\n  }\n\n  return <>{children}</>;\n}\n\nOptionalPortal.displayName = \"@raikou/core/OptionalPortal\";\n","import React, { forwardRef, useRef, useEffect } from \"react\";\nimport {\n  Notification,\n  NotificationProps,\n} from \"../../components/Notification/src\";\nimport { NotificationData } from \"./notifications.store\";\nimport { getAutoClose } from \"./get-auto-close/get-auto-close\";\n\ninterface NotificationContainerProps extends NotificationProps {\n  data: NotificationData;\n  onHide: (id: string) => void;\n  autoClose: number | false;\n}\n\nexport const NotificationContainer = forwardRef<\n  HTMLDivElement,\n  NotificationContainerProps\n>(({ data, onHide, autoClose, ...others }, ref) => {\n  const { autoClose: _autoClose, message, ...notificationProps } = data;\n  const autoCloseDuration = getAutoClose(autoClose, data.autoClose);\n  const autoCloseTimeout = useRef<number>();\n\n  const cancelAutoClose = () => window.clearTimeout(autoCloseTimeout.current);\n\n  const handleHide = () => {\n    onHide(data.id!);\n    cancelAutoClose();\n  };\n\n  const handleAutoClose = () => {\n    if (typeof autoCloseDuration === \"number\") {\n      autoCloseTimeout.current = window.setTimeout(\n        handleHide,\n        autoCloseDuration,\n      );\n    }\n  };\n\n  useEffect(() => {\n    data.onOpen?.(data);\n  }, []);\n\n  useEffect(() => {\n    handleAutoClose();\n    return cancelAutoClose;\n  }, [autoCloseDuration]);\n\n  return (\n    <Notification\n      {...others}\n      {...notificationProps}\n      onClose={handleHide}\n      ref={ref}\n      onMouseEnter={cancelAutoClose}\n      onMouseLeave={handleAutoClose}\n    >\n      {message as any}\n    </Notification>\n  );\n});\n\nNotificationContainer.displayName =\n  \"@raikou/notifications/NotificationContainer\";\n","import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  useStyles,\n  createVarsResolver,\n  Factory,\n  RaikouRadius,\n  RaikouColor,\n  getRadius,\n  getThemeColor,\n} from \"@raikou/core\";\nimport { Loader } from \"../../Loader/src\";\nimport { CloseButton } from \"../../CloseButton/src\";\nimport classes from \"./Notification.module.css\";\n\nexport type NotificationStylesNames =\n  | \"root\"\n  | \"icon\"\n  | \"loader\"\n  | \"body\"\n  | \"title\"\n  | \"description\"\n  | \"closeButton\";\nexport type NotificationCssVariables = {\n  root: \"--notification-radius\" | \"--notification-color\";\n};\n\nexport interface NotificationProps\n  extends BoxProps,\n    StylesApiProps<NotificationFactory>,\n    ElementProps<\"div\", \"title\"> {\n  variant?: string;\n\n  /** Called when close button is clicked */\n  onClose?: () => void;\n\n  /** Controls notification line or icon color, key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: RaikouColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: RaikouRadius;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed before body */\n  title?: React.ReactNode;\n\n  /** Notification body, place main text here */\n  children?: React.ReactNode;\n\n  /** Replaces colored line or icon with Loader component */\n  loading?: boolean;\n\n  /** Determines whether notification should have a border, `false` by default */\n  withBorder?: boolean;\n\n  /** Determines whether close button should be visible, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: Record<string, any>;\n}\n\nexport type NotificationFactory = Factory<{\n  props: NotificationProps;\n  ref: HTMLDivElement;\n  stylesNames: NotificationStylesNames;\n  vars: NotificationCssVariables;\n}>;\n\nconst defaultProps: Partial<NotificationProps> = {\n  withCloseButton: true,\n};\n\nconst varsResolver = createVarsResolver<NotificationFactory>(\n  (theme, { radius, color }) => ({\n    root: {\n      \"--notification-radius\":\n        radius === undefined ? undefined : getRadius(radius),\n      \"--notification-color\": color ? getThemeColor(color, theme) : undefined,\n    },\n  }),\n);\n\nexport const Notification = factory<NotificationFactory>((_props, ref) => {\n  const props = useProps(\"Notification\", defaultProps, _props);\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    withCloseButton,\n    withBorder,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NotificationFactory>({\n    name: \"Notification\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles(\"root\")}\n      mod={[\n        { \"data-with-icon\": !!icon || loading, \"data-with-border\": withBorder },\n        mod,\n      ]}\n      ref={ref}\n      variant={variant}\n      {...others}\n      role=\"alert\"\n    >\n      {icon && !loading && <div {...getStyles(\"icon\")}>{icon}</div>}\n      {loading && <Loader size={28} color={color} {...getStyles(\"loader\")} />}\n\n      <div {...getStyles(\"body\")}>\n        {title && <div {...getStyles(\"title\")}>{title}</div>}\n\n        <Box {...getStyles(\"description\")} mod={{ \"data-with-title\": !!title }}>\n          {children}\n        </Box>\n      </div>\n\n      {withCloseButton && (\n        <CloseButton\n          iconSize={16}\n          color=\"gray\"\n          {...closeButtonProps}\n          onClick={onClose}\n          {...getStyles(\"closeButton\")}\n        />\n      )}\n    </Box>\n  );\n});\n\nNotification.classes = classes;\nNotification.displayName = \"@raikou/core/Notification\";\n","import React from \"react\";\nimport {\n  Box,\n  RaikouSize,\n  RaikouColor,\n  BoxProps,\n  useProps,\n  getThemeColor,\n  StylesApiProps,\n  useStyles,\n  factory,\n  getSize,\n  createVarsResolver,\n  Factory,\n} from \"@raikou/core\";\nimport { Bars } from \"./loaders/Bars\";\nimport { Oval } from \"./loaders/Oval\";\nimport { Progress } from \"./loaders/Progress\";\nimport { Dots } from \"./loaders/Dots\";\nimport type { RaikouLoader, RaikouLoadersRecord } from \"./Loader.types\";\nimport classes from \"./Loader.module.css\";\n\nexport type LoaderStylesNames = \"root\";\nexport type LoaderCssVariables = {\n  root: \"--loader-size\" | \"--loader-color\";\n};\n\nexport interface LoaderProps\n  extends BoxProps,\n    StylesApiProps<LoaderFactory>,\n    Omit<React.ComponentPropsWithoutRef<\"svg\">, keyof BoxProps> {\n  /** Controls `width` and `height` of the loader. `Loader` has predefined `xs`-`xl` values. Numbers are converted to rem. Default value is `'md'` */\n  size?: RaikouSize | (string & {}) | number;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: RaikouColor;\n\n  /** Loader type, key of `loaders` prop, default value is `'oval'` */\n  type?: RaikouLoader;\n\n  /** Object of loaders components, can be customized via default props or inline. Default value contains `bars`, `oval` and `dots` */\n  loaders?: RaikouLoadersRecord;\n\n  /** Overrides default loader with given content */\n  children?: React.ReactNode;\n}\n\nexport type LoaderFactory = Factory<{\n  props: LoaderProps;\n  ref: HTMLSpanElement;\n  stylesNames: LoaderStylesNames;\n  vars: LoaderCssVariables;\n  staticComponents: {\n    defaultLoaders: typeof defaultLoaders;\n  };\n}>;\n\nexport const defaultLoaders: RaikouLoadersRecord = {\n  bars: Bars,\n  oval: Oval,\n  dots: Dots,\n  progress: Progress,\n};\n\nconst defaultProps: Partial<LoaderProps> = {\n  loaders: defaultLoaders,\n  type: \"oval\",\n};\n\nconst varsResolver = createVarsResolver<LoaderFactory>(\n  (theme, { size, color }) => ({\n    root: {\n      \"--loader-size\": getSize(size, \"loader-size\"),\n      \"--loader-color\": color ? getThemeColor(color, theme) : undefined,\n    },\n  }),\n);\n\nexport const Loader = factory<LoaderFactory>((_props, ref) => {\n  const props = useProps(\"Loader\", defaultProps, _props);\n  const {\n    size,\n    color,\n    type,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    loaders,\n    variant,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<LoaderFactory>({\n    name: \"Loader\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (children) {\n    return (\n      <Box {...getStyles(\"root\")} ref={ref as any} {...(others as any)}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      {...getStyles(\"root\")}\n      ref={ref}\n      component={(loaders as any)[type!]}\n      variant={variant}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nLoader.defaultLoaders = defaultLoaders;\nLoader.displayName = \"@raikou/core/Loader\";\nLoader.classes = classes;\n","import React, { forwardRef } from \"react\";\nimport cx from \"clsx\";\nimport { Box } from \"@raikou/core\";\nimport { RaikouLoaderComponent } from \"../Loader.types\";\nimport classes from \"../Loader.module.css\";\n\nexport const Bars: RaikouLoaderComponent = forwardRef(\n  ({ className, ...others }, ref) => (\n    <Box\n      component=\"span\"\n      className={cx(classes.barsLoader, className)}\n      {...others}\n      ref={ref}\n    >\n      <span className={classes.bar} />\n      <span className={classes.bar} />\n      <span className={classes.bar} />\n    </Box>\n  ),\n);\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Loader/src/Loader.module.css\"; export default {\"root\":\"m-5ae2e3c\",\"barsLoader\":\"m-7a2bd4cd\",\"bar\":\"m-870bb79\",\"bars-loader-animation\":\"m-5d2b3b9d\",\"dotsLoader\":\"m-4e3f22d7\",\"dot\":\"m-870c4af\",\"loader-dots-animation\":\"m-aac34a1\",\"ovalLoader\":\"m-b34414df\",\"oval-loader-animation\":\"m-f8e89c4b\",\"progressLoader\":\"m-f7590d7a\"}","import React, { forwardRef } from \"react\";\nimport cx from \"clsx\";\nimport { Box } from \"@raikou/core\";\nimport { RaikouLoaderComponent } from \"../Loader.types\";\nimport classes from \"../Loader.module.css\";\n\nexport const Oval: RaikouLoaderComponent = forwardRef(\n  ({ className, ...others }, ref) => (\n    <Box\n      component=\"span\"\n      className={cx(classes.ovalLoader, className)}\n      {...others}\n      ref={ref}\n    />\n  ),\n);\n","import React, { forwardRef } from \"react\";\nimport cx from \"clsx\";\nimport { Box } from \"@raikou/core\";\nimport { RaikouLoaderComponent } from \"../Loader.types\";\nimport classes from \"../Loader.module.css\";\n\nexport const Progress: RaikouLoaderComponent = forwardRef(\n  ({ className, ...others }, ref) => (\n    <Box\n      component=\"span\"\n      className={cx(classes.progressLoader, className)}\n      {...others}\n      ref={ref}\n    >\n      <svg viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(2.5 2.5)\" strokeWidth=\"5\">\n            <circle strokeOpacity=\".5\" cx=\"16\" cy=\"16\" r=\"16\" />\n            <path d=\"M32 16c0-9.94-8.06-16-16-16\">\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 16 16\"\n                to=\"360 16 16\"\n                dur=\"1s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n          </g>\n        </g>\n      </svg>\n    </Box>\n  ),\n);\n","import React, { forwardRef } from \"react\";\nimport cx from \"clsx\";\nimport { Box } from \"@raikou/core\";\nimport { RaikouLoaderComponent } from \"../Loader.types\";\nimport classes from \"../Loader.module.css\";\n\nexport const Dots: RaikouLoaderComponent = forwardRef(\n  ({ className, ...others }, ref) => (\n    <Box\n      component=\"span\"\n      className={cx(classes.dotsLoader, className)}\n      {...others}\n      ref={ref}\n    >\n      <span className={classes.dot} />\n      <span className={classes.dot} />\n      <span className={classes.dot} />\n    </Box>\n  ),\n);\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Loader/src/Loader.module.css\"; export default {\"root\":\"m-5ae2e3c\",\"barsLoader\":\"m-7a2bd4cd\",\"bar\":\"m-870bb79\",\"bars-loader-animation\":\"m-5d2b3b9d\",\"dotsLoader\":\"m-4e3f22d7\",\"dot\":\"m-870c4af\",\"loader-dots-animation\":\"m-aac34a1\",\"ovalLoader\":\"m-b34414df\",\"oval-loader-animation\":\"m-f8e89c4b\",\"progressLoader\":\"m-f7590d7a\"}","import React, { forwardRef } from \"react\";\n\nexport interface CloseIconProps extends React.ComponentPropsWithoutRef<\"svg\"> {\n  /** Icon width and height, `var(--icon-size)` by default */\n  size?: string;\n}\n\nexport const CloseIcon = forwardRef<SVGSVGElement, CloseIconProps>(\n  ({ size = \"var(--cb-icon-size, 70%)\", style, ...others }, ref) => (\n    <svg\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ ...style, width: size, height: size }}\n      ref={ref}\n      {...others}\n    >\n      <path\n        d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  ),\n);\n\nCloseIcon.displayName = \"@raikou/core/CloseIcon\";\n","import React from \"react\";\nimport {\n  polymorphicFactory,\n  useProps,\n  rem,\n  PolymorphicFactory,\n  RaikouSize,\n  RaikouRadius,\n  BoxProps,\n  StylesApiProps,\n  getSize,\n  getRadius,\n  createVarsResolver,\n  useStyles,\n} from \"@raikou/core\";\nimport { UnstyledButton } from \"../../UnstyledButton/src\";\nimport { CloseIcon } from \"./CloseIcon\";\nimport classes from \"./CloseButton.module.css\";\n\nexport type CloseButtonVariant = \"subtle\" | \"transparent\";\nexport type CloseButtonStylesNames = \"root\";\nexport type CloseButtonCssVariables = {\n  root: \"--cb-icon-size\" | \"--cb-size\" | \"--cb-radius\";\n};\n\nexport interface __CloseButtonProps {\n  \"data-disabled\"?: boolean;\n\n  /** Controls width and height of the button. Numbers are converted to rem. `'md'` by default. */\n  size?: RaikouSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: RaikouRadius;\n\n  /** Sets `disabled` and `data-disabled` attributes on the button element */\n  disabled?: boolean;\n\n  /** `X` icon `width` and `height`, `80%` by default */\n  iconSize?: number | string;\n\n  /** Content rendered inside the button, for example `VisuallyHidden` with label for screen readers */\n  children?: React.ReactNode;\n\n  /** Replaces default close icon. If set, `iconSize` prop is ignored. */\n  icon?: React.ReactNode;\n}\n\nexport interface CloseButtonProps\n  extends __CloseButtonProps,\n    BoxProps,\n    StylesApiProps<CloseButtonFactory> {}\n\nexport type CloseButtonFactory = PolymorphicFactory<{\n  props: CloseButtonProps;\n  defaultComponent: \"button\";\n  defaultRef: HTMLButtonElement;\n  stylesNames: CloseButtonStylesNames;\n  variant: CloseButtonVariant;\n  vars: CloseButtonCssVariables;\n}>;\n\nconst defaultProps: Partial<CloseButtonProps> = {\n  variant: \"subtle\",\n  size: \"md\",\n};\n\nconst varsResolver = createVarsResolver<CloseButtonFactory>(\n  (_, { size, radius, iconSize }) => ({\n    root: {\n      \"--cb-size\": getSize(size, \"cb-size\"),\n      \"--cb-radius\": radius === undefined ? undefined : getRadius(radius),\n      \"--cb-icon-size\": rem(iconSize),\n    },\n  }),\n);\n\nexport const CloseButton = polymorphicFactory<CloseButtonFactory>(\n  (_props, ref) => {\n    const props = useProps(\"CloseButton\", defaultProps, _props);\n    const {\n      iconSize,\n      children,\n      vars,\n      radius,\n      className,\n      classNames,\n      style,\n      styles,\n      unstyled,\n      \"data-disabled\": dataDisabled,\n      disabled,\n      variant,\n      icon,\n      mod,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<CloseButtonFactory>({\n      name: \"CloseButton\",\n      props,\n      className,\n      style,\n      classes,\n      classNames,\n      styles,\n      unstyled,\n      vars,\n      varsResolver,\n    });\n\n    return (\n      <UnstyledButton\n        ref={ref}\n        {...others}\n        unstyled={unstyled}\n        variant={variant}\n        disabled={disabled}\n        mod={[{ disabled: disabled || dataDisabled }, mod]}\n        {...getStyles(\"root\", { variant, active: true })}\n      >\n        {icon || <CloseIcon />}\n        {children}\n      </UnstyledButton>\n    );\n  },\n);\n\nCloseButton.displayName = \"@raikou/core/CloseButton\";\nCloseButton.classes = classes;\n","import React from \"react\";\nimport {\n  Box,\n  useProps,\n  StylesApiProps,\n  useStyles,\n  polymorphicFactory,\n  BoxComponentProps,\n  PolymorphicFactory,\n} from \"@raikou/core\";\nimport classes from \"./UnstyledButton.module.css\";\n\nexport type UnstyledButtonStylesNames = \"root\";\n\nexport interface UnstyledButtonProps\n  extends Omit<BoxComponentProps, \"vars\" | \"variant\">,\n    StylesApiProps<UnstyledButtonFactory> {\n  __staticSelector?: string;\n}\n\nconst defaultProps: Partial<UnstyledButtonProps> = {\n  __staticSelector: \"UnstyledButton\",\n};\n\nexport type UnstyledButtonFactory = PolymorphicFactory<{\n  props: UnstyledButtonProps;\n  stylesNames: UnstyledButtonStylesNames;\n  defaultComponent: \"button\";\n  defaultRef: HTMLButtonElement;\n}>;\n\nexport const UnstyledButton = polymorphicFactory<UnstyledButtonFactory>(\n  (_props: UnstyledButtonProps & { component?: any }, ref) => {\n    const props = useProps(\"UnstyledButton\", defaultProps, _props);\n    const {\n      className,\n      component = \"button\",\n      __staticSelector,\n      unstyled,\n      classNames,\n      styles,\n      style,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<UnstyledButtonFactory>({\n      name: __staticSelector!,\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n    });\n\n    return (\n      <Box\n        {...getStyles(\"root\", { focusable: true })}\n        component={component}\n        ref={ref}\n        type={component === \"button\" ? \"button\" : undefined}\n        {...others}\n      />\n    );\n  },\n);\n\nUnstyledButton.displayName = \"@raikou/core/UnstyledButton\";\nUnstyledButton.classes = classes;\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/UnstyledButton/src/UnstyledButton.module.css\"; export default {\"root\":\"m-87cf2631\"}","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/CloseButton/src/CloseButton.module.css\"; export default {\"root\":\"m-86a44da5\",\"root--subtle\":\"m-220c80f2\"}","import \"/Users/paul/development/src/github/raikou/packages/raikou/components/Notification/src/Notification.module.css\"; export default {\"root\":\"m-a513464\",\"icon\":\"m-a4ceffb\",\"loader\":\"m-b0920b15\",\"body\":\"m-a49ed24\",\"title\":\"m-3feedf16\",\"description\":\"m-3d733a3a\",\"closeButton\":\"m-919a4d88\"}","export function getAutoClose(\n  autoClose: boolean | number | undefined,\n  notificationAutoClose: boolean | number | undefined\n) {\n  if (typeof notificationAutoClose === 'number') {\n    return notificationAutoClose;\n  }\n\n  if (notificationAutoClose === false || autoClose === false) {\n    return false;\n  }\n\n  return autoClose;\n}\n","import { TransitionStatus } from 'react-transition-group';\nimport type { NotificationsProps } from './Notifications';\n\ninterface NotificationStateStylesProps {\n  state: TransitionStatus;\n  maxHeight: number | string;\n  position: NotificationsProps['position'];\n  transitionDuration: number;\n}\n\nconst transforms = {\n  left: 'translateX(-100%)',\n  right: 'translateX(100%)',\n  'top-center': 'translateY(-100%)',\n  'bottom-center': 'translateY(100%)',\n};\n\nconst noTransform = {\n  left: 'translateX(0)',\n  right: 'translateX(0)',\n  'top-center': 'translateY(0)',\n  'bottom-center': 'translateY(0)',\n};\n\nexport function getNotificationStateStyles({\n  state,\n  maxHeight,\n  position,\n  transitionDuration,\n}: NotificationStateStylesProps): React.CSSProperties {\n  const [vertical, horizontal] = position!.split('-');\n  const property = (\n    horizontal === 'center' ? `${vertical}-center` : horizontal\n  ) as keyof typeof transforms;\n\n  const commonStyles: React.CSSProperties = {\n    opacity: 0,\n    maxHeight,\n    transform: transforms[property],\n    transitionDuration: `${transitionDuration}ms, ${transitionDuration}ms, ${transitionDuration}ms`,\n    transitionTimingFunction: 'cubic-bezier(.51,.3,0,1.21), cubic-bezier(.51,.3,0,1.21), linear',\n    transitionProperty: 'opacity, transform, max-height',\n  };\n\n  const inState: React.CSSProperties = {\n    opacity: 1,\n    transform: noTransform[property],\n  };\n\n  const outState: React.CSSProperties = {\n    opacity: 0,\n    maxHeight: 0,\n    transform: transforms[property],\n  };\n\n  const transitionStyles = {\n    entering: inState,\n    entered: inState,\n    exiting: outState,\n    exited: outState,\n  };\n\n  return { ...commonStyles, ...transitionStyles[state as keyof typeof transitionStyles] };\n}\n","import \"/Users/paul/development/src/github/raikou/packages/raikou/notifications/src/Notifications.module.css\"; export default {\"root\":\"m-b37d9ac7\",\"notification\":\"m-5ed0edd0\"}"],"mappings":"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","names":["notifications","import_react","import_hooks","import_core","import_react","import_hooks","React","import_react","React","import_react","import_react","import_core","import_react","import_core","import_react","import_core","React","import_react","import_core","React","import_react","import_core","React","import_react","import_core","React","Loader_module_default","defaultProps","Loader_module_default","React","import_react","React","import_react","import_core","import_react","import_core","defaultProps","React","defaultProps","varsResolver","React","defaultProps","varsResolver","React","_a","React","_Transition","defaultProps","varsResolver","React"]}